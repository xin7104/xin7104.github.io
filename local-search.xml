<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>72</title>
    <link href="/2025/08/17/72/"/>
    <url>/2025/08/17/72/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><p>先看计网，操作系统，打基础<br>计算机网络看这个<br><a href="https://www.bilibili.com/video/BV1JV411t7ow/?spm_id_from=333.337.search-card.all.click&vd_source=0dd314b514fd4d0b07dbe711263b6a48">中科大郑烇、杨坚全套《计算机网络（自顶向下方法 第7版，James F.Kurose，Keith W.Ross）》课程_哔哩哔哩_bilibili</a><br>操作系统看这个<br><a href="https://www.bilibili.com/video/BV1YE411D7nH/?spm_id_from=333.337.search-card.all.click&vd_source=0dd314b514fd4d0b07dbe711263b6a48">王道计算机考研 操作系统_哔哩哔哩_bilibili</a></p><p>网盘的ACWING工程课先看linux，web，然后是Django</p><p>去攻防世界刷题，也就是<br><a href="https://adworld.xctf.org.cn/">https://adworld.xctf.org.cn/</a><br>免费题库里做题</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>25-7-9</title>
    <link href="/2025/07/09/25-7-9/"/>
    <url>/2025/07/09/25-7-9/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><p>备赛国赛，这里更新一下常用模块，从之前的工程扒拉出来。<br>基于STM32F407ZGT6</p><h2 id="串口屏相关函数-串口屏不在手边待验证"><a href="#串口屏相关函数-串口屏不在手边待验证" class="headerlink" title="串口屏相关函数(串口屏不在手边待验证)"></a>串口屏相关函数(串口屏不在手边待验证)</h2><p>D:\project\STM32\STM32MX_Project\day\test_chuan\Project  这里copy的<br>.c文件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;chuan.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;main.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-comment">//反转字符串</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">reverse</span><span class="hljs-params">(<span class="hljs-type">char</span> str[], <span class="hljs-type">int</span> length)</span> &#123;<br>    <span class="hljs-type">int</span> start = <span class="hljs-number">0</span>;<br>    <span class="hljs-type">int</span> end = length - <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> (start &lt; end) &#123;<br>        <span class="hljs-type">char</span> temp = str[start];<br>        str[start] = str[end];<br>        str[end] = temp;<br>        start++;<br>        end--;<br>    &#125;<br>&#125;<br><span class="hljs-comment">//itoa函数，将整数转换为字符串</span><br><span class="hljs-comment">//转换好的字符串+&#x27;\0&#x27; 后面的不会覆盖</span><br><span class="hljs-type">char</span>* <span class="hljs-title function_">itoa</span><span class="hljs-params">(<span class="hljs-type">int</span> num, <span class="hljs-type">char</span>* str, <span class="hljs-type">int</span> base)</span> &#123;<br>    <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>;<br>    <span class="hljs-type">int</span> isNegative = <span class="hljs-number">0</span>;<br><br>    <span class="hljs-comment">// 处理 0 的情况</span><br>    <span class="hljs-keyword">if</span> (num == <span class="hljs-number">0</span>) &#123;<br>        str[i++] = <span class="hljs-string">&#x27;0&#x27;</span>;<br>        str[i] = <span class="hljs-string">&#x27;\0&#x27;</span>;<br>        <span class="hljs-keyword">return</span> str;<br>    &#125;<br>    <span class="hljs-comment">// 处理负数（仅限于十进制）</span><br>    <span class="hljs-keyword">if</span> (num &lt; <span class="hljs-number">0</span> &amp;&amp; base == <span class="hljs-number">10</span>) &#123;<br>        isNegative = <span class="hljs-number">1</span>;<br>        num = -num;<br>    &#125;<br>    <span class="hljs-comment">// 处理数字转换</span><br>    <span class="hljs-keyword">while</span> (num != <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-type">int</span> rem = num % base;<br>        str[i++] = (rem &gt; <span class="hljs-number">9</span>) ? (rem - <span class="hljs-number">10</span>) + <span class="hljs-string">&#x27;a&#x27;</span> : rem + <span class="hljs-string">&#x27;0&#x27;</span>;<br>        num = num / base;<br>    &#125;<br>    <span class="hljs-comment">// 如果是负数，添加负号</span><br>    <span class="hljs-keyword">if</span> (isNegative) &#123;<br>        str[i++] = <span class="hljs-string">&#x27;-&#x27;</span>;<br>    &#125;<br>    str[i] = <span class="hljs-string">&#x27;\0&#x27;</span>; <span class="hljs-comment">// 添加字符串结束符</span><br>    <span class="hljs-comment">// 反转字符串</span><br>    reverse(str, i);<br>    <span class="hljs-keyword">return</span> str;<br>&#125;<br><span class="hljs-type">void</span> <span class="hljs-title function_">Send</span><span class="hljs-params">(<span class="hljs-type">int</span> a,<span class="hljs-type">int</span> ch)</span><br>&#123;<br><span class="hljs-type">char</span> str[<span class="hljs-number">15</span>];<br>itoa(a,str,<span class="hljs-number">10</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;add 1,%d,&quot;</span>,ch);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>,str);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\xff\xff\xff&quot;</span>);<br>&#125;<br><span class="hljs-comment">//发送字符串+数值 第一个参数是控件，第二个是数值</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">SendData</span><span class="hljs-params">(<span class="hljs-type">char</span>* ch,<span class="hljs-type">int</span> a)</span><br>&#123;<br><span class="hljs-type">char</span> str[<span class="hljs-number">15</span>];<br>itoa(a,str,<span class="hljs-number">10</span>);<br><span class="hljs-type">uint8_t</span> sz=<span class="hljs-built_in">strlen</span>(ch);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>,ch);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>,str);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\xff\xff\xff&quot;</span>);<br>&#125;<br><span class="hljs-comment">//发送字符串*2  第一个参数是控件，第二个是内容</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">SendString</span><span class="hljs-params">(<span class="hljs-type">char</span>* ch1,<span class="hljs-type">char</span>* ch2)</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s\&quot;&quot;</span>,ch1);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s\&quot;&quot;</span>,ch2);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\xff\xff\xff&quot;</span>);<br>&#125;<br><br></code></pre></td></tr></table></figure><p>.h文件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> __CHUAN_H__</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> __CHUAN_H__</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">reverse</span><span class="hljs-params">(<span class="hljs-type">char</span> str[], <span class="hljs-type">int</span> length)</span>;<br><span class="hljs-type">char</span>* <span class="hljs-title function_">itoa</span><span class="hljs-params">(<span class="hljs-type">int</span> num, <span class="hljs-type">char</span>* str, <span class="hljs-type">int</span> base)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">SendData</span><span class="hljs-params">(<span class="hljs-type">char</span>* ch,<span class="hljs-type">int</span> a)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">SendString</span><span class="hljs-params">(<span class="hljs-type">char</span>* ch1,<span class="hljs-type">char</span>* ch2)</span>;<br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>重学32</title>
    <link href="/2025/07/08/%E9%87%8D%E5%AD%A632/"/>
    <url>/2025/07/08/%E9%87%8D%E5%AD%A632/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><p>关于在中断使用HAL_Delay()keysking的解决方案是调整中断优先级，即滴答定时器本来是15，调成14，用到的中断调成15</p><p>&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;<br>关于外部中断EXTI<br>eg:while(1)中有长时间延时+按键检测，按键按下是可能在延时检测不到，这时候可以用外部中断<br>上拉（Pull-up）：默认将输入信号拉高，适用于 低电平触发（下降沿） 的情况<br>下拉（Pull-down）：默认将输入信号拉低，适用于 高电平触发（上升沿） 的情况<br>标准库的初始化包括配置EXTI参数和NVIC分组，IRQHandler函数需要手动清零标志位<br>HAL库图形化配置EXTI和NVIC分组，生成的代码包含清零标志位，写HAL_GPIO_EXTI_Callback即可<br>&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</p><p>&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;<br>关于串口<br>HAL库：<br>配置好后系统生成的MX_USART1_UART_Init();<br>串口发送：HAL_UART_Transmit(&amp;huart1,receive,sizeof(receive),100);<br>注意第二个参数类型是（uint8_t*）,最后一个参数单位是ms<br>串口接收：<br>轮询模式：<br>会阻塞程序运行且只能发送定长数据<br>HAL_UART_Receive(&amp;huart1,(uint8_t*)r_message,2,HAL_MAX_DELAY);<br>加入中断<br>发送：HAL_UART_Transmit_IT(&amp;huart1,receive,sizeof(receive));用法不变<br>与之前相比少最后一个参数，有了中断更节省cpu资源<br>接收：HAL_UART_Receive_IT(&amp;huart1,(uint8_t*)r_message,2);<br>与发送不同，为了防止上次接收未完成又开启下一次接收，放在while（1）前只执行一次，相当于开启中断，需要编写callback函数，callback函数结尾继续启动串口接收<br>DMA:图形化界面添加dma通道，发送和接收函数的IT改为DMA即可<br>HAL_UART_Transmit_DMA(&amp;huart1,(uint8_t*)r_message,2);<br>HAL_UART_Receive_DMA(&amp;huart1,(uint8_t*)r_message,2);<br>but,dma的初始化需要在usart前面，注意要手动调整一下<br>接收不定长数据：<br>这个就没有新的发送函数了，只有接收,有阻塞，中断，DMA三种模式<br>HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint16_t *RxLen, uint32_t Timeout)<br>HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)&#x2F;&#x2F;Size是可接收的最大数据长度，并不是接收的长度<br>HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)<br>回调函数是下面这个<br>void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)<br>注意回调函数多了一个size参数，是接收到了字节数<br>最后要关闭dma传输过半中断，f4不用？</p><p>还有一个要注意<br>一般串口接收有两种方式<br>eg：每次中断读取1字节<br>1、 使用 HAL_UART_Receive_IT：<br>uint8_t rx_byte;<br>HAL_UART_Receive_IT(&amp;huart1, &amp;rx_byte, 1); &#x2F;&#x2F; 启动接收<br>&#x2F;&#x2F; 在回调函数中处理数据<br>void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {<br>    if (huart &#x3D;&#x3D; &amp;huart1) {<br>        &#x2F;&#x2F; 处理 rx_byte<br>        HAL_UART_Receive_IT(&amp;huart1, &amp;rx_byte, 1); &#x2F;&#x2F; 重新启动接收<br>    }<br>}<br>2、使用 __HAL_UART_ENABLE_IT<br>&#x2F;&#x2F; 初始化时使能RXNE中断<br>__HAL_UART_ENABLE_IT(&amp;huart1, UART_IT_RXNE);<br>&#x2F;&#x2F; 中断服务函数中手动处理<br>void USART1_IRQHandler(void) {<br>    if (__HAL_UART_GET_FLAG(&amp;huart1, UART_FLAG_RXNE)) {<br>        uint8_t rx_byte &#x3D; huart1.Instance-&gt;DR; &#x2F;&#x2F; 读取数据<br>        &#x2F;&#x2F; 处理 rx_byte<br>        __HAL_UART_CLEAR_FLAG(&amp;huart1, UART_FLAG_RXNE);<br>    }<br>}</p><p>&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;<br>TIM<br>1.MX_TIM1_Init();CUBEMX自动生成的初始化<br>2.HAL_TIM_Base_Start(&amp;htim2);<br>2.HAL_TIM_Base_Start_IT(&amp;htim2);两种定时器启动函数，一种有中断，一种无中断<br>3.void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)&#x2F;&#x2F;中断回调函数是这个<br>__HAL_TIM_GET_COUNTER(&amp;htim1)<br>__HAL_TIM_SET_COUNTER(&amp;htim1)&#x2F;&#x2F;获得or设置计数器值<br>__HAL_TIM_GET_AUTORELOAD(&amp;htim1)<br>__HAL_TIM_GET_AUTORELOAD(&amp;htim1)&#x2F;&#x2F;获得or设置自动重装载寄存器值<br>__HAL_TIM_GET_PRESCALER(&amp;htim1)&#x2F;&#x2F;设置预分频器值</p><p>&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>openmv</title>
    <link href="/2025/07/08/openmv/"/>
    <url>/2025/07/08/openmv/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><p>sensor模块<br>sensor.reset() 初始化感光元件<br>sensor.set_pixformat() 设置像素模式。彩色或黑白<br>    参数：sensor.GRAYSCALE: 灰度，每个像素8bit。<br>          sensor.RGB565: 彩色，每个像素16bit。<br>sensor.set_framesize() 设置图像的大小<br>    sensor.VGA: 640x480<br>sensor.skip_frames(n&#x3D;10) 跳过n张照片，在更改设置后，跳过一些帧，等待感光元件变稳定。<br>sensor.snapshot() 拍摄一张照片，返回一个image对象。</p><p>sensor.set_auto_gain() 自动增益开启（True）或者关闭（False）。在使用颜色追踪时，需要关闭自动增益。<br>sensor.set_auto_whitebal() 自动白平衡开启（True）或者关闭（False）。在使用颜色追踪时，需要关闭自动白平衡。<br>sensor.set_auto_exposure(enable[, exposure_us])<br>enable 打开（True）或关闭（False）自动曝光。默认打开。<br>如果 enable 为False， 则可以用 exposure_us 设置一个固定的曝光时间（以微秒为单位）。<br>设置窗口ROI：<br>sensor.set_windowing(roi)<br>eg:sensor.set_framesize(sensor.VGA) # 高分辨率<br>   sensor.set_windowing((640, 80)) #取中间的640*80区域<br>sensor.set_hmirror(True) #水平方向翻转<br>sensor.set_vflip(True)   #垂直方向翻转</p><p>可以通过  image.get_pixel(x, y)  方法来获取一个像素点的值。<br>image.get_pixel(x, y)<br>        对于灰度图: 返回(x,y)坐标的灰度值.<br>        对于彩色图: 返回(x,y)坐标的(r,g,b)的tuple.<br>同样，可以通过image.set_pixel(x, y, pixel)方法，来设置一个像素点的值。<br>image.set_pixel(x, y, pixel)<br>        对于灰度图: 设置(x,y)坐标的灰度值。<br>        对于彩色图: 设置(x,y)坐标的(r,g,b)的值。<br>eg：img.set_pixcel(10,10,(255,0,0)) #设置坐标(10,10)的像素点为红色(255,0,0)<br>获取图像的宽度和高度<br>image.width()<br>返回图像的宽度(像素)</p><p>image.height()<br>返回图像的高度(像素)</p><p>image.format()<br>灰度图会返回 sensor.GRAYSCALE，彩色图会返回 sensor.RGB565。</p><p>image.size()<br>返回图像的大小(byte)<br>图像的运算<br>image.invert()<br>取反，对于二值化的图像，0(黑)变成1(白)，1(白)变成0(黑)。<br>使用图像的统计信息    Statistics<br>roi的格式是(x, y, w, h)的tupple.<br>x:ROI区域中左上角的x坐标        y:ROI区域中左上角的y坐标<br>w:ROI的宽度                    h:ROI的高度<br>eg：img.get_statistics(roi&#x3D;(0,0,10,20))</p><p>画图：<br>画线<br>image.draw_line(line_tuple, color&#x3D;White) 在图像中画一条直线。<br>        line_tuple的格式是(x0, y0, x1, y1)，意思是(x0, y0)到(x1, y1)的直线。<br>                颜色可以是灰度值(0-255)</p><p>语法</p><p>title()以首字母大写的方式显示每个单词</p><p>lower()全改为小写</p><p>upper()全改为大写</p><p>rstrip()删除末尾的空白，不过是临时的，可以存起来</p><p>lstrip()删除开头的空白，不过是临时的，可以存起来</p><p>strip()删除两端的空白，不过是临时的，可以存起来</p><p>#两个乘号是乘方运算</p><p>str()让Python将非字符串值表示为字符串</p><p>#.append()为列表结尾添加元素<br>#insert()可在列表的任何位置添加新元素<br>#del可删除元素<br>#.pop()也可删除元素,不过可用,不加参数默认删最后一个<br>#可根据值删除元素 用remove(),参数可写字符串,可写变量,不过只能删除第一个符合的值<br>#sort()永久性地修改列表元素的排列顺序 按首字母排序<br>#sorted()临时排序<br>#reverse()永久性地修改列表元素的排列顺序(倒着排序),不过再用一次便可恢复<br>#len()可快速获悉列表的长度</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>25-7-2</title>
    <link href="/2025/07/02/25-7-2/"/>
    <url>/2025/07/02/25-7-2/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><h1 id="新板子引脚"><a href="#新板子引脚" class="headerlink" title="新板子引脚"></a>新板子引脚</h1><p>LED          PC1 PC2 PC3<br>KEY          PF3 PF4 PF5<br>beep        PG9 改 PC9<br>uart * 4：<br>uart2       PA2  PA3<br>uart3       PB10 PB11<br>uart4       PC10 PC11<br>uart6       PC6  PC7 改 PG9 PG14<br>tb6612     AIN1 PF1   AIN2 PF0<br>                 BIN1 PF7   BIN2 PF8<br><code>TIM1</code>       PWMA PE9   PWMB PE11<br>电机         <code>TIM4</code>  PD12   PD13<br>                 <code>TIM2</code> PA1   PA5<br>八路循迹  PB12 PB13 PB15 PG6 PG7 PG8 PC4 PD3</p><p>tb6612     AIN1 PE7   AIN2 PE8<br>                  BIN1 PF12  BIN2 PF13<br><code>TIM9</code>        PWMA PE5   PWMB PE6<br>电机         <code> TIM3</code>  PA6   PA7<br>                 <code>TIM8</code>  PC6   PC7</p><h1 id="7-23的板子"><a href="#7-23的板子" class="headerlink" title="7-23的板子"></a>7-23的板子</h1><p>LED          PC1 PC2 PC3<br>KEY          PF3 PF4 PF5<br>beep        PG9 改 PC9<br>uart * 4：<br>uart2       PA2  PA3<br>uart3       PB10 PB11<br>uart4       PC10 PC11<br>uart6       PC6  PC7 改 PG9 PG14<br>tb6612     AIN1 PF1   AIN2 PF0<br>                 BIN1 PF7   BIN2 PF8<br><code>TIM1</code>       PWMA PE9   PWMB PE11<br>电机         <code>TIM4</code>  PD12   PD13<br>                 <code>TIM2</code> PA1   PA5<br>八路循迹  PB12 PB13 PB15 PG6 PG7 PG8 PC4 PD3</p><p>舵机    TIM9_CH1  PE5<br>            TIM3_CH1  PA6</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>25-7-1</title>
    <link href="/2025/07/01/25-7-1/"/>
    <url>/2025/07/01/25-7-1/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><h1 id="MaixCAM"><a href="#MaixCAM" class="headerlink" title="MaixCAM"></a>MaixCAM</h1><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p>可以单文件or多文件（项目）<br>单个文件的话打开直接运行即可<br>多个的话打开文件夹，要有一个主程序入口，即<code>main.py</code><br>要注意while后面跟着的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:                     <span class="hljs-comment">#一般不用这个</span><br><span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> app.need_exit():   <span class="hljs-comment">#用这个</span><br></code></pre></td></tr></table></figure><h2 id="屏幕使用"><a href="#屏幕使用" class="headerlink" title="屏幕使用"></a>屏幕使用</h2><p>导入display模块：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> display<br></code></pre></td></tr></table></figure><p>创建一个Display对象：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">disp = display.Display()<br></code></pre></td></tr></table></figure><p>显示图像：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">disp.show(img)<br></code></pre></td></tr></table></figure><p>这里<code>img</code>对象是<code>maix.image.Image</code>对象，可以通过<code>camera</code>模块的<code>read</code>方法获取，也可以通过<code>image</code>模块的<code>load</code>方法加载文件系统中的图像，也可以通过<code>image</code>模块的<code>Image</code>类创建一个空白图像。<br>eg</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> image, display<br>disp = display.Display()<br>img = image.load(<span class="hljs-string">&quot;/root/dog.jpg&quot;</span>)<br>disp.show(img)<br></code></pre></td></tr></table></figure><h2 id="摄像头使用"><a href="#摄像头使用" class="headerlink" title="摄像头使用"></a>摄像头使用</h2><h3 id="获取图像信息"><a href="#获取图像信息" class="headerlink" title="获取图像信息"></a>获取图像信息</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> camera<br>cam = camera.Camera(<span class="hljs-number">640</span>, <span class="hljs-number">480</span>)<br><span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>    img = cam.read()<br>    <span class="hljs-built_in">print</span>(img)<br></code></pre></td></tr></table></figure><p>这里我们从<code>maix</code>模块导入<code>camera</code>模块，然后创建一个<code>Camera</code>对象，指定图像的宽度和高度。然后在一个循环中不断读取图像， 默认出的图为<code>RGB</code>格式。<br>还可获取灰度图像</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> camera, image<br>cam = camera.Camera(<span class="hljs-number">640</span>, <span class="hljs-number">480</span>, image.Format.FMT_GRAYSCALE)<span class="hljs-comment"># 设置输出灰度图像</span><br></code></pre></td></tr></table></figure><h3 id="设置帧率"><a href="#设置帧率" class="headerlink" title="设置帧率"></a>设置帧率</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> camera<br>cam = camera.Camera(<span class="hljs-number">640</span>, <span class="hljs-number">480</span>, fps=<span class="hljs-number">30</span>)<span class="hljs-comment"># 设置帧率为30帧</span><br><span class="hljs-comment"># or</span><br>cam = camera.Camera(<span class="hljs-number">1920</span>, <span class="hljs-number">1280</span>)             <span class="hljs-comment"># 分辨率高于1280x720时帧率会设置为30帧</span><br></code></pre></td></tr></table></figure><h3 id="图像矫正"><a href="#图像矫正" class="headerlink" title="图像矫正"></a>图像矫正</h3><p>对于画面存在鱼眼等畸变的情况，可以使用<code>Image</code>对象下的<code>lens_corr</code>函数对图片进行畸变矫正。一般情况只需要调大和调小<code>strength</code>的值来将画面调整到合适效果即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">img = img.lens_corr(strength=<span class="hljs-number">1.5</span>)<span class="hljs-comment"># 调整strength的值直到画面不再畸变</span><br></code></pre></td></tr></table></figure><h3 id="跳过开头的帧"><a href="#跳过开头的帧" class="headerlink" title="跳过开头的帧"></a>跳过开头的帧</h3><p>摄像头初始化的一小段时间，可能图像采集还没稳定出现奇怪的画面，可以通过<code>skip_frames</code>函数跳过开头的几帧</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">cam = camera.Camera(<span class="hljs-number">640</span>, <span class="hljs-number">480</span>)<br>cam.skip_frames(<span class="hljs-number">30</span>)           <span class="hljs-comment"># 跳过开头的30帧</span><br></code></pre></td></tr></table></figure><h3 id="显示摄像头获取的图像"><a href="#显示摄像头获取的图像" class="headerlink" title="显示摄像头获取的图像"></a>显示摄像头获取的图像</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> camera, display<br>cam = camera.Camera(<span class="hljs-number">640</span>, <span class="hljs-number">480</span>)<br>disp = display.Display()<br><span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>    img = cam.read()<br>    disp.show(img)<br></code></pre></td></tr></table></figure><h3 id="设置摄像头参数"><a href="#设置摄像头参数" class="headerlink" title="设置摄像头参数"></a>设置摄像头参数</h3><p>曝光时间，增益，白平衡，设置亮度、对比度和饱和度等<br>之后加</p><h2 id="基本图像操作"><a href="#基本图像操作" class="headerlink" title="基本图像操作"></a>基本图像操作</h2><p>图像格式有很多：<br><code>image.Format.FMT_RGB888</code><br><code>image.Format.FMT_RGBA8888</code><br><code>image.Format.FMT_GRAYSCALE</code><br><code>image.Format.FMT_BGR888</code>……一般用第一个就行</p><h3 id="创建图像"><a href="#创建图像" class="headerlink" title="创建图像"></a>创建图像</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> image<br>img = image.Image(<span class="hljs-number">320</span>, <span class="hljs-number">240</span>, image.Format.FMT_RGB888)<span class="hljs-comment">#第三个默认就是那个,一般不用设置</span><br><span class="hljs-built_in">print</span>(img)<br><span class="hljs-built_in">print</span>(img.width(), img.height(), img.<span class="hljs-built_in">format</span>())<span class="hljs-comment">#获取图像的宽度、高度和格式。</span><br></code></pre></td></tr></table></figure><p>显示（没有图像数据so显示的是黑色）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> image, display<br>disp = display.Display()<br>img = image.Image(<span class="hljs-number">320</span>, <span class="hljs-number">240</span>, image.Format.FMT_RGB888)<br>disp.show(img)<span class="hljs-comment">#之前那个是img = cam.read()然后再show</span><br></code></pre></td></tr></table></figure><h3 id="从文件系统读取"><a href="#从文件系统读取" class="headerlink" title="从文件系统读取"></a>从文件系统读取</h3><p>支持jpg和png格式的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> image<br>img = image.load(<span class="hljs-string">&quot;/root/image.jpg&quot;</span>)<span class="hljs-comment">#板子的目录</span><br><span class="hljs-keyword">if</span> img <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>    <span class="hljs-keyword">raise</span> Exception(<span class="hljs-string">f&quot;load image failed&quot;</span>)<br><span class="hljs-built_in">print</span>(img)<br></code></pre></td></tr></table></figure><h3 id="保存图像到文件系统"><a href="#保存图像到文件系统" class="headerlink" title="保存图像到文件系统"></a>保存图像到文件系统</h3><p>用<code>save</code>保存</p><h3 id="画框"><a href="#画框" class="headerlink" title="画框"></a>画框</h3><p>用<code>image</code>里的<code>draw_rect</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> image<br>img = image.Image(<span class="hljs-number">320</span>, <span class="hljs-number">240</span>, image.Format.FMT_RGB888)<br>img.draw_rect(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">100</span>, <span class="hljs-number">100</span>, image.Color.from_rgb(<span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>))<br></code></pre></td></tr></table></figure><p>这里的参数依次是：<code>x</code>, <code>y</code>, <code>w</code>, <code>h</code>, <code>color</code>，<code>x</code> 和 <code>y</code> 是框的左上角坐标，<code>w</code> 和 <code>h</code> 是框的宽度和高度，使用<code>image.Color.from_rgb</code>方法创建颜色。<br>可以用<code>thickness</code>指定框的线宽，默认是<code>1</code>，也可以画实心框，传参 <code>thickness=-1</code><br>如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">img.draw_rect(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">100</span>, <span class="hljs-number">100</span>, image.Color.from_rgb(<span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>), thickness=-<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><h3 id="写字符串"><a href="#写字符串" class="headerlink" title="写字符串"></a>写字符串</h3><p><code>image.Image</code>提供了<code>draw_string</code>方法，可以在图像上写字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> image<br>img = image.Image(<span class="hljs-number">320</span>, <span class="hljs-number">240</span>, image.Format.FMT_RGB888)<br>img.draw_string(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-string">&quot;Hello MaixPy&quot;</span>, image.Color.from_rgb(<span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>))<br></code></pre></td></tr></table></figure><p><code>x</code>, <code>y</code>, <code>text</code>, <code>color</code>，<code>x</code> 和 <code>y</code> 是文字的左上角坐标，<code>text</code> 是要写的文字，<code>color</code> 是文字的颜色，可以使用<code>image.Color.from_rgb</code>方法创建颜色。<br>想放大字体大小就加个参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#默认是1,2比1大很多</span><br>img.draw_string(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-string">&quot;Hello MaixPy&quot;</span>, image.Color.from_rgb(<span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>), scale=<span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure><p>可以获取字体高度和宽度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">w, h = image.string_size(<span class="hljs-string">&quot;Hello MaixPy&quot;</span>, scale=<span class="hljs-number">2</span>)<span class="hljs-comment">#参数要和字体保持一致</span><br><span class="hljs-built_in">print</span>(w, h)<br></code></pre></td></tr></table></figure><p>中文和自定义字体（之后补）<br>设备内置了几个字体，可以用函数设置字体and直接用img.draw_string…也可以吧设置字体写在参数上。</p><h3 id="画线"><a href="#画线" class="headerlink" title="画线"></a>画线</h3><p><code>image.Image</code>提供了<code>draw_line</code>方法，可以在图像上画线</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> image<br>img = image.Image(<span class="hljs-number">320</span>, <span class="hljs-number">240</span>, image.Format.FMT_RGB888)<br>img.draw_line(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">100</span>, <span class="hljs-number">100</span>, image.Color.from_rgb(<span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>))<br></code></pre></td></tr></table></figure><p>参数依次是：<code>x1</code>, <code>y1</code>, <code>x2</code>, <code>y2</code>, <code>color</code>，<code>x1</code> 和 <code>y1</code> 是线的起点坐标，<code>x2</code> 和 <code>y2</code> 是线的终点坐标，<code>color</code> 是线的颜色，可以使用<code>image.Color.from_rgb</code>方法创建颜色。</p><h3 id="画圆"><a href="#画圆" class="headerlink" title="画圆"></a>画圆</h3><p><code>image.Image</code>提供了<code>draw_circle</code>方法，可以在图像上画圆</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> image<br>img = image.Image(<span class="hljs-number">320</span>, <span class="hljs-number">240</span>, image.Format.FMT_RGB888)<br>img.draw_circle(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>, <span class="hljs-number">50</span>, image.Color.from_rgb(<span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>))<br></code></pre></td></tr></table></figure><h3 id="缩放"><a href="#缩放" class="headerlink" title="缩放"></a>缩放</h3><p><code>image.Image</code>提供了<code>resize</code>方法，可以缩放图像</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> image<br>img = image.Image(<span class="hljs-number">320</span>, <span class="hljs-number">240</span>, image.Format.FMT_RGB888)<br>img_new = img.resize(<span class="hljs-number">160</span>, <span class="hljs-number">120</span>)<br><span class="hljs-built_in">print</span>(img, img_new)<br></code></pre></td></tr></table></figure><h3 id="裁剪"><a href="#裁剪" class="headerlink" title="裁剪"></a>裁剪</h3><p><code>image.Image</code>提供了<code>crop</code>方法，可以剪裁图像</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> image<br>img = image.Image(<span class="hljs-number">320</span>, <span class="hljs-number">240</span>, image.Format.FMT_RGB888)<br>img_new = img.crop(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">100</span>, <span class="hljs-number">100</span>)<br><span class="hljs-built_in">print</span>(img, img_new)<br></code></pre></td></tr></table></figure><h3 id="旋转"><a href="#旋转" class="headerlink" title="旋转"></a>旋转</h3><p><code>image.Image</code>提供了<code>rotate</code>方法，可以旋转图像</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> image<br>img = image.Image(<span class="hljs-number">320</span>, <span class="hljs-number">240</span>, image.Format.FMT_RGB888)<br>img_new = img.rotate(<span class="hljs-number">90</span>)<br><span class="hljs-built_in">print</span>(img, img_new)<br></code></pre></td></tr></table></figure><h3 id="拷贝"><a href="#拷贝" class="headerlink" title="拷贝"></a>拷贝</h3><p><code>image.Image</code>提供了<code>copy</code>方法，可以拷贝一份独立的图像</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> image<br>img = image.Image(<span class="hljs-number">320</span>, <span class="hljs-number">240</span>, image.Format.FMT_RGB888)<br>img_new = img.copy()<br><span class="hljs-built_in">print</span>(img, img_new)<br></code></pre></td></tr></table></figure><h3 id="仿射变换"><a href="#仿射变换" class="headerlink" title="仿射变换"></a>仿射变换</h3><p><code>image.Image</code>提供了<code>affine</code>方法，可以进行仿射变换，即提供当前图中三个及以上的点坐标，以及目标图中对应的点坐标，可以自动进行图像的旋转、缩放、平移等操作变换到目标图像。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> image<br>img = image.Image(<span class="hljs-number">320</span>, <span class="hljs-number">240</span>, image.Format.FMT_RGB888)<br>img_new = img.affine([(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>), (<span class="hljs-number">100</span>, <span class="hljs-number">10</span>), (<span class="hljs-number">10</span>, <span class="hljs-number">100</span>)], [(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>), (<span class="hljs-number">100</span>, <span class="hljs-number">20</span>), (<span class="hljs-number">20</span>, <span class="hljs-number">100</span>)])<br><span class="hljs-built_in">print</span>(img, img_new)<br></code></pre></td></tr></table></figure><p>没懂</p><h3 id="画关键点"><a href="#画关键点" class="headerlink" title="画关键点"></a>画关键点</h3><p><code>image.Image</code>提供了<code>draw_keypoints</code>方法，可以在图像上画关键点</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> image<br>img = image.Image(<span class="hljs-number">320</span>, <span class="hljs-number">240</span>, image.Format.FMT_RGB888)<br>keypoints = [<span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">100</span>, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">100</span>]<br>img.draw_keypoints(keypoints, image.Color.from_rgb(<span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>), size=<span class="hljs-number">10</span>, thickness=<span class="hljs-number">1</span>, fill=<span class="hljs-literal">False</span>)<span class="hljs-comment">#有报错,删掉fill=False这个参数无报错</span><br></code></pre></td></tr></table></figure><p>在坐标<code>(10, 10)</code>、<code>(100, 10)</code>、<code>(10, 100)</code>画三个红色的关键点，关键点的大小是<code>10</code>，线宽是<code>1</code>，不填充。<br>（后面这个填充加了有报错不知道怎么改）</p><h3 id="画十字"><a href="#画十字" class="headerlink" title="画十字"></a>画十字</h3><p><code>image.Image</code>提供了<code>draw_cross</code>方法，可以在图像上画十字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> image<br>img = image.Image(<span class="hljs-number">320</span>, <span class="hljs-number">240</span>, image.Format.FMT_RGB888)<br>img.draw_cross(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>, image.Color.from_rgb(<span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>), size=<span class="hljs-number">5</span>, thickness=<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p>在坐标<code>(100, 100)</code>画一个红色的十字，十字的延长大小是<code>5</code>，所以线段长度为<code>2 * size + thickness</code>, 线宽是<code>1</code>。</p><h3 id="画箭头"><a href="#画箭头" class="headerlink" title="画箭头"></a>画箭头</h3><p><code>image.Image</code>提供了<code>draw_arrow</code>方法，可以在图像上画箭头</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> image<br>img = image.Image(<span class="hljs-number">320</span>, <span class="hljs-number">240</span>, image.Format.FMT_RGB888)<br>img.draw_arrow(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">100</span>, <span class="hljs-number">100</span>, image.Color.from_rgb(<span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>), thickness=<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p>在坐标<code>(10, 10)</code>画一个红色的箭头，箭头的终点是<code>(100, 100)</code>，线宽是<code>1</code>。</p><h3 id="画图"><a href="#画图" class="headerlink" title="画图"></a>画图</h3><p><code>image.Image</code>提供了<code>draw_image</code>方法，可以在图像上画图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> image<br>img = image.Image(<span class="hljs-number">320</span>, <span class="hljs-number">240</span>, image.Format.FMT_RGB888)<br>img2 = image.Image(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>, image.Format.FMT_RGB888)<br>img2.draw_rect(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">90</span>, <span class="hljs-number">90</span>, image.Color.from_rgb(<span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>))<br>img.draw_image(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>, img2)<br></code></pre></td></tr></table></figure><p>这里img2直接覆盖在img对应位置上了，不过对其他地方不影响。</p><h3 id="转换格式"><a href="#转换格式" class="headerlink" title="转换格式"></a>转换格式</h3><p><code>image.Image</code>提供了<code>to_format</code>方法，可以转换图像格式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> image<br>img = image.Image(<span class="hljs-number">320</span>, <span class="hljs-number">240</span>, image.Format.FMT_RGB888)<br>img_new = img.to_format(image.Format.FMT_BGR888)<br><span class="hljs-built_in">print</span>(img, img_new)<br>img_jpg = img.to_format(image.Format.FMT_JPEG)<br><span class="hljs-built_in">print</span>(img, img_new)<br></code></pre></td></tr></table></figure><p>maix.image.Image 对象和 Numpy&#x2F;OpenCV 格式互相转换（之后加）</p><h3 id="和-bytes-数据互相转换"><a href="#和-bytes-数据互相转换" class="headerlink" title="和 bytes 数据互相转换"></a>和 bytes 数据互相转换</h3><p><code>image.Image</code>提供了<code>to_bytes</code>方法，可以转换图像为<code>bytes</code>数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> image<br>img = image.Image(<span class="hljs-number">320</span>, <span class="hljs-number">240</span>, image.Format.FMT_RGB888)<br>data = img.to_bytes()<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(data), <span class="hljs-built_in">len</span>(data), img.data_size())<span class="hljs-comment">#&lt;class &#x27;bytes&#x27;&gt; 230400 230400</span><br><span class="hljs-comment">#下面的没懂，不过应该用不到</span><br>img_jpeg = image.from_bytes(<span class="hljs-number">320</span>, <span class="hljs-number">240</span>, image.Format.FMT_RGB888, data)<br><span class="hljs-built_in">print</span>(img_jpeg)<br>img = img_jpeg.to_format(image.Format.FMT_RGB888)<br><span class="hljs-built_in">print</span>(img)<br></code></pre></td></tr></table></figure><h2 id="触摸屏"><a href="#触摸屏" class="headerlink" title="触摸屏"></a>触摸屏</h2><h3 id="读取触摸"><a href="#读取触摸" class="headerlink" title="读取触摸"></a>读取触摸</h3><p>用<code>maix.touchscreen.TouchScreen</code> 类来读取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> touchscreen, app, time<br>ts = touchscreen.TouchScreen()<span class="hljs-comment">#这句很重要</span><br>pressed_already = <span class="hljs-literal">False</span><br>last_x = <span class="hljs-number">0</span><br>last_y = <span class="hljs-number">0</span><br>last_pressed = <span class="hljs-literal">False</span><br><span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> app.need_exit():<br>    x, y, pressed = ts.read()<br>    <span class="hljs-keyword">if</span> x != last_x <span class="hljs-keyword">or</span> y != last_y <span class="hljs-keyword">or</span> pressed != last_pressed:<br>        <span class="hljs-built_in">print</span>(x, y, pressed)<br>        last_x = x<br>        last_y = y<br>        last_pressed = pressed<br>    <span class="hljs-keyword">if</span> pressed:<br>        pressed_already = <span class="hljs-literal">True</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">if</span> pressed_already:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;clicked, x: <span class="hljs-subst">&#123;x&#125;</span>, y: <span class="hljs-subst">&#123;y&#125;</span>&quot;</span>)<br>            pressed_already = <span class="hljs-literal">False</span><br>    time.sleep_ms(<span class="hljs-number">1</span>)  <span class="hljs-comment"># sleep some time to free some CPU usage</span><br></code></pre></td></tr></table></figure><p>进行交互</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> touchscreen, app, time, display, image<br><br>ts = touchscreen.TouchScreen()<br>disp = display.Display()<br><br>img = image.Image(disp.width(), disp.height())<br><br><span class="hljs-comment"># draw exit button</span><br>exit_label = <span class="hljs-string">&quot;&lt; Exit&quot;</span><br>size = image.string_size(exit_label)<br>exit_btn_pos = [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">8</span>*<span class="hljs-number">2</span> + size.width(), <span class="hljs-number">12</span> * <span class="hljs-number">2</span> + size.height()]<br>img.draw_string(<span class="hljs-number">8</span>, <span class="hljs-number">12</span>, exit_label, image.COLOR_WHITE)<br>img.draw_rect(exit_btn_pos[<span class="hljs-number">0</span>], exit_btn_pos[<span class="hljs-number">1</span>], exit_btn_pos[<span class="hljs-number">2</span>], exit_btn_pos[<span class="hljs-number">3</span>],  image.COLOR_WHITE, <span class="hljs-number">2</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">is_in_button</span>(<span class="hljs-params">x, y, btn_pos</span>):<br>    <span class="hljs-keyword">return</span> x &gt; btn_pos[<span class="hljs-number">0</span>] <span class="hljs-keyword">and</span> x &lt; btn_pos[<span class="hljs-number">0</span>] + btn_pos[<span class="hljs-number">2</span>] <span class="hljs-keyword">and</span> y &gt; btn_pos[<span class="hljs-number">1</span>] <span class="hljs-keyword">and</span> y &lt; btn_pos[<span class="hljs-number">1</span>] + btn_pos[<span class="hljs-number">3</span>]<br><br><span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> app.need_exit():<br>    x, y, pressed = ts.read()<br>    <span class="hljs-keyword">if</span> is_in_button(x, y, exit_btn_pos):<br>        app.set_exit_flag(<span class="hljs-literal">True</span>)<br>    img.draw_circle(x, y, <span class="hljs-number">1</span>, image.Color.from_rgb(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>), <span class="hljs-number">2</span>)<br>    disp.show(img)<br><br></code></pre></td></tr></table></figure><p>屏幕大小可能和图像不一样，处理方法之后补</p><h2 id="寻找色块"><a href="#寻找色块" class="headerlink" title="寻找色块"></a>寻找色块</h2><p><code>maix.image.Image</code>中提供了<code>find_blobs</code>方法，可以找色块。<br>好眼熟的代码哈哈</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> image, camera, display <br>cam = camera.Camera(<span class="hljs-number">320</span>, <span class="hljs-number">240</span>)<br>disp = display.Display()<br><span class="hljs-comment"># 根据色块颜色选择对应配置</span><br>thresholds = [[<span class="hljs-number">0</span>, <span class="hljs-number">80</span>, <span class="hljs-number">40</span>, <span class="hljs-number">80</span>, <span class="hljs-number">10</span>, <span class="hljs-number">80</span>]]      <span class="hljs-comment"># red</span><br><span class="hljs-comment"># thresholds = [[0, 80, -120, -10, 0, 30]]    # green</span><br><span class="hljs-comment"># thresholds = [[0, 80, 30, 100, -120, -60]]  # blue</span><br><span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>    img = cam.read()<br>    blobs = img.find_blobs(thresholds, pixels_threshold=<span class="hljs-number">500</span>)<span class="hljs-comment">#这一条</span><br>    <span class="hljs-keyword">for</span> blob <span class="hljs-keyword">in</span> blobs:<br>        img.draw_rect(blob[<span class="hljs-number">0</span>], blob[<span class="hljs-number">1</span>], blob[<span class="hljs-number">2</span>], blob[<span class="hljs-number">3</span>], image.COLOR_GREEN)<br>    disp.show(img)<span class="hljs-comment">#注意画完再show</span><br></code></pre></td></tr></table></figure><p>find_blobs参数：<a href="https://wiki.sipeed.com/maixpy/doc/zh/vision/find_blobs.html">MaixCAM MaixPy 寻找色块 - MaixPy</a></p><h2 id="寻找直线"><a href="#寻找直线" class="headerlink" title="寻找直线"></a>寻找直线</h2><p>用<code>get_regression</code>方法来寻找直线</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> camera, display, image<br>cam = camera.Camera(<span class="hljs-number">320</span>, <span class="hljs-number">240</span>)<br>disp = display.Display()<br><span class="hljs-comment"># thresholds = [[0, 80, 40, 80, 10, 80]]      # red</span><br>thresholds = [[<span class="hljs-number">0</span>, <span class="hljs-number">80</span>, -<span class="hljs-number">120</span>, -<span class="hljs-number">10</span>, <span class="hljs-number">0</span>, <span class="hljs-number">30</span>]]    <span class="hljs-comment"># green</span><br><span class="hljs-comment"># thresholds = [[0, 80, 30, 100, -120, -60]]  # blue</span><br><span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>    img = cam.read()<br>    lines = img.get_regression(thresholds, area_threshold = <span class="hljs-number">100</span>)<br>    <span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> lines:<br>        img.draw_line(a.x1(), a.y1(), a.x2(), a.y2(), image.COLOR_GREEN, <span class="hljs-number">2</span>)<br>        theta = a.theta()<br>        rho = a.rho()<br>        <span class="hljs-keyword">if</span> theta &gt; <span class="hljs-number">90</span>:<br>            theta = <span class="hljs-number">270</span> - theta<br>        <span class="hljs-keyword">else</span>:<br>            theta = <span class="hljs-number">90</span> - theta<br>        img.draw_string(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&quot;theta: &quot;</span> + <span class="hljs-built_in">str</span>(theta) + <span class="hljs-string">&quot;, rho: &quot;</span> + <span class="hljs-built_in">str</span>(rho), image.COLOR_BLUE)<br>    disp.show(img)<br></code></pre></td></tr></table></figure><p>使用<code>img.draw_string</code>在左上角显示直线与x轴的夹角， <code>a.theta()</code>是直线与y轴的夹角， 这里为了方便理解转换成直线与x轴的夹角<code>theta</code>，<code>a.rho()</code>是原点与直线的垂线的长度.<br><code>a.theta()</code>默认获得右半边线与y轴正半轴的夹角，处理过后是上边线与x轴正半轴的夹角<br><code>get_regression</code>参数<a href="https://wiki.sipeed.com/maixpy/doc/zh/vision/line_tracking.html">MaixCAM MaixPy 寻找直线 - MaixPy</a><br>包括阈值，阈值反转，感兴趣区，像素面积，像素点<br>分辨率越大越慢，颜色单一的画面可以用灰度图</p><h2 id="识别二维码"><a href="#识别二维码" class="headerlink" title="识别二维码"></a>识别二维码</h2><p>用<code>find_qrcodes</code>方法识别二维码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> image, camera, display<br>cam = camera.Camera(<span class="hljs-number">320</span>, <span class="hljs-number">240</span>)<br>disp = display.Display()<br><span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>    img = cam.read()<br>    qrcodes = img.find_qrcodes()<br>    <span class="hljs-keyword">for</span> qr <span class="hljs-keyword">in</span> qrcodes:<br>        corners = qr.corners()<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):<br>            img.draw_line(corners[i][<span class="hljs-number">0</span>], corners[i][<span class="hljs-number">1</span>], corners[(i + <span class="hljs-number">1</span>) % <span class="hljs-number">4</span>][<span class="hljs-number">0</span>], corners[(i + <span class="hljs-number">1</span>) % <span class="hljs-number">4</span>][<span class="hljs-number">1</span>], image.COLOR_RED)<br>        img.draw_string(qr.x(), qr.y() - <span class="hljs-number">15</span>, qr.payload(), image.COLOR_RED)<br>    disp.show(img)<br></code></pre></td></tr></table></figure><p>这个和条形码识别之后再加</p><h2 id="AI视觉"><a href="#AI视觉" class="headerlink" title="AI视觉"></a>AI视觉</h2><p>使用 YOLOv5 &#x2F; YOLOv8 &#x2F; YOLO11 模型进行目标检测</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> camera, display, image, nn, app<br>detector = nn.YOLOv5(model=<span class="hljs-string">&quot;/root/models/yolov5s.mud&quot;</span>, dual_buff=<span class="hljs-literal">True</span>)<br><span class="hljs-comment">#使能 dual_buff 参数可以加快运行效率(默认就是True)</span><br><span class="hljs-comment"># detector = nn.YOLOv8(model=&quot;/root/models/yolov8n.mud&quot;, dual_buff=True)</span><br><span class="hljs-comment"># detector = nn.YOLO11(model=&quot;/root/models/yolo11n.mud&quot;, dual_buff=True)</span><br>cam = camera.Camera(detector.input_width(), detector.input_height(), detector.input_format())<br>disp = display.Display()<br><span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> app.need_exit():<br>    img = cam.read()<br>    objs = detector.detect(img, conf_th = <span class="hljs-number">0.5</span>, iou_th = <span class="hljs-number">0.45</span>)<br><span class="hljs-comment">#conf_t置信阈值 过滤低质量检测,iou_th 非极大值抑制 消除重叠框</span><br>    <span class="hljs-keyword">for</span> obj <span class="hljs-keyword">in</span> objs:<br>        img.draw_rect(obj.x, obj.y, obj.w, obj.h, color = image.COLOR_RED)<br>        msg = <span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;detector.labels[obj.class_id]&#125;</span>: <span class="hljs-subst">&#123;obj.score:<span class="hljs-number">.2</span>f&#125;</span>&#x27;</span><br><span class="hljs-comment">#格式化输出目标检测结果的字符串</span><br>        img.draw_string(obj.x, obj.y, msg, color = image.COLOR_RED)<br>    disp.show(img)<br></code></pre></td></tr></table></figure><p>默认的模型输入是<code>320x224</code>分辨率<br>也可以手动下载其它分辨率的模型替换：<br>YOLOv5: <a href="https://maixhub.com/model/zoo/365">https://maixhub.com/model/zoo/365</a><br>YOLOv8: <a href="https://maixhub.com/model/zoo/400">https://maixhub.com/model/zoo/400</a><br>YOLO11: <a href="https://maixhub.com/model/zoo/453">https://maixhub.com/model/zoo/453</a></p><p>电脑上训练的模型不能直接给 MaixCAM 使用，因为 MaixCAM 的硬件性能有限，一般我们需要将模型进行<code>INT8</code>量化以减少计算量，并且转换为 MaixCAM 支持的模型格式。<br>需要将 ONNX 模型转换为 MaixCAM 能使用的模型（MUD模型）。<br>MUD（模型统一描述文件）是 MaixPy 支持的一种模型描述文件，用来统一不同平台的模型文件，方便 MaixPy 代码跨平台，本身是一个 <code>ini</code>格式的文本文件，可以使用文本编辑器编辑。<br>一般 MUD 文件会伴随一个或者多个实际的模型文件，比如对于 MaixCAM， 实际的模型文件是<code>.cvimodel</code>格式， MUD 文件则是对它做了一些描述说明。</p><h2 id="串口"><a href="#串口" class="headerlink" title="串口"></a>串口</h2><p>使用内置的<code>maix.comm, maix.protocol</code>模块，调用<code>comm.CommProtoco</code>会自动初始化串口，默认波特率是<code>115200</code></p><p><code>uart</code>   MaixCAM 的串口0 在开机时会打印一部分开机日志， 启动完毕后会打印serial ready字样<br>串口基础使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> uart<br>device = <span class="hljs-string">&quot;/dev/ttyS0&quot;</span><br><span class="hljs-comment"># ports = uart.list_devices() # 列出当前可用的串口</span><br>serial = uart.UART(device, <span class="hljs-number">115200</span>)<br>serial.write_str(<span class="hljs-string">&quot;hello world&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;received:&quot;</span>, serial.read(timeout = <span class="hljs-number">2000</span>))<br></code></pre></td></tr></table></figure><p>这里使用了第一个串口<code>/dev/ttyS0</code>，也就是 <code>Type-C</code> 出 引出的串口。</p><h3 id="发送数据"><a href="#发送数据" class="headerlink" title="发送数据"></a>发送数据</h3><p>主要有两个函数<code>write_str</code>和<code>write</code>函数。<br><code>write_str</code>函数来发送字符串，<code>write</code>用来发送字节流，即<code>str</code>和<code>bytes</code>类型，两者可以互相转换，<br><code>&quot;A&quot;</code> 调用<code>encode()</code>方法变成<code>b&quot;A&quot;</code>，反过来<code>b&quot;A&quot;</code>调用<code>decode()</code>方法变成<code>&quot;A&quot;</code>。<br><code>str</code> 没法显示一些不可见字符比如 ASCII 码中的值<code>0</code>，在字符串中也是<code>\0</code>一般作为结束符，在<code>bytes</code>类型中就可以用<code>b&quot;\x00&quot;</code>来储存。<br>对于非 ASCII 编码的字符串更有用，比如<code>UTF-8</code>编码中中文<code>好</code>是由三个字节<code>\xe5\xa5\xbd</code>来表示的，我们可以通过<code>&quot;好&quot;.encode(&quot;utf-8&quot;)</code>得到<code>b&quot;\xe5\xa5\xbd&quot;</code>，也可以通过<code>b&#39;\xe5\xa5\xbd&#39;.decode(&quot;utf-8)</code>得到<code>&quot;好&quot;</code>。<br>所以如果我们需要发送字节数据，则用<code>write()</code>方法发送即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">bytes_content = <span class="hljs-string">b&#x27;\x01\x02\x03&#x27;</span><br>serial.write(bytes_content)<br></code></pre></td></tr></table></figure><p>所以对于 <code>str</code> 类型，也可以不用<code>write_str</code>，而是使用<code>serial.write(str_content.encode())</code> 来发送。<br>将其他类型数据变成一个字符串发送，可以使用<code>Python 字符串格式化</code>来创建一个字符串，比如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">num = <span class="hljs-number">10</span><br>content = <span class="hljs-string">&quot;I have &#123;&#125; apple&quot;</span>.<span class="hljs-built_in">format</span>(num) <span class="hljs-comment">#使用format方法进行格式化&#123;&#125;被参数num替换</span><br>content2 = <span class="hljs-string">f&quot;I have <span class="hljs-subst">&#123;num&#125;</span> apple&quot;</span> <span class="hljs-comment">#使用 f-string 格式化</span><br>content3 = <span class="hljs-string">&quot;I have &#123;:04d&#125; apple&quot;</span>.<span class="hljs-built_in">format</span>(num) <span class="hljs-comment">#带格式控制的 str.format()(四位数字,不足补零)</span><br>content4 = <span class="hljs-string">f&quot;I have <span class="hljs-subst">&#123;num:d&#125;</span> apple&quot;</span> <span class="hljs-comment">#带类型声明的 f-string(明确指定格式化为十进制整数)</span><br><span class="hljs-built_in">print</span>(content)   <span class="hljs-comment"># I have 10 apple</span><br><span class="hljs-built_in">print</span>(content2)  <span class="hljs-comment"># I have 0010 apple</span><br><span class="hljs-built_in">print</span>(content3)  <span class="hljs-comment"># I have 10 apple</span><br><span class="hljs-built_in">print</span>(content4)  <span class="hljs-comment"># I have 10 apple</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(content))  <span class="hljs-comment"># &lt;class &#x27;str&#x27;&gt;</span><br>serial.write_str(content)<br></code></pre></td></tr></table></figure><p>也可把数据编码成二进制流数据发送，比如前 4 个字节是十六进制的 <code>AABBCCDD</code>，中间发送一个 <code>int</code> 类型的数值，最后再加一个<code>0xFF</code>结尾，使用<code>struct.pack</code>来进行编码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> struct <span class="hljs-keyword">import</span> pack<br>num = <span class="hljs-number">10</span><br>bytes_content = <span class="hljs-string">b&#x27;\xAA\xBB\xCC\xDD&#x27;</span><br>bytes_content += pack(<span class="hljs-string">&quot;&lt;i&quot;</span>, num)<br>bytes_content += <span class="hljs-string">b&#x27;\xFF&#x27;</span><br><span class="hljs-built_in">print</span>(bytes_content, <span class="hljs-built_in">type</span>(bytes_content))<br>serial.write(bytes_content)<br></code></pre></td></tr></table></figure><p>这里 <code>pack(&quot;&lt;i&quot;, num)</code> 把 <code>num</code>编码为<code>int</code>类型即<code>4字节</code>的有符号数，<code>&lt;</code>符号意思是小端编码，低位在前，这里<code>num = 10</code>，十六进制 <code>4 字节</code>表示就是<code>0x0000000A</code>，小端就是把低字节<code>0x0A</code>放在前面，得到一个<code>b&#39;\x0A\x00\x00\x00&#39;</code>的字节类型数据。<br>这样最终发送的就是<code>AA BB CC DD 0A 00 00 00 FF</code>二进制数据了。</p><h3 id="接受数据"><a href="#接受数据" class="headerlink" title="接受数据"></a>接受数据</h3><p>使用<code>read</code>方法进行读取数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> app.need_exit():<br>    data = serial.read()<br>    <span class="hljs-keyword">if</span> data:<br>        <span class="hljs-built_in">print</span>(data)<br>    time.sleep_ms(<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p><code>read</code>方法获得的数据也是<code>bytes</code>类型，这里<code>read</code>会读取对方一次性发送的一串数据，如果没有数据就是<code>b&#39;&#39;</code>即空字节。<br><code>read</code>函数有两个参数：<br><code>len</code>：代表想接收的最大长度，默认<code>-1</code>代表缓冲区有多少就返回多少，传<code>&gt;0</code>的值则代表最多返回这个长度的数据。<br><code>timeout</code><br>默认 <code>0</code> 代表从缓冲区读取数据立马返回数据，如果<code>len</code>为 <code>-1</code>则返回所有数据，如果指定了<code>len</code>则返回长度不超过<code>len</code> 的数据。<br><code>&lt;0</code> 代表一直等待直到接收到了数据才返回，如果<code>len</code>为 <code>-1</code>则等待到接收到数据才返回（一串连续接收到的数据，即阻塞式读取所有数据），如果指定了<code>len</code>则等待接收数量达到<code>len</code>才返回。<br><code>&gt;0</code> 代表无论有没有接收到数据，超过这个时间就会返回。</p><h3 id="接收回调函数"><a href="#接收回调函数" class="headerlink" title="接收回调函数"></a>接收回调函数</h3><p> MaixPy 已经在底层处理好了中断，开发者无需再处理中断。<br>如果想在接收到数据时调用一个回调函数，可以用<code>set_received_callback</code>设置回调函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> uart, app, time<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">on_received</span>(<span class="hljs-params">serial : uart.UART, data : <span class="hljs-built_in">bytes</span></span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;received:&quot;</span>, data)<br>    <span class="hljs-comment"># send back</span><br>    serial.write(data)<br>device = <span class="hljs-string">&quot;/dev/ttyS0&quot;</span><br>serial = uart.UART(device, <span class="hljs-number">115200</span>)<br>serial.set_received_callback(on_received)<br>serial0.write_str(<span class="hljs-string">&quot;hello\r\n&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;sent hello&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;wait data&quot;</span>)<br><span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> app.need_exit():<br>    time.sleep_ms(<span class="hljs-number">100</span>) <span class="hljs-comment"># sleep to make CPU free</span><br></code></pre></td></tr></table></figure><p>默认能直接使用UART0，其他串口（UART1,2,3）均需要设置映射，使用<code>pinmap.set_pin_function</code>来设置。<br>以uart1为例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> maix <span class="hljs-keyword">import</span> app, uart, pinmap, time<br>pinmap.set_pin_function(<span class="hljs-string">&quot;A18&quot;</span>, <span class="hljs-string">&quot;UART1_RX&quot;</span>)<br>pinmap.set_pin_function(<span class="hljs-string">&quot;A19&quot;</span>, <span class="hljs-string">&quot;UART1_TX&quot;</span>)<br>device = <span class="hljs-string">&quot;/dev/ttyS1&quot;</span><br>serial1 = uart.UART(device, <span class="hljs-number">115200</span>)<br></code></pre></td></tr></table></figure><p>先设置引脚映射选择引脚功能为串口，然后设备编号使用<code>/dev/ttyS1</code></p><h3 id="通信协议"><a href="#通信协议" class="headerlink" title="通信协议"></a>通信协议</h3>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>25-6-22</title>
    <link href="/2025/06/22/25-6-22/"/>
    <url>/2025/06/22/25-6-22/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><h1 id="学习上位机"><a href="#学习上位机" class="headerlink" title="学习上位机"></a>学习上位机</h1>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>25-6-20</title>
    <link href="/2025/06/20/25-6-20/"/>
    <url>/2025/06/20/25-6-20/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><h1 id="Matlab"><a href="#Matlab" class="headerlink" title="Matlab"></a>Matlab</h1><p>学一下matlab，正好有点时间。</p><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><p>未用变量输出则默认用ans储存（answer）。<br>要用引号将任何文本输入括起来。<br><code>clc</code>函数清空命令行窗口，由于无输入无输出调用时只需键入函数名。<br>写注释用%</p><h3 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h3><p><code>sum</code>用来矩阵求和，不过是优先求和列。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; a=[<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span>;<span class="hljs-number">4</span> <span class="hljs-number">5</span> <span class="hljs-number">6</span>;]<br>a =<br><br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br>     <span class="hljs-number">4</span>     <span class="hljs-number">5</span>     <span class="hljs-number">6</span><br><br>&gt;&gt; sum(a)<br><span class="hljs-built_in">ans</span> =<br><br>     <span class="hljs-number">5</span>     <span class="hljs-number">7</span>     <span class="hljs-number">9</span><br></code></pre></td></tr></table></figure><p>有两个转置符，<code>A&#39;</code>和<code>A.&#39;</code>。分别是共轭转置和矩阵转置，前者会对复数取共轭。<br><code>diag</code>获得主对角线上的元素，结合sum可对矩阵主对角线上的元素求和。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; a=[<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span>;<span class="hljs-number">4</span> <span class="hljs-number">5</span> <span class="hljs-number">6</span>;]<br>a =<br><br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br>     <span class="hljs-number">4</span>     <span class="hljs-number">5</span>     <span class="hljs-number">6</span><br>&gt;&gt; <span class="hljs-built_in">diag</span>(a)<br><span class="hljs-built_in">ans</span> =<br><br>     <span class="hljs-number">1</span><br>     <span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><p><code>fliplr</code>可翻转矩阵，可结合这个和sum对矩阵另一条对角线上的元素求和。<br><code>fix</code>可删除小数部分，截断为整数。<br>科学记数法使用字母 <code>e</code> 来指定 10 次方的缩放因子。虚数使用 <code>i</code> 或 <code>j</code> 作为后缀。<br>加法和减法运算对数组和矩阵都是相同的，但乘法运算不相同。<br>“等于”关系运算符 <code>==</code> 要求实部和虚部相等。其他二进制关系运算符 <code>&gt;</code>、<code>&lt;</code>、<code>&gt;=</code> 和 <code>&lt;=</code> 忽略数字的虚部，而仅考虑实部。<br>一些特殊函数提供了有用的常量值。</p><table><thead><tr><th><code>pi</code></th><th>3.14159265…</th></tr></thead><tbody><tr><td><code>i</code></td><td>虚数单位 √−1</td></tr><tr><td><code>j</code></td><td>与 <code>i</code> 相同</td></tr><tr><td><code>eps</code></td><td>浮点相对精度 <em>ε</em>&#x3D;2−52</td></tr><tr><td><code>realmin</code></td><td>最小浮点数 2−1022</td></tr><tr><td><code>realmax</code></td><td>最大浮点数 (2−<em>ε</em>)21023</td></tr><tr><td><code>Inf</code></td><td>无穷</td></tr><tr><td><code>NaN</code></td><td>非数字</td></tr></tbody></table><p>这些值可以改，也可以改回来。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; <span class="hljs-built_in">pi</span>=<span class="hljs-number">3</span><br><span class="hljs-built_in">pi</span> =<br><br>     <span class="hljs-number">3</span><br>&gt;&gt; clear <span class="hljs-built_in">pi</span>   <span class="hljs-comment">%改回来</span><br>&gt;&gt; <span class="hljs-built_in">pi</span><br><span class="hljs-built_in">ans</span> =<br><br>       <span class="hljs-number">3.1416</span><br></code></pre></td></tr></table></figure><h2 id="生成矩阵"><a href="#生成矩阵" class="headerlink" title="生成矩阵"></a>生成矩阵</h2><p><code>magic</code>创建幻方矩阵<br><code>ones</code> 创建全‘1’矩阵<br><code>zeros</code> 创建全‘0’矩阵<br><code>rand</code> 创建随机数矩阵 生成(0~1]区间的均匀分布的随机数 <em>X</em>∼<em>U</em>(0,1)。<br><code>randn</code>创建随机数矩阵 生成为0，标准差为1的正态分布的随机数 <em>X</em>∼<em>N</em>(0,1)。<br>索引可以用：有点像python<br>start:step:end（省去step默认步长为1）<br>类似于：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; a=<span class="hljs-number">1</span>:<span class="hljs-number">4</span>:<span class="hljs-number">30</span><br><br>a =<br><br>     <span class="hljs-number">1</span>     <span class="hljs-number">5</span>     <span class="hljs-number">9</span>    <span class="hljs-number">13</span>    <span class="hljs-number">17</span>    <span class="hljs-number">21</span>    <span class="hljs-number">25</span>    <span class="hljs-number">29</span><br></code></pre></td></tr></table></figure><h2 id="输入输出"><a href="#输入输出" class="headerlink" title="输入输出"></a>输入输出</h2><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><h4 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h4><p><code>format</code> 函数控制所显示的值的数值格式。此函数仅影响数字显示方式，而不会影响matlab如何计算或保存数字。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs matlab">format short<span class="hljs-comment">%4位小数（默认是这个）</span><br>format long    <span class="hljs-comment">%15位小数</span><br>format short e<span class="hljs-comment">%5位科学计数法</span><br>format long e<span class="hljs-comment">%15位科学计数法</span><br>format short g<span class="hljs-comment">%自动选择短小数或科学计数法（5位有效数字）</span><br>format long g<span class="hljs-comment">%自动选择长小数或科学计数法（15位有效数字）</span><br>format bank    <span class="hljs-comment">%2位小数（货币格式）</span><br>format hex    <span class="hljs-comment">%十六进制表示</span><br>format <span class="hljs-built_in">rat</span>    <span class="hljs-comment">%分数近似</span><br>format compact  <span class="hljs-comment">%消除多余空行</span><br></code></pre></td></tr></table></figure><h4 id="隐藏"><a href="#隐藏" class="headerlink" title="隐藏"></a>隐藏</h4><p>加 ；不显示运算结果。</p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><h4 id="长语句输入"><a href="#长语句输入" class="headerlink" title="长语句输入"></a>长语句输入</h4><p>若语句无法再同一行容纳，可用<code>...</code>加在第一行后面</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; s = <span class="hljs-number">1</span> <span class="hljs-number">-1</span>/<span class="hljs-number">2</span> + <span class="hljs-number">1</span>/<span class="hljs-number">3</span> <span class="hljs-number">-1</span>/<span class="hljs-number">4</span> + <span class="hljs-number">1</span>/<span class="hljs-number">5</span> - <span class="hljs-number">1</span>/<span class="hljs-number">6</span> + <span class="hljs-number">1</span>/<span class="hljs-number">7</span> ...<br>      - <span class="hljs-number">1</span>/<span class="hljs-number">8</span> + <span class="hljs-number">1</span>/<span class="hljs-number">9</span> - <span class="hljs-number">1</span>/<span class="hljs-number">10</span> + <span class="hljs-number">1</span>/<span class="hljs-number">11</span> - <span class="hljs-number">1</span>/<span class="hljs-number">12</span><br>s =<br>    <span class="hljs-number">0.6532</span><br></code></pre></td></tr></table></figure><h4 id="命令行编辑"><a href="#命令行编辑" class="headerlink" title="命令行编辑"></a>命令行编辑</h4><p>按向上 (↑) 和向下箭头键 (↓) 可以重新调用以前的命令，再使用←键或者→键移动光标可进行编辑。键入几个字符并按 ↑ 键可查找前文中以这些字符开头行。</p><h2 id="保存变量"><a href="#保存变量" class="headerlink" title="保存变量"></a>保存变量</h2><p>退出 MATLAB 后，工作区变量不会保留。使用 <code>save</code> 命令保存数据以供将来使用</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs matlab">save myfile.mat<br>load myfile.mat<br></code></pre></td></tr></table></figure><p>通过保存，系统会使用 <code>.mat</code> 扩展名将工作区保存在当前工作文件夹中一个名为 MAT 文件的压缩文件中。<br>使用 <code>load</code> 将 MAT 文件中的数据还原到工作区。（myfile是自己命名的）<br><code>clear</code> 可以清除所有变量</p><h2 id="文本和字符"><a href="#文本和字符" class="headerlink" title="文本和字符"></a>文本和字符</h2><p>文本直接用双引号括起来，文本中有双引号的话就用两个引号，单引号无所谓。<br>belike</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; t=<span class="hljs-string">&quot;b&quot;&quot;a&quot;&quot;b&quot;</span><br><br>t = <br><br>    <span class="hljs-string">&quot;b&quot;</span>a<span class="hljs-string">&quot;b&quot;</span><br></code></pre></td></tr></table></figure><p>需要注意这些仍为数组，<em>类</em>或数据类型是 string。<br><code>whos</code>可以查看数组，单独使用可以查看工作区<br>belike</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; b<br><br>b =<br><br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span>     <span class="hljs-number">4</span><br><br>&gt;&gt; whos b<br>  Name      Size            Bytes  Class     Attributes<br><br>  b         <span class="hljs-number">2</span>x3                <span class="hljs-number">48</span>  double   <br><br>&gt;&gt; whos<br>  Name      Size             Bytes  Class     Attributes<br><br>  a         <span class="hljs-number">1</span>x101              <span class="hljs-number">808</span>  double              <br>  <span class="hljs-built_in">ans</span>       <span class="hljs-number">2</span>x3                 <span class="hljs-number">48</span>  double              <br>  b         <span class="hljs-number">2</span>x3                 <span class="hljs-number">48</span>  double              <br>  c         <span class="hljs-number">6</span>x6                <span class="hljs-number">288</span>  double              <br></code></pre></td></tr></table></figure><p>用+号拼接<br>字符串数组可以有多个元素，可使用strlength函数求数组中每个字符串的长度。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; A<br><br>A = <br><br>  <span class="hljs-number">2</span>×<span class="hljs-number">3</span> string 数组<br><br>    <span class="hljs-string">&quot;a&quot;</span>       <span class="hljs-string">&quot;bb&quot;</span>        <span class="hljs-string">&quot;ccc&quot;</span>    <br>    <span class="hljs-string">&quot;dddd&quot;</span>    <span class="hljs-string">&quot;eeeeee&quot;</span>    <span class="hljs-string">&quot;fffffff&quot;</span><br><br>&gt;&gt; strlength(A)<br><br><span class="hljs-built_in">ans</span> =<br><br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br>     <span class="hljs-number">4</span>     <span class="hljs-number">6</span>     <span class="hljs-number">7</span><br></code></pre></td></tr></table></figure><p>若用单引号，则类型是char（双引号数据类型是string）</p><h2 id="画图"><a href="#画图" class="headerlink" title="画图"></a>画图</h2><h3 id="二维"><a href="#二维" class="headerlink" title="二维"></a>二维</h3><p>要创建二维线图，请使用 plot 函数。例如，绘制在从 0 到 2<em>π</em> 的值组成的线性间距向量上的正弦函数<br><code>linspace</code> 生成线性空间向量</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs matlab">x = <span class="hljs-built_in">linspace</span>(<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-built_in">pi</span>);<br>y = <span class="hljs-built_in">sin</span>(x);<br><span class="hljs-built_in">plot</span>(x,y)<br></code></pre></td></tr></table></figure><p>可以标记轴并添加标题，先plot(x,y）再＋下面这些</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs matlab">xlabel(<span class="hljs-string">&quot;x&quot;</span>)<br>ylabel(<span class="hljs-string">&quot;sin(x)&quot;</span>)<br>title(<span class="hljs-string">&quot;Plot of the Sine Function&quot;</span>)<br></code></pre></td></tr></table></figure><p>plot还有第三个参数，下面这个是使用红色虚线绘制相同的变量</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-built_in">plot</span>(x,y,<span class="hljs-string">&quot;r--&quot;</span>)<br></code></pre></td></tr></table></figure><p><code>&quot;r--&quot;</code> 为<em>线条设定</em>。每个设定可包含表示线条颜色、样式和标记的字符。标记是在绘制的每个数据点上显示的符号，例如，<code>+</code>、<code>o</code> 或 <code>*</code>。例如，<code>g:*&quot;</code> 请求绘制使用 <code>*</code> 标记的绿色点线。<br>默认情况下，每次调用绘图函数、重置坐标区及其他元素以准备新绘图时，MATLAB 都会清空图窗。可以使用<code>hold on</code>，在使用 <code>hold off</code> 或关闭窗口之前，当前图窗窗口中会显示所有绘图。<br>（<code>legend </code>在坐标区上添加图例，参数数量要和线符合)</p><h3 id="三维"><a href="#三维" class="headerlink" title="三维"></a>三维</h3><p>三维图通常显示一个由带两个变量的函数 <em>z</em>&#x3D;<em>f</em>(<em>x</em>,<em>y</em>) 定义的曲面图。例如，对于给定的行向量和列向量 <code>x</code> 和 <code>y</code>，每个向量包含 [-2,2] 范围内的 20 个点，计算 $z&#x3D;xe^{-x^2 - y^2}$。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs matlab">x = <span class="hljs-built_in">linspace</span>(<span class="hljs-number">-2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">20</span>);<br>y = x&#x27;;<br>z = x .* <span class="hljs-built_in">exp</span>(-x.^<span class="hljs-number">2</span> - y.^<span class="hljs-number">2</span>);<br>surf(x,y,z)<br></code></pre></td></tr></table></figure><p>可以使用 <code>tiledlayout</code> 或 <code>subplot</code> 在同一窗口的不同部分显示多个绘图。例如在图窗窗口中创建 2×2 布局。然后，每当要某个绘图出现在下一区域中时调用 <code>nexttile</code>。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs matlab">t = tiledlayout(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>);<br>title(t,<span class="hljs-string">&quot;Trigonometric Functions&quot;</span>)<br>x = <span class="hljs-built_in">linspace</span>(<span class="hljs-number">0</span>,<span class="hljs-number">30</span>);<br><br>nexttile<br><span class="hljs-built_in">plot</span>(x,<span class="hljs-built_in">sin</span>(x))<br>title(<span class="hljs-string">&quot;Sine&quot;</span>)<br><br>nexttile<br><span class="hljs-built_in">plot</span>(x,<span class="hljs-built_in">cos</span>(x))<br>title(<span class="hljs-string">&quot;Cosine&quot;</span>)<br><br>nexttile<br><span class="hljs-built_in">plot</span>(x,<span class="hljs-built_in">tan</span>(x))<br>title(<span class="hljs-string">&quot;Tangent&quot;</span>)<br><br>nexttile<br><span class="hljs-built_in">plot</span>(x,<span class="hljs-built_in">sec</span>(x))<br>title(<span class="hljs-string">&quot;Secant&quot;</span>)<br></code></pre></td></tr></table></figure><p>创建球面 sphere</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">[X,Y,Z] = sphere <span class="hljs-comment">%返回球面的 x、y 和 z 坐标而不对其绘图。返回的球面的半径等于 1，由 20×20 个面组成。</span><br></code></pre></td></tr></table></figure><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><p>脚本是最简单的一种 MATLAB 程序。脚本是一个包含多行连续的 MATLAB 命令和函数调用的文件。在命令行中键入脚本名称即可运行该脚本。<br>用<code>edit</code>命令创建脚本，此命令会打开一个名为 <code>mysphere.m</code> 的空白文件。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">edit mysphere<br></code></pre></td></tr></table></figure><p>以创建一个单位球、将半径加倍并绘制结果图：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">% Create and plot a sphere with radius r.</span><br>[x,y,z] = sphere;       <span class="hljs-comment">% Create a unit sphere.</span><br>r = <span class="hljs-number">2</span>;<br>surf(x*r,y*r,z*r)       <span class="hljs-comment">% Adjust each dimension and plot.</span><br>axis equal              <span class="hljs-comment">% Use the same scale for each axis. </span><br> <br><span class="hljs-comment">% Find the surface area and volume.</span><br>A = <span class="hljs-number">4</span>*<span class="hljs-built_in">pi</span>*r^<span class="hljs-number">2</span>;<br>V = (<span class="hljs-number">4</span>/<span class="hljs-number">3</span>)*<span class="hljs-built_in">pi</span>*r^<span class="hljs-number">3</span>;<br></code></pre></td></tr></table></figure><p>也可使用实时脚本</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">edit newfile.mlx <span class="hljs-comment">%后缀不一样</span><br></code></pre></td></tr></table></figure><h3 id="循环与条件语句"><a href="#循环与条件语句" class="headerlink" title="循环与条件语句"></a>循环与条件语句</h3><p>任何脚本中都可以定义按循环重复执行或按条件执行的代码段。循环使用 <code>for</code> 或 <code>while</code> 关键字，条件语句使用 <code>if</code> 或 <code>switch</code>。</p><p>例如，以下脚本脚本使用 <code>for</code> 循环来计算斐波那契数列的前 100 个数。在这个序列中，最开始的两个数是 1，随后的每个数是前面两个数的和，即 Fn &#x3D; Fn-1 + Fn-2。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs matlab">N = <span class="hljs-number">100</span>;<br>f(<span class="hljs-number">1</span>) = <span class="hljs-number">1</span>;<br>f(<span class="hljs-number">2</span>) = <span class="hljs-number">1</span>;<br><br><span class="hljs-keyword">for</span> n = <span class="hljs-number">3</span>:N<br>    f(n) = f(n<span class="hljs-number">-1</span>) + f(n<span class="hljs-number">-2</span>);<br><span class="hljs-keyword">end</span><br>f(<span class="hljs-number">1</span>:<span class="hljs-number">10</span>)<br></code></pre></td></tr></table></figure><p>条件语句仅在给定表达式为 true 时执行，例如</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs matlab">num = randi(<span class="hljs-number">100</span>)<br><span class="hljs-keyword">if</span> num &lt; <span class="hljs-number">34</span><br>   sz = <span class="hljs-string">&#x27;low&#x27;</span><br><span class="hljs-keyword">elseif</span> num &lt; <span class="hljs-number">67</span><br>   sz = <span class="hljs-string">&#x27;medium&#x27;</span><br><span class="hljs-keyword">else</span><br>   sz = <span class="hljs-string">&#x27;high&#x27;</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h2 id="帮助"><a href="#帮助" class="headerlink" title="帮助"></a>帮助</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs matlab">doc <span class="hljs-built_in">mean</span>  <span class="hljs-comment">%使用 doc 命令在单独的窗口中打开函数文档</span><br>help <span class="hljs-built_in">mean</span> <span class="hljs-comment">%使用 help 命令可在命令行窗口中查看相应函数的简明文档</span><br>help elfun <span class="hljs-comment">%有关初等函数的列表</span><br>help specfun <span class="hljs-comment">%高等函数的列表？</span><br>help elmat <span class="hljs-comment">%矩阵的列表</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>25-6-14</title>
    <link href="/2025/06/14/25-6-14/"/>
    <url>/2025/06/14/25-6-14/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><p>目前期末周+六级，六级寄了，专心期末。</p><p>大概率考试完搞集创赛，咳咳期待有飞机。总之视觉识别肯定放到之后了，不知道11有没有更高的要求。至于那个桌面智能宠物有时间就搞，毕竟有舵机+3D打印，做了好处多多。<br>还有就是位置环，之后查查开源的吧，看有没有能借鉴的。嗯，比之前想得好，队友还行。<br>考完试就迎接地狱模式了啊，真是让人害怕。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>25-5-19</title>
    <link href="/2025/05/19/25-5-19/"/>
    <url>/2025/05/19/25-5-19/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><h1 id="集创赛"><a href="#集创赛" class="headerlink" title="集创赛"></a>集创赛</h1><p>算是初步把功能实现了，颜色识别本来用的开源的比较复杂的，但是没做腐蚀膨胀，识别的效果不好。<br>换了的简单方法，单纯计算二值化后的物体大小。效果还行，就是阈值有的找不准。<br>基本思路就是先颜色识别，然后根据识别到的颜色二值化，然后计算二值化后的数据在一定框内的有效像素点数量，太少就没有，中等数量就是圆，再大一点就是正方形。<br>下面贴一下代码。<br>这个vip还没验证不知道对不对，输出原始图像和红框。<br>话说，想复刻一个桌面智能宠物，b站有教程，有时间的话。。。。。。</p><h2 id="VIP"><a href="#VIP" class="headerlink" title="VIP"></a>VIP</h2><h3 id="VIP1"><a href="#VIP1" class="headerlink" title="VIP1"></a>VIP1</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-keyword">module</span> vip(<br>    <span class="hljs-comment">//module clock</span><br>    <span class="hljs-keyword">input</span>           clk            ,   <span class="hljs-comment">// 时钟信号</span><br>    <span class="hljs-keyword">input</span>           rst_n          ,   <span class="hljs-comment">// 复位信号（低有效）</span><br><br>    <span class="hljs-comment">//图像处理前的数据接口</span><br>    <span class="hljs-keyword">input</span>           pre_frame_vsync,<br>    <span class="hljs-keyword">input</span>           pre_frame_href ,<br>    <span class="hljs-keyword">input</span>           pre_frame_de   ,<br>    <span class="hljs-keyword">input</span>    [<span class="hljs-number">15</span>:<span class="hljs-number">0</span>] pre_rgb        ,<br><br>    <span class="hljs-comment">//图像处理后的数据接口</span><br>    <span class="hljs-keyword">output</span>          post_frame_vsync,  <span class="hljs-comment">// 场同步信号</span><br>    <span class="hljs-keyword">output</span>          post_frame_href ,  <span class="hljs-comment">// 行同步信号</span><br>    <span class="hljs-keyword">output</span>          post_frame_de   ,  <span class="hljs-comment">// 数据输入使能</span><br>    <span class="hljs-keyword">output</span>   [<span class="hljs-number">15</span>:<span class="hljs-number">0</span>] post_rgb        ,  <span class="hljs-comment">// RGB565颜色数据</span><br>    <span class="hljs-keyword">output</span>   [ <span class="hljs-number">7</span>:<span class="hljs-number">0</span>] target_color    ,<br>    <span class="hljs-keyword">output</span>   [ <span class="hljs-number">1</span>:<span class="hljs-number">0</span>] Shape<br>);<br><span class="hljs-keyword">assign</span>  post_frame_vsync = vs;<br><span class="hljs-keyword">assign</span>  post_frame_href = hs;<br><span class="hljs-keyword">assign</span>  post_frame_de = valid_o;<br><span class="hljs-keyword">assign</span>  post_rgb = &#123;R_o[<span class="hljs-number">7</span>:<span class="hljs-number">3</span>],G_o[<span class="hljs-number">7</span>:<span class="hljs-number">2</span>],B_o[<span class="hljs-number">7</span>:<span class="hljs-number">3</span>]&#125;;<br><span class="hljs-keyword">wire</span>   [<span class="hljs-number">8</span>:<span class="hljs-number">0</span>]  hsv_h;<br><span class="hljs-keyword">wire</span>   [<span class="hljs-number">8</span>:<span class="hljs-number">0</span>]  hsv_s;<br><span class="hljs-keyword">wire</span>   [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]  hsv_v;<br><span class="hljs-keyword">wire</span> binary_pixel;<br><span class="hljs-keyword">wire</span> binary_vs;<br><span class="hljs-keyword">wire</span> binary_hs;<br><span class="hljs-keyword">wire</span> binary_de;<br><br><span class="hljs-comment">//wire [7:0] target_color;</span><br><span class="hljs-comment">//*****************************************************</span><br><span class="hljs-comment">//**                    main code</span><br><span class="hljs-comment">//*****************************************************</span><br><span class="hljs-keyword">wire</span> post1_frame_vsync;<br><span class="hljs-keyword">wire</span> post1_frame_href;<br><span class="hljs-keyword">wire</span> post1_frame_clken;<br><span class="hljs-keyword">wire</span> post2_frame_vsync;<br><span class="hljs-keyword">wire</span> post2_frame_href;<br><span class="hljs-keyword">wire</span> post2_frame_clken;<br><span class="hljs-comment">//rgb转hsv</span><br>rgb2hsv u_rgb2hsv(<br>    <span class="hljs-variable">.clk</span>(clk ),<br>    <span class="hljs-variable">.reset_n</span>    (rst_n ),<br>    <span class="hljs-variable">.rgb_r</span>(&#123;pre_rgb[<span class="hljs-number">15</span>:<span class="hljs-number">11</span>],pre_rgb[<span class="hljs-number">15</span>:<span class="hljs-number">13</span>]&#125; ),<br>    <span class="hljs-variable">.rgb_g</span>(&#123;pre_rgb[<span class="hljs-number">10</span>:<span class="hljs-number">5</span> ],pre_rgb[<span class="hljs-number">10</span>: <span class="hljs-number">9</span>]&#125; ),<br>    <span class="hljs-variable">.rgb_b</span>(&#123;pre_rgb[ <span class="hljs-number">4</span>:<span class="hljs-number">0</span> ],pre_rgb[ <span class="hljs-number">4</span>: <span class="hljs-number">2</span>]&#125; ),<br>    <span class="hljs-variable">.vs</span>(pre_frame_vsync ),<br>    <span class="hljs-variable">.hs</span>(pre_frame_href ),<br>    <span class="hljs-variable">.de</span>(pre_frame_de ),<br>    <span class="hljs-variable">.hsv_h</span>(hsv_h ),<br>    <span class="hljs-variable">.hsv_s</span>(hsv_s    ),<br>    <span class="hljs-variable">.hsv_v</span>(hsv_v    ),<br>    <span class="hljs-variable">.hsv_vs</span>(post1_frame_vsync ),<br>    <span class="hljs-variable">.hsv_hs</span>(post1_frame_href ),<br>    <span class="hljs-variable">.hsv_de</span>(post1_frame_clken     )<br>);<br><br>vip_detect_target_color<br>#(<br>    <span class="hljs-variable">.IMG_HDISP</span> (<span class="hljs-number">10&#x27;d800</span>), <br>    <span class="hljs-variable">.IMG_VDISP</span> (<span class="hljs-number">10&#x27;d480</span>) <br>)<br>u_vip_detect_target_color(<br>    <span class="hljs-variable">.clk</span>(clk),<br>    <span class="hljs-variable">.rst_n</span>    (rst_n), <br>    <span class="hljs-variable">.per_frame_vsync</span>(post1_frame_vsync),<br>    <span class="hljs-variable">.per_frame_href</span>    (post1_frame_href),<br>    <span class="hljs-variable">.per_frame_clken</span>(post1_frame_clken  ),<br>    <span class="hljs-variable">.per_img_H</span>    (hsv_h),<br>    <span class="hljs-variable">.target_color</span>    (target_color),<br>    <span class="hljs-variable">.post_frame_vsync</span>   (post2_frame_vsync  ),<br>    <span class="hljs-variable">.post_frame_href</span>    (post2_frame_href   ),<br>    <span class="hljs-variable">.post_frame_clken</span>   (post2_frame_clken  )<br>);<br><br>HSV_binarization u_HSV_binarization(<br>    <span class="hljs-variable">.clk</span>(clk),            <span class="hljs-comment">// 时钟信号                                                </span><br>    <span class="hljs-variable">.rst_n</span>(rst_n),          <span class="hljs-comment">// 异步复位信号，低电平有效                              </span><br><br>    <span class="hljs-variable">.hsv_h</span>(hsv_h),          <span class="hljs-comment">// 输入的HSV色调分量                                     </span><br>    <span class="hljs-variable">.hsv_s</span>(hsv_s),          <span class="hljs-comment">// 输入的HSV饱和度分量                                        </span><br>    <span class="hljs-variable">.hsv_v</span>(hsv_v),          <span class="hljs-comment">// 输入的HSV亮度分量                                          </span><br>    <span class="hljs-variable">.hsv_vs</span>(post2_frame_vsync),         <span class="hljs-comment">// 输入的HSV垂直同步信号                      </span><br>    <span class="hljs-variable">.hsv_hs</span>(post2_frame_href),         <span class="hljs-comment">// 输入的HSV水平同步信号                       </span><br>    <span class="hljs-variable">.hsv_de</span>(post2_frame_clken),         <span class="hljs-comment">// 输入的HSV有效视频信号                         </span><br><br><span class="hljs-variable">.color</span>(target_color),<span class="hljs-comment">//(红，黄，蓝，绿)                               </span><br><br>    <span class="hljs-variable">.binary_pixel</span>(binary_pixel),  <span class="hljs-comment">//输出的二值化像素值（0或1）                     </span><br>    <span class="hljs-variable">.vs_out</span>(binary_vs),         <span class="hljs-comment">// 输出的垂直同步信号  //这三个是输入信号打一拍      </span><br>    <span class="hljs-variable">.hs_out</span>(binary_hs),         <span class="hljs-comment">// 输出的水平同步信号                                </span><br>    <span class="hljs-variable">.de_out</span>(binary_de)          <span class="hljs-comment">// 输出的有效视频信号                                </span><br>);<br><br>Object_detection<br>#(<br><span class="hljs-variable">.IMG_HDISP</span>(<span class="hljs-number">10&#x27;d800</span>), <br><span class="hljs-variable">.IMG_VDISP</span>(<span class="hljs-number">10&#x27;d480</span>)  <br>)u_Object_detection                                     <br>(      <br><span class="hljs-variable">.Clk</span>(clk),   <br><span class="hljs-variable">.Rst_n</span>(rst_n),<br>    <span class="hljs-variable">.per_frame_vsync</span>(binary_vs),<br>    <span class="hljs-variable">.per_frame_href</span>(binary_hs),<br><span class="hljs-variable">.valid_i</span>(binary_de),  <span class="hljs-comment">//有效</span><br><span class="hljs-variable">.img_data_i</span>(binary_pixel),<span class="hljs-comment">//数据</span><br><span class="hljs-variable">.Shape</span>(Shape)<span class="hljs-comment">//目标形状（圆，方，六）</span><br>);<br><span class="hljs-keyword">wire</span> [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>] R_o;<br><span class="hljs-keyword">wire</span> [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>] G_o;<br><span class="hljs-keyword">wire</span> [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>] B_o;<br><span class="hljs-keyword">wire</span> vs;<br><span class="hljs-keyword">wire</span> hs;<br><span class="hljs-keyword">wire</span> valid_o;<br><span class="hljs-keyword">wire</span> Boundary_areas;<br>Target_tags<br>#(<br><span class="hljs-variable">.IMG_HDISP</span>(<span class="hljs-number">10&#x27;d800</span>), <br><span class="hljs-variable">.IMG_VDISP</span>(<span class="hljs-number">10&#x27;d480</span>)  <br>)u_Target_tags<br>(<br><span class="hljs-variable">.Clk</span>(clk),   <br><span class="hljs-variable">.Rst_n</span>(rst_n),<br>    <br>    <span class="hljs-variable">.pre_frame_vsync</span>(pre_frame_vsync),<br>    <span class="hljs-variable">.pre_frame_href</span>(pre_frame_href),<br><span class="hljs-variable">.valid_i</span>(pre_frame_de), <br><span class="hljs-variable">.R_i</span>(&#123;pre_rgb[<span class="hljs-number">15</span>:<span class="hljs-number">11</span>], pre_rgb[<span class="hljs-number">15</span>:<span class="hljs-number">13</span>]&#125;), <span class="hljs-comment">// 5bit→8bit</span><br>    <span class="hljs-variable">.G_i</span>(&#123;pre_rgb[<span class="hljs-number">10</span>:<span class="hljs-number">5</span>],  pre_rgb[<span class="hljs-number">10</span>:<span class="hljs-number">9</span>]&#125;),  <span class="hljs-comment">// 6bit→8bit</span><br>    <span class="hljs-variable">.B_i</span>(&#123;pre_rgb[<span class="hljs-number">4</span>:<span class="hljs-number">0</span>],   pre_rgb[<span class="hljs-number">4</span>:<span class="hljs-number">2</span>]&#125;)    <span class="hljs-comment">// 5bit→8bit</span><br><br>    <span class="hljs-variable">.post_frame_vsync</span>(vs),<br>    <span class="hljs-variable">.post_frame_href</span>(hs),<br><span class="hljs-variable">.valid_o</span>(valid_o), <br><span class="hljs-variable">.R_o</span>(R_o), <br><span class="hljs-variable">.G_o</span>(G_o), <br><span class="hljs-variable">.B_o</span>(B_o)<br>);<br><br><span class="hljs-keyword">endmodule</span><br></code></pre></td></tr></table></figure><h3 id="VIP2"><a href="#VIP2" class="headerlink" title="VIP2"></a>VIP2</h3><p>下面是验证过的vip，输出二值化图像和红框。</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-keyword">module</span> vip(<br>    <span class="hljs-comment">//module clock</span><br>    <span class="hljs-keyword">input</span>           clk            ,   <span class="hljs-comment">// 时钟信号</span><br>    <span class="hljs-keyword">input</span>           rst_n          ,   <span class="hljs-comment">// 复位信号（低有效）</span><br><br>    <span class="hljs-comment">//图像处理前的数据接口</span><br>    <span class="hljs-keyword">input</span>           pre_frame_vsync,<br>    <span class="hljs-keyword">input</span>           pre_frame_href ,<br>    <span class="hljs-keyword">input</span>           pre_frame_de   ,<br>    <span class="hljs-keyword">input</span>    [<span class="hljs-number">15</span>:<span class="hljs-number">0</span>] pre_rgb        ,<br><br>    <span class="hljs-comment">//图像处理后的数据接口</span><br>    <span class="hljs-keyword">output</span>          post_frame_vsync,  <span class="hljs-comment">// 场同步信号</span><br>    <span class="hljs-keyword">output</span>          post_frame_href ,  <span class="hljs-comment">// 行同步信号</span><br>    <span class="hljs-keyword">output</span>          post_frame_de   ,  <span class="hljs-comment">// 数据输入使能</span><br>    <span class="hljs-keyword">output</span>   [<span class="hljs-number">15</span>:<span class="hljs-number">0</span>] post_rgb        ,  <span class="hljs-comment">// RGB565颜色数据</span><br>    <span class="hljs-keyword">output</span>   [ <span class="hljs-number">7</span>:<span class="hljs-number">0</span>] target_color    ,<br>    <span class="hljs-keyword">output</span>   [ <span class="hljs-number">1</span>:<span class="hljs-number">0</span>] Shape<br>);<br><span class="hljs-keyword">assign</span>  post_frame_vsync = vs;<br><span class="hljs-keyword">assign</span>  post_frame_href = hs;<br><span class="hljs-keyword">assign</span>  post_frame_de = valid_o;<br><span class="hljs-keyword">assign</span>  post_rgb = &#123;R_o[<span class="hljs-number">7</span>:<span class="hljs-number">3</span>],G_o[<span class="hljs-number">7</span>:<span class="hljs-number">2</span>],B_o[<span class="hljs-number">7</span>:<span class="hljs-number">3</span>]&#125;;<br><span class="hljs-comment">//assign post_rgb = &#123;16&#123;Boundary_areas&#125;&#125;;</span><br><span class="hljs-keyword">wire</span>   [<span class="hljs-number">8</span>:<span class="hljs-number">0</span>]  hsv_h;<br><span class="hljs-keyword">wire</span>   [<span class="hljs-number">8</span>:<span class="hljs-number">0</span>]  hsv_s;<br><span class="hljs-keyword">wire</span>   [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]  hsv_v;<br><span class="hljs-keyword">wire</span> binary_pixel;<br><span class="hljs-keyword">wire</span> binary_vs;<br><span class="hljs-keyword">wire</span> binary_hs;<br><span class="hljs-keyword">wire</span> binary_de;<br><br><span class="hljs-comment">//wire [7:0] target_color;</span><br><span class="hljs-comment">//*****************************************************</span><br><span class="hljs-comment">//**                    main code</span><br><span class="hljs-comment">//*****************************************************</span><br><span class="hljs-keyword">wire</span> post1_frame_vsync;<br><span class="hljs-keyword">wire</span> post1_frame_href;<br><span class="hljs-keyword">wire</span> post1_frame_clken;<br><span class="hljs-keyword">wire</span> post2_frame_vsync;<br><span class="hljs-keyword">wire</span> post2_frame_href;<br><span class="hljs-keyword">wire</span> post2_frame_clken;<br><span class="hljs-comment">//rgb转hsv</span><br>rgb2hsv u_rgb2hsv(<br>    <span class="hljs-variable">.clk</span>(clk ),<br>    <span class="hljs-variable">.reset_n</span>    (rst_n ),<br>    <span class="hljs-variable">.rgb_r</span>(&#123;pre_rgb[<span class="hljs-number">15</span>:<span class="hljs-number">11</span>],pre_rgb[<span class="hljs-number">15</span>:<span class="hljs-number">13</span>]&#125; ),<br>    <span class="hljs-variable">.rgb_g</span>(&#123;pre_rgb[<span class="hljs-number">10</span>:<span class="hljs-number">5</span> ],pre_rgb[<span class="hljs-number">10</span>: <span class="hljs-number">9</span>]&#125; ),<br>    <span class="hljs-variable">.rgb_b</span>(&#123;pre_rgb[ <span class="hljs-number">4</span>:<span class="hljs-number">0</span> ],pre_rgb[ <span class="hljs-number">4</span>: <span class="hljs-number">2</span>]&#125; ),<br>    <span class="hljs-variable">.vs</span>(pre_frame_vsync ),<br>    <span class="hljs-variable">.hs</span>(pre_frame_href ),<br>    <span class="hljs-variable">.de</span>(pre_frame_de ),<br>    <span class="hljs-variable">.hsv_h</span>(hsv_h ),<br>    <span class="hljs-variable">.hsv_s</span>(hsv_s    ),<br>    <span class="hljs-variable">.hsv_v</span>(hsv_v    ),<br>    <span class="hljs-variable">.hsv_vs</span>(post1_frame_vsync ),<br>    <span class="hljs-variable">.hsv_hs</span>(post1_frame_href ),<br>    <span class="hljs-variable">.hsv_de</span>(post1_frame_clken     )<br>);<br><br>vip_detect_target_color<br>#(<br>    <span class="hljs-variable">.IMG_HDISP</span> (<span class="hljs-number">10&#x27;d800</span>), <br>    <span class="hljs-variable">.IMG_VDISP</span> (<span class="hljs-number">10&#x27;d480</span>) <br>)<br>u_vip_detect_target_color(<br>    <span class="hljs-variable">.clk</span>(clk),<br>    <span class="hljs-variable">.rst_n</span>    (rst_n), <br>    <span class="hljs-variable">.per_frame_vsync</span>(post1_frame_vsync),<br>    <span class="hljs-variable">.per_frame_href</span>    (post1_frame_href),<br>    <span class="hljs-variable">.per_frame_clken</span>(post1_frame_clken  ),<br>    <span class="hljs-variable">.per_img_H</span>    (hsv_h),<br>    <span class="hljs-variable">.target_color</span>    (target_color),<br>    <span class="hljs-variable">.post_frame_vsync</span>   (post2_frame_vsync  ),<br>    <span class="hljs-variable">.post_frame_href</span>    (post2_frame_href   ),<br>    <span class="hljs-variable">.post_frame_clken</span>   (post2_frame_clken  )<br>);<br><br>HSV_binarization u_HSV_binarization(<br>    <span class="hljs-variable">.clk</span>(clk),            <span class="hljs-comment">// 时钟信号                                                </span><br>    <span class="hljs-variable">.rst_n</span>(rst_n),          <span class="hljs-comment">// 异步复位信号，低电平有效                              </span><br><br>    <span class="hljs-variable">.hsv_h</span>(hsv_h),          <span class="hljs-comment">// 输入的HSV色调分量                                     </span><br>    <span class="hljs-variable">.hsv_s</span>(hsv_s),          <span class="hljs-comment">// 输入的HSV饱和度分量                                        </span><br>    <span class="hljs-variable">.hsv_v</span>(hsv_v),          <span class="hljs-comment">// 输入的HSV亮度分量                                          </span><br>    <span class="hljs-variable">.hsv_vs</span>(post2_frame_vsync),         <span class="hljs-comment">// 输入的HSV垂直同步信号                      </span><br>    <span class="hljs-variable">.hsv_hs</span>(post2_frame_href),         <span class="hljs-comment">// 输入的HSV水平同步信号                       </span><br>    <span class="hljs-variable">.hsv_de</span>(post2_frame_clken),         <span class="hljs-comment">// 输入的HSV有效视频信号                         </span><br><br><span class="hljs-variable">.color</span>(target_color),<span class="hljs-comment">//(红，黄，蓝，绿)                               </span><br><br>    <span class="hljs-variable">.binary_pixel</span>(binary_pixel),  <span class="hljs-comment">//输出的二值化像素值（0或1）                     </span><br>    <span class="hljs-variable">.vs_out</span>(binary_vs),         <span class="hljs-comment">// 输出的垂直同步信号  //这三个是输入信号打一拍      </span><br>    <span class="hljs-variable">.hs_out</span>(binary_hs),         <span class="hljs-comment">// 输出的水平同步信号                                </span><br>    <span class="hljs-variable">.de_out</span>(binary_de)          <span class="hljs-comment">// 输出的有效视频信号                                </span><br>);<br><br>Object_detection<br>#(<br><span class="hljs-variable">.IMG_HDISP</span>(<span class="hljs-number">10&#x27;d800</span>), <br><span class="hljs-variable">.IMG_VDISP</span>(<span class="hljs-number">10&#x27;d480</span>)  <br>)u_Object_detection                                     <br>(      <br><span class="hljs-variable">.Clk</span>(clk),   <br><span class="hljs-variable">.Rst_n</span>(rst_n),<br>    <span class="hljs-variable">.per_frame_vsync</span>(binary_vs),<br>    <span class="hljs-variable">.per_frame_href</span>(binary_hs),<br><span class="hljs-variable">.valid_i</span>(binary_de),  <span class="hljs-comment">//有效</span><br><span class="hljs-variable">.img_data_i</span>(binary_pixel),<span class="hljs-comment">//数据</span><br><span class="hljs-variable">.Shape</span>(Shape)<span class="hljs-comment">//目标形状（圆，方，六）</span><br>);<br><span class="hljs-keyword">wire</span> [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>] R_o;<br><span class="hljs-keyword">wire</span> [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>] G_o;<br><span class="hljs-keyword">wire</span> [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>] B_o;<br><span class="hljs-keyword">wire</span> vs;<br><span class="hljs-keyword">wire</span> hs;<br><span class="hljs-keyword">wire</span> valid_o;<br><span class="hljs-keyword">wire</span> Boundary_areas;<br>Target_tags<br>#(<br><span class="hljs-variable">.IMG_HDISP</span>(<span class="hljs-number">10&#x27;d800</span>), <br><span class="hljs-variable">.IMG_VDISP</span>(<span class="hljs-number">10&#x27;d480</span>)  <br>)u_Target_tags<br>(<br><span class="hljs-variable">.Clk</span>(clk),   <br><span class="hljs-variable">.Rst_n</span>(rst_n),<br>    <br>    <span class="hljs-variable">.pre_frame_vsync</span>(binary_vs),<br>    <span class="hljs-variable">.pre_frame_href</span>(binary_hs),<br><span class="hljs-variable">.valid_i</span>(binary_de), <br><span class="hljs-variable">.R_i</span>(&#123;<span class="hljs-number">8</span>&#123;binary_pixel&#125;&#125;), <br><span class="hljs-variable">.G_i</span>(&#123;<span class="hljs-number">8</span>&#123;binary_pixel&#125;&#125;), <br><span class="hljs-variable">.B_i</span>(&#123;<span class="hljs-number">8</span>&#123;binary_pixel&#125;&#125;), <br><br>    <span class="hljs-variable">.post_frame_vsync</span>(vs),<br>    <span class="hljs-variable">.post_frame_href</span>(hs),<br><span class="hljs-variable">.valid_o</span>(valid_o), <br><span class="hljs-variable">.R_o</span>(R_o), <br><span class="hljs-variable">.G_o</span>(G_o), <br><span class="hljs-variable">.B_o</span>(B_o) <br>);<br><br><span class="hljs-keyword">endmodule</span><br></code></pre></td></tr></table></figure><h2 id="Object-detection"><a href="#Object-detection" class="headerlink" title="Object_detection"></a>Object_detection</h2><p>下面是形状识别</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-keyword">module</span> Object_detection<br>#(<br><span class="hljs-keyword">parameter</span>[<span class="hljs-number">9</span>:<span class="hljs-number">0</span>]IMG_HDISP = <span class="hljs-number">10&#x27;d800</span>, <br><span class="hljs-keyword">parameter</span>[<span class="hljs-number">9</span>:<span class="hljs-number">0</span>]IMG_VDISP = <span class="hljs-number">10&#x27;d480</span>  <br>)                                            <br>(                                            <br><span class="hljs-keyword">input</span>Clk,   <br><span class="hljs-keyword">input</span>Rst_n, <br>    <br>    <span class="hljs-keyword">input</span>               per_frame_vsync,<br>    <span class="hljs-keyword">input</span>               per_frame_href,<br><span class="hljs-keyword">input</span>valid_i,  <span class="hljs-comment">//有效</span><br><span class="hljs-keyword">input</span> img_data_i,<span class="hljs-comment">//数据</span><br><br><span class="hljs-keyword">output</span> <span class="hljs-keyword">reg</span> [<span class="hljs-number">1</span>:<span class="hljs-number">0</span>]Shape<span class="hljs-comment">//目标形状（圆，方）</span><br><br>);<br><span class="hljs-comment">/////////////////////////////////////////横纵坐标计数及信号打拍</span><br><span class="hljs-keyword">reg</span> [<span class="hljs-number">9</span>:<span class="hljs-number">0</span>] x_cnt,x_cnt_r;<br><span class="hljs-keyword">reg</span> [<span class="hljs-number">9</span>:<span class="hljs-number">0</span>] y_cnt,y_cnt_r;<br><br><span class="hljs-keyword">reg</span>  frame_end,frame_end_r;<br><span class="hljs-keyword">reg</span>  valid_i_r;<br><span class="hljs-keyword">reg</span>       img_data_i_r;<br><span class="hljs-keyword">reg</span>  vsync_pos_flag_r;<br><span class="hljs-keyword">reg</span>[<span class="hljs-number">3</span>:<span class="hljs-number">0</span>] update_r;<br><span class="hljs-keyword">reg</span>[<span class="hljs-number">1</span>:<span class="hljs-number">0</span>] Data_req_r;<br><br><span class="hljs-keyword">wire</span> vsync_pos_flag;<span class="hljs-comment">//场同步信号上升沿</span><br><span class="hljs-keyword">wire</span> vsync_neg_flag;<span class="hljs-comment">//场同步信号下降沿</span><br><span class="hljs-keyword">wire</span> update;<br><br>    <span class="hljs-comment">// 信号打拍</span><br>    <span class="hljs-keyword">reg</span> [<span class="hljs-number">4</span>:<span class="hljs-number">0</span>] per_frame_vsync_delay;<br>    <span class="hljs-keyword">reg</span> [<span class="hljs-number">4</span>:<span class="hljs-number">0</span>] per_frame_href_delay;<br>    <span class="hljs-keyword">reg</span> [<span class="hljs-number">4</span>:<span class="hljs-number">0</span>] per_frame_clken_delay;<br><span class="hljs-keyword">assign</span> vsync_pos_flag = frame_end &amp; (~frame_end_r);<span class="hljs-comment">//frame_end的上升沿</span><br><span class="hljs-keyword">assign</span> vsync_neg_flag = (~frame_end) &amp; frame_end_r;<span class="hljs-comment">//frame_end的下升沿</span><br><span class="hljs-keyword">assign</span> update = vsync_pos_flag;<span class="hljs-comment">// &amp; location_o[40];//frame_end的上升沿</span><br><span class="hljs-comment">/////////////////////////////////////////</span><br><span class="hljs-comment">//valid_i_r有效x_cnt+1,valid_i_r有效且x_cnt计满后y_cnt+1,两个都计满后frame_end高电平一次</span><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> Clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> Rst_n)<span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(!Rst_n) <span class="hljs-keyword">begin</span><br>valid_i_r &lt;= <span class="hljs-number">0</span>;<br>img_data_i_r &lt;= <span class="hljs-number">0</span>;<br>x_cnt &lt;= <span class="hljs-number">0</span>;<br>y_cnt &lt;= <span class="hljs-number">0</span>;<br>x_cnt_r &lt;= <span class="hljs-number">0</span>;<br>y_cnt_r &lt;= <span class="hljs-number">0</span>;<br>frame_end &lt;= <span class="hljs-number">0</span>;<br>frame_end_r &lt;= <span class="hljs-number">0</span>;<br>vsync_pos_flag_r &lt;= <span class="hljs-number">0</span>;<br>update_r &lt;= <span class="hljs-number">0</span>;<br><span class="hljs-keyword">end</span> <span class="hljs-keyword">else</span> <span class="hljs-keyword">begin</span><br>valid_i_r &lt;= valid_i;<br>img_data_i_r &lt;= img_data_i;<br>x_cnt &lt;= valid_i_r ? ((x_cnt == IMG_HDISP - <span class="hljs-number">1</span>) ? <span class="hljs-number">0</span> : x_cnt + <span class="hljs-number">1</span>) : x_cnt;<br>y_cnt &lt;= valid_i_r&amp;&amp;(x_cnt == IMG_HDISP - <span class="hljs-number">1</span>) ? ((y_cnt == IMG_VDISP - <span class="hljs-number">1</span>) ? <span class="hljs-number">0</span> : y_cnt + <span class="hljs-number">1</span>) : y_cnt;<br>x_cnt_r &lt;= x_cnt;<br>y_cnt_r &lt;= y_cnt;<br>frame_end &lt;= valid_i_r&amp;&amp;(x_cnt == IMG_HDISP - <span class="hljs-number">1</span>)&amp;&amp;(y_cnt == IMG_VDISP - <span class="hljs-number">1</span>) ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>;<br>frame_end_r &lt;= frame_end;<br>vsync_pos_flag_r &lt;= vsync_pos_flag;<br>update_r &lt;= &#123;update_r[<span class="hljs-number">2</span>:<span class="hljs-number">0</span>],update&#125;;<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><span class="hljs-comment">/////////////////////////////////////////</span><br>    <span class="hljs-keyword">parameter</span>  right = <span class="hljs-number">700</span>;<br>    <span class="hljs-keyword">parameter</span>  left = <span class="hljs-number">100</span>;<br>    <span class="hljs-keyword">parameter</span>  top = <span class="hljs-number">410</span>;<br>    <span class="hljs-keyword">parameter</span>  bottom = <span class="hljs-number">70</span>;<br><span class="hljs-comment">/////////////////////////////////////////形状识别</span><br>    <span class="hljs-keyword">reg</span> [<span class="hljs-number">20</span>:<span class="hljs-number">0</span>]cnt,cnt_r;<br><span class="hljs-keyword">reg</span> [<span class="hljs-number">1</span>:<span class="hljs-number">0</span>]  Shape_r;<br>    <span class="hljs-keyword">wire</span> valid;<br>    <span class="hljs-keyword">assign</span> valid = x_cnt &gt;= left &amp;&amp; x_cnt &lt;= right &amp;&amp;y_cnt &gt;= bottom &amp;&amp; y_cnt &lt;= top;<br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> Clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> Rst_n)<span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(!Rst_n)<span class="hljs-keyword">begin</span><br>            cnt&lt;= <span class="hljs-number">&#x27;b0</span>;<br>cnt_r &lt;= <span class="hljs-number">&#x27;b0</span>;<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(valid &amp;&amp; img_data_i)<br>cnt_r &lt;= cnt_r + <span class="hljs-number">1&#x27;b1</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(update)<br>cnt &lt;= cnt_r;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(update_r[<span class="hljs-number">3</span>])<br>cnt_r &lt;= <span class="hljs-number">&#x27;b0</span>;<br><span class="hljs-keyword">end</span><br>    <br>    <span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> Clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> Rst_n)<span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(!Rst_n)<span class="hljs-keyword">begin</span><br>Shape &lt;= <span class="hljs-number">2&#x27;b11</span>;<br>Shape_r &lt;= <span class="hljs-number">2&#x27;b00</span>;<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(update_r[<span class="hljs-number">0</span>])<span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(cnt &gt; <span class="hljs-number">70000</span>)<span class="hljs-comment">//正方形</span><br>Shape &lt;= <span class="hljs-number">2&#x27;b10</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cnt &gt;= <span class="hljs-number">30000</span> &amp;&amp; cnt &lt;= <span class="hljs-number">70000</span>)<span class="hljs-comment">//圆形</span><br>Shape &lt;= <span class="hljs-number">2&#x27;b01</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cnt &lt; <span class="hljs-number">30000</span>)<span class="hljs-comment">//无</span><br>Shape &lt;= <span class="hljs-number">2&#x27;b11</span>;<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(update_r[<span class="hljs-number">3</span>])<span class="hljs-comment">//延时输出</span><br>Shape_r &lt;= Shape;<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">endmodule</span> <br></code></pre></td></tr></table></figure><h2 id="Target-tags"><a href="#Target-tags" class="headerlink" title="Target_tags"></a>Target_tags</h2><p>下面是在中心画框，本来是在识别到的物体四周画框，but失败了（时间有点不够），就改成在固定位置画框了。</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-keyword">module</span> Target_tags<br>#(<br><span class="hljs-keyword">parameter</span>[<span class="hljs-number">9</span>:<span class="hljs-number">0</span>]IMG_HDISP = <span class="hljs-number">10&#x27;d800</span>,<br><span class="hljs-keyword">parameter</span>[<span class="hljs-number">9</span>:<span class="hljs-number">0</span>]IMG_VDISP = <span class="hljs-number">10&#x27;d480</span><br>)<br>(<br><span class="hljs-keyword">input</span>Clk,   <br><span class="hljs-keyword">input</span>Rst_n,<br><br>    <span class="hljs-keyword">input</span>               pre_frame_vsync,<br>    <span class="hljs-keyword">input</span>               pre_frame_href,<br><span class="hljs-keyword">input</span>valid_i, <br><span class="hljs-keyword">input</span>[<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]R_i, <br><span class="hljs-keyword">input</span>[<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]G_i, <br><span class="hljs-keyword">input</span>[<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]B_i, <br> <br>    <span class="hljs-keyword">output</span> <span class="hljs-keyword">reg</span>          post_frame_vsync,<br>    <span class="hljs-keyword">output</span> <span class="hljs-keyword">reg</span>          post_frame_href,<br><span class="hljs-keyword">output</span> <span class="hljs-keyword">reg</span>valid_o, <br><span class="hljs-keyword">output</span> <span class="hljs-keyword">reg</span>[<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]R_o, <br><span class="hljs-keyword">output</span> <span class="hljs-keyword">reg</span>[<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]G_o, <br><span class="hljs-keyword">output</span> <span class="hljs-keyword">reg</span>[<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]B_o  <br>);<br><span class="hljs-comment">/////////////////////////////////</span><br><span class="hljs-keyword">reg</span> [<span class="hljs-number">9</span>:<span class="hljs-number">0</span>] x_cnt;<br><span class="hljs-keyword">reg</span> [<span class="hljs-number">9</span>:<span class="hljs-number">0</span>] y_cnt;<br><span class="hljs-keyword">reg</span>  valid_i_r;<br>    <span class="hljs-keyword">reg</span> Boundary_areas;<br><span class="hljs-comment">/////////////////////////////////</span><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> Clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> Rst_n)<span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(!Rst_n) <span class="hljs-keyword">begin</span><br>x_cnt &lt;= <span class="hljs-number">0</span>;<br>y_cnt &lt;= <span class="hljs-number">0</span>;<br>valid_i_r &lt;= <span class="hljs-number">0</span>;<br><span class="hljs-keyword">end</span> <span class="hljs-keyword">else</span> <span class="hljs-keyword">begin</span><br>x_cnt &lt;= valid_i_r ? ((x_cnt == IMG_HDISP - <span class="hljs-number">1</span>) ? <span class="hljs-number">0</span> : x_cnt + <span class="hljs-number">1</span>) : x_cnt;<br>y_cnt &lt;= valid_i_r&amp;&amp;(x_cnt == IMG_HDISP - <span class="hljs-number">1</span>) ? ((y_cnt == IMG_VDISP - <span class="hljs-number">1</span>) ? <span class="hljs-number">0</span> : y_cnt + <span class="hljs-number">1</span>) : y_cnt;<br>valid_i_r &lt;= valid_i;<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><span class="hljs-comment">/////////////////////////////////数据寄存</span><br><span class="hljs-keyword">reg</span> [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>] R_ir,G_ir,B_ir,R_ir2,G_ir2,B_ir2;<br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> Clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> Rst_n)<span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(!Rst_n) <span class="hljs-keyword">begin</span><br>R_ir &lt;= <span class="hljs-number">0</span>;<br>G_ir &lt;= <span class="hljs-number">0</span>;<br>B_ir &lt;= <span class="hljs-number">0</span>;<br>R_ir2 &lt;= <span class="hljs-number">0</span>;<br>G_ir2 &lt;= <span class="hljs-number">0</span>;<br>B_ir2 &lt;= <span class="hljs-number">0</span>;<br>valid_o &lt;= <span class="hljs-number">0</span>;<br><span class="hljs-keyword">end</span> <br><span class="hljs-keyword">else</span> <span class="hljs-keyword">begin</span><br>R_ir &lt;= R_i;<br>G_ir &lt;= G_i;<br>B_ir &lt;= B_i;<br>R_ir2 &lt;= R_ir;<br>G_ir2 &lt;= G_ir;<br>B_ir2 &lt;= B_ir;<br>valid_o &lt;= valid_i_r;<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><span class="hljs-comment">/////////////////////////////////边界区域标志位</span><br><span class="hljs-keyword">wire</span> [<span class="hljs-number">15</span>:<span class="hljs-number">0</span>] X_pixel,Y_pixel;<span class="hljs-comment">//像素坐标</span><br><br><span class="hljs-keyword">assign</span> Y_pixel = ((<span class="hljs-number">70</span> + <span class="hljs-number">410</span>)&gt;&gt;<span class="hljs-number">1</span>)-<span class="hljs-number">2</span>;<br><span class="hljs-keyword">assign</span> X_pixel = ((<span class="hljs-number">100</span> + <span class="hljs-number">700</span>)&gt;&gt;<span class="hljs-number">1</span>)-<span class="hljs-number">2</span>;<br><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> Clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> Rst_n)<span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(!Rst_n)<br>Boundary_areas &lt;= <span class="hljs-number">1&#x27;b0</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(valid_i)<span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(((y_cnt == <span class="hljs-number">70</span>)||(y_cnt == <span class="hljs-number">410</span>))<span class="hljs-comment">//上下边框</span><br>&amp;&amp;((x_cnt &gt;= <span class="hljs-number">100</span>)&amp;&amp;(x_cnt &lt;= <span class="hljs-number">700</span>))) <br>Boundary_areas &lt;= <span class="hljs-number">1&#x27;b1</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(((y_cnt &gt;= <span class="hljs-number">70</span>)&amp;&amp;(y_cnt &lt;= <span class="hljs-number">410</span>))<br>&amp;&amp;((x_cnt == <span class="hljs-number">100</span>)||(x_cnt == <span class="hljs-number">700</span>))) <span class="hljs-comment">//左右边框</span><br>Boundary_areas &lt;= <span class="hljs-number">1&#x27;b1</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(y_cnt == Y_pixel || x_cnt == X_pixel)<br>Boundary_areas &lt;= <span class="hljs-number">1&#x27;b1</span>;<br><span class="hljs-keyword">else</span><br>Boundary_areas &lt;= <span class="hljs-number">1&#x27;b0</span>;<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><span class="hljs-comment">/////////////////////////////////画框</span><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> Clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> Rst_n)<span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(!Rst_n) <span class="hljs-keyword">begin</span><br>R_o &lt;= <span class="hljs-number">0</span>;<br>G_o &lt;= <span class="hljs-number">0</span>;<br>B_o &lt;= <span class="hljs-number">0</span>;<br><span class="hljs-keyword">end</span> <br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(Boundary_areas)<span class="hljs-keyword">begin</span><br>R_o &lt;= <span class="hljs-number">8&#x27;d255</span>;<br>G_o &lt;= <span class="hljs-number">8&#x27;d000</span>;<br>B_o &lt;= <span class="hljs-number">8&#x27;d000</span>;<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">else</span> <span class="hljs-keyword">begin</span><br>R_o &lt;= R_ir;<br>G_o &lt;= G_ir;<br>B_o &lt;= B_ir;<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><span class="hljs-comment">/////////////////////////////////</span><br><span class="hljs-keyword">reg</span>  vsync_pipe;<br><span class="hljs-keyword">reg</span>  href_pipe;<br><span class="hljs-keyword">always</span> @(<span class="hljs-keyword">posedge</span> Clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> Rst_n) <span class="hljs-keyword">begin</span><br>    <span class="hljs-keyword">if</span> (!Rst_n) <span class="hljs-keyword">begin</span><br>        vsync_pipe &lt;= <span class="hljs-number">0</span>;<br>        href_pipe  &lt;= <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">end</span> <span class="hljs-keyword">else</span> <span class="hljs-keyword">begin</span><br>        vsync_pipe &lt;= pre_frame_vsync;<br>        href_pipe  &lt;= pre_frame_href;<br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-keyword">always</span> @(<span class="hljs-keyword">posedge</span> Clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> Rst_n) <span class="hljs-keyword">begin</span><br>    <span class="hljs-keyword">if</span> (!Rst_n) <span class="hljs-keyword">begin</span><br>        post_frame_vsync &lt;= <span class="hljs-number">1&#x27;b0</span>;<br>        post_frame_href  &lt;= <span class="hljs-number">1&#x27;b0</span>;<br>    <span class="hljs-keyword">end</span> <span class="hljs-keyword">else</span> <span class="hljs-keyword">begin</span><br>        post_frame_vsync &lt;= vsync_pipe;  <span class="hljs-comment">// 输出延迟2拍的信号</span><br>        post_frame_href  &lt;= href_pipe;<br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">endmodule</span><br></code></pre></td></tr></table></figure><h2 id="HSV-binarization"><a href="#HSV-binarization" class="headerlink" title="HSV_binarization"></a>HSV_binarization</h2><p>下面是对HSV图像的二值化</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-keyword">module</span> HSV_binarization(<br>    <span class="hljs-keyword">input</span> clk,            <span class="hljs-comment">// 时钟信号</span><br>    <span class="hljs-keyword">input</span> rst_n,          <span class="hljs-comment">// 异步复位信号，低电平有效</span><br><br>    <span class="hljs-keyword">input</span> [<span class="hljs-number">8</span>:<span class="hljs-number">0</span>] hsv_h,          <span class="hljs-comment">// 输入的HSV色调分量</span><br>    <span class="hljs-keyword">input</span> [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>] hsv_s,          <span class="hljs-comment">// 输入的HSV饱和度分量</span><br>    <span class="hljs-keyword">input</span> [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>] hsv_v,          <span class="hljs-comment">// 输入的HSV亮度分量</span><br>    <span class="hljs-keyword">input</span> hsv_vs,         <span class="hljs-comment">// 输入的HSV垂直同步信号</span><br>    <span class="hljs-keyword">input</span> hsv_hs,         <span class="hljs-comment">// 输入的HSV水平同步信号</span><br>    <span class="hljs-keyword">input</span> hsv_de,         <span class="hljs-comment">// 输入的HSV有效视频信号</span><br><br>    <span class="hljs-keyword">input</span>       [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]   color,           <span class="hljs-comment">//(红，黄，蓝，绿)//</span><br><br>    <span class="hljs-keyword">output</span> <span class="hljs-keyword">reg</span>  binary_pixel,  <span class="hljs-comment">//输出的二值化像素值（0或1）</span><br>    <span class="hljs-keyword">output</span> <span class="hljs-keyword">reg</span> vs_out,         <span class="hljs-comment">// 输出的垂直同步信号  //这三个是输入信号打一拍</span><br>    <span class="hljs-keyword">output</span> <span class="hljs-keyword">reg</span> hs_out,         <span class="hljs-comment">// 输出的水平同步信号</span><br>    <span class="hljs-keyword">output</span> <span class="hljs-keyword">reg</span> de_out          <span class="hljs-comment">// 输出的有效视频信号</span><br>);<br><span class="hljs-comment">///////////////////////////////////////</span><br><span class="hljs-keyword">reg</span> [<span class="hljs-number">8</span>:<span class="hljs-number">0</span>] h_threshold_min,h_threshold_max;<br>    <span class="hljs-keyword">reg</span> [<span class="hljs-number">8</span>:<span class="hljs-number">0</span>] s_threshold_min,s_threshold_max;<br>    <span class="hljs-keyword">reg</span> [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>] v_threshold_min,v_threshold_max;<br><span class="hljs-comment">///////////////////////////////////////阈值转换  //黄色是79-64 绿:116-152 蓝:168-232 红:0-12||348-360</span><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> rst_n)<span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(!rst_n)<span class="hljs-keyword">begin</span><br>&#123;h_threshold_max,h_threshold_min&#125; &lt;=<br>&#123;<span class="hljs-number">9&#x27;d15</span>,<span class="hljs-number">9&#x27;d0</span>&#125;;<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">else</span> <span class="hljs-keyword">begin</span><br><span class="hljs-keyword">case</span>(color)<br><span class="hljs-number">8&#x27;d2</span>:<span class="hljs-keyword">begin</span><span class="hljs-comment">//red//红</span><br>                    &#123;h_threshold_max,h_threshold_min,s_threshold_max,s_threshold_min,v_threshold_max,v_threshold_min&#125; &lt;=<br>&#123;<span class="hljs-number">9&#x27;d348</span>,<span class="hljs-number">9&#x27;d24</span>,<span class="hljs-number">9&#x27;d255</span>,<span class="hljs-number">9&#x27;d100</span>,<span class="hljs-number">8&#x27;d255</span>,<span class="hljs-number">8&#x27;d0</span>&#125;;<br><span class="hljs-keyword">end</span><br><span class="hljs-number">8&#x27;d3</span>:<span class="hljs-keyword">begin</span><span class="hljs-comment">//yellow//黄</span><br>                    &#123;h_threshold_max,h_threshold_min,s_threshold_max,s_threshold_min,v_threshold_max,v_threshold_min&#125; &lt;=<br>&#123;<span class="hljs-number">9&#x27;d95</span>,<span class="hljs-number">9&#x27;d45</span>,<span class="hljs-number">9&#x27;d255</span>,<span class="hljs-number">9&#x27;d0</span>,<span class="hljs-number">8&#x27;d255</span>,<span class="hljs-number">8&#x27;d0</span>&#125;;<br><span class="hljs-keyword">end</span><br><span class="hljs-number">8&#x27;d4</span>:<span class="hljs-keyword">begin</span><span class="hljs-comment">//blue//绿</span><br>                &#123;h_threshold_max,h_threshold_min,s_threshold_max,s_threshold_min,v_threshold_max,v_threshold_min&#125; &lt;=<br>&#123;<span class="hljs-number">9&#x27;d152</span>,<span class="hljs-number">9&#x27;d101</span>,<span class="hljs-number">9&#x27;d255</span>,<span class="hljs-number">9&#x27;d20</span>,<span class="hljs-number">8&#x27;d255</span>,<span class="hljs-number">8&#x27;d0</span>&#125;;<br><span class="hljs-keyword">end</span><br><span class="hljs-number">8&#x27;d5</span>:<span class="hljs-keyword">begin</span><span class="hljs-comment">//black//蓝</span><br>                    &#123;h_threshold_max,h_threshold_min,s_threshold_max,s_threshold_min,v_threshold_max,v_threshold_min&#125; &lt;=<br>&#123;<span class="hljs-number">9&#x27;d232</span>,<span class="hljs-number">9&#x27;d150</span>,<span class="hljs-number">9&#x27;d255</span>,<span class="hljs-number">9&#x27;d20</span>,<span class="hljs-number">8&#x27;d255</span>,<span class="hljs-number">8&#x27;d0</span>&#125;;<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">endcase</span><br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><span class="hljs-comment">///////////////////////////////////////二值化处理</span><br>    <span class="hljs-keyword">always</span> @(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> rst_n) <span class="hljs-keyword">begin</span><br>    <span class="hljs-keyword">if</span> (!rst_n) <span class="hljs-keyword">begin</span><br>        binary_pixel &lt;= <span class="hljs-number">1&#x27;b0</span>;<br>    <span class="hljs-keyword">end</span> <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (hsv_de) <span class="hljs-keyword">begin</span><br>        <span class="hljs-keyword">if</span> (color == <span class="hljs-number">8&#x27;d2</span>) <span class="hljs-keyword">begin</span><br>            <span class="hljs-comment">// 红色跨区间处理</span><br>            <span class="hljs-keyword">if</span> ((hsv_h &gt;= h_threshold_max || hsv_h &lt;= h_threshold_min)&amp;&amp;<br>     hsv_s &gt;= s_threshold_min &amp;&amp; hsv_s &lt;= s_threshold_max &amp;&amp;<br>     hsv_v &gt;= v_threshold_min &amp;&amp; hsv_v &lt;= v_threshold_max) <span class="hljs-keyword">begin</span><br>                binary_pixel &lt;= <span class="hljs-number">1&#x27;b1</span>;<br>            <span class="hljs-keyword">end</span> <span class="hljs-keyword">else</span> <span class="hljs-keyword">begin</span><br>                binary_pixel &lt;= <span class="hljs-number">1&#x27;b0</span>;<br>            <span class="hljs-keyword">end</span><br>        <span class="hljs-keyword">end</span> <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (hsv_h &gt;= h_threshold_min &amp;&amp; hsv_h &lt;= h_threshold_max&amp;&amp;<br>     hsv_s &gt;= s_threshold_min &amp;&amp; hsv_s &lt;= s_threshold_max &amp;&amp;<br>     hsv_v &gt;= v_threshold_min &amp;&amp; hsv_v &lt;= v_threshold_max) <span class="hljs-keyword">begin</span><br>                        binary_pixel &lt;= <span class="hljs-number">1&#x27;b1</span>;<br>                <span class="hljs-keyword">end</span> <span class="hljs-keyword">else</span> <span class="hljs-keyword">begin</span><br>                    binary_pixel &lt;= <span class="hljs-number">1&#x27;b0</span>;<br>                <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span> <span class="hljs-keyword">else</span> <span class="hljs-keyword">begin</span><br>        binary_pixel &lt;= <span class="hljs-number">1&#x27;b0</span>;<br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment">///////////////////////////////////////</span><br><span class="hljs-keyword">always</span> @(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> rst_n)<span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span> (!rst_n) <span class="hljs-keyword">begin</span><br>vs_out &lt;= <span class="hljs-number">&#x27;b1</span>;<span class="hljs-comment">//</span><br>hs_out &lt;= <span class="hljs-number">&#x27;b0</span>;<br>de_out &lt;= <span class="hljs-number">&#x27;b0</span>;<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">else</span> <span class="hljs-keyword">begin</span><br>vs_out &lt;= hsv_vs;<br>hs_out &lt;= hsv_hs;<br>de_out &lt;= hsv_de;<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><span class="hljs-comment">///////////////////////////////////////</span><br><span class="hljs-keyword">endmodule</span><br></code></pre></td></tr></table></figure><h2 id="vip-detect-target-color"><a href="#vip-detect-target-color" class="headerlink" title="vip_detect_target_color"></a>vip_detect_target_color</h2><p>下面是识别颜色，改了下阈值和数据更新时间。</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-keyword">module</span> vip_detect_target_color<br>#(<br>    <span class="hljs-keyword">parameter</span> [<span class="hljs-number">9</span>:<span class="hljs-number">0</span>] IMG_HDISP = <span class="hljs-number">10&#x27;d800</span>, <br>    <span class="hljs-keyword">parameter</span> [<span class="hljs-number">9</span>:<span class="hljs-number">0</span>] IMG_VDISP = <span class="hljs-number">10&#x27;d480</span> <br>)<br>(<br>    <span class="hljs-keyword">input</span>             clk, <br>    <span class="hljs-keyword">input</span>             rst_n, <br>    <span class="hljs-keyword">input</span>             per_frame_vsync,<br>    <span class="hljs-keyword">input</span>             per_frame_href,<br>    <span class="hljs-keyword">input</span>             per_frame_clken,<br>    <span class="hljs-keyword">input</span> [<span class="hljs-number">8</span>:<span class="hljs-number">0</span>] per_img_H,<br>    <span class="hljs-keyword">output</span> <span class="hljs-keyword">reg</span>  [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]target_color,<br><span class="hljs-keyword">output</span> <span class="hljs-keyword">reg</span>  [<span class="hljs-number">2</span>:<span class="hljs-number">0</span>]r_max,<br>    <span class="hljs-keyword">output</span> <span class="hljs-keyword">reg</span> [<span class="hljs-number">9</span>:<span class="hljs-number">0</span>]   x_cnt,<br>    <span class="hljs-keyword">output</span> <span class="hljs-keyword">reg</span> [<span class="hljs-number">9</span>:<span class="hljs-number">0</span>]   y_cnt,<br>    <span class="hljs-keyword">output</span> <span class="hljs-keyword">reg</span>  [<span class="hljs-number">11</span>:<span class="hljs-number">0</span>]red,<br>    <span class="hljs-keyword">output</span> <span class="hljs-keyword">reg</span>  [<span class="hljs-number">11</span>:<span class="hljs-number">0</span>]yellow,<br>    <span class="hljs-keyword">output</span> <span class="hljs-keyword">reg</span>  [<span class="hljs-number">11</span>:<span class="hljs-number">0</span>]green,<br>    <span class="hljs-keyword">output</span> <span class="hljs-keyword">reg</span>  [<span class="hljs-number">11</span>:<span class="hljs-number">0</span>]blue,<br>    <span class="hljs-keyword">output</span> post_frame_vsync,<br>    <span class="hljs-keyword">output</span> post_frame_href,<br>    <span class="hljs-keyword">output</span> post_frame_clken<br>);  <br><br><span class="hljs-keyword">localparam</span> [<span class="hljs-number">9</span>:<span class="hljs-number">0</span>]  CENTER_POS_X = <span class="hljs-number">10&#x27;d400</span>;<span class="hljs-comment">//中心点坐标</span><br><span class="hljs-keyword">localparam</span> [<span class="hljs-number">9</span>:<span class="hljs-number">0</span>]  CENTER_POS_Y = <span class="hljs-number">10&#x27;d240</span>;<br><span class="hljs-comment">//reg [9:0]  x_cnt;</span><br><span class="hljs-comment">//reg [9:0]  y_cnt;</span><br><br><span class="hljs-comment">// 信号打拍</span><br><span class="hljs-keyword">reg</span> [<span class="hljs-number">2</span>:<span class="hljs-number">0</span>] per_frame_vsync_delay;<br><span class="hljs-keyword">reg</span> [<span class="hljs-number">2</span>:<span class="hljs-number">0</span>] per_frame_href_delay;<br><span class="hljs-keyword">reg</span> [<span class="hljs-number">2</span>:<span class="hljs-number">0</span>] per_frame_clken_delay;<br><span class="hljs-comment">//对一帧的横纵坐标计数</span><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> rst_n)<span class="hljs-keyword">begin</span><br>    <span class="hljs-keyword">if</span>(!rst_n)<span class="hljs-keyword">begin</span><br>        x_cnt &lt;= <span class="hljs-number">10&#x27;d0</span>;<br>        y_cnt &lt;= <span class="hljs-number">10&#x27;d0</span>;<br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(per_frame_vsync)<span class="hljs-keyword">begin</span><br>            x_cnt &lt;= <span class="hljs-number">10&#x27;d0</span>;<br>            y_cnt &lt;= <span class="hljs-number">10&#x27;d0</span>;<br>        <span class="hljs-keyword">end</span><br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(per_frame_clken)<span class="hljs-keyword">begin</span><br>                <span class="hljs-keyword">if</span>(x_cnt &lt; IMG_HDISP - <span class="hljs-number">1</span>)<span class="hljs-keyword">begin</span><br>                    x_cnt &lt;= x_cnt + <span class="hljs-number">1&#x27;b1</span>;<br>                    y_cnt &lt;= y_cnt;<br>                <span class="hljs-keyword">end</span><br>                <span class="hljs-keyword">else</span> <span class="hljs-keyword">begin</span><br>                    x_cnt &lt;= <span class="hljs-number">10&#x27;d0</span>;<br>                    y_cnt &lt;= y_cnt + <span class="hljs-number">1&#x27;b1</span>;<br>                <span class="hljs-keyword">end</span><br>        <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment">//reg  [11:0] red;</span><br><span class="hljs-comment">//reg  [11:0] yellow;</span><br><span class="hljs-comment">//reg  [11:0] green;</span><br><span class="hljs-comment">//reg  [11:0] blue;</span><br><span class="hljs-keyword">reg</span>  [<span class="hljs-number">11</span>:<span class="hljs-number">0</span>] other;<br><span class="hljs-keyword">reg</span>  [<span class="hljs-number">11</span>:<span class="hljs-number">0</span>] r_red;<br><span class="hljs-keyword">reg</span>  [<span class="hljs-number">11</span>:<span class="hljs-number">0</span>] r_yellow;<br><span class="hljs-keyword">reg</span>  [<span class="hljs-number">11</span>:<span class="hljs-number">0</span>] r_green;<br><span class="hljs-keyword">reg</span>  [<span class="hljs-number">11</span>:<span class="hljs-number">0</span>] r_blue;<br><span class="hljs-comment">//reg  [2:0]  r_max;</span><br><span class="hljs-keyword">wire</span> [<span class="hljs-number">2</span>:<span class="hljs-number">0</span>]  max;<br><br><span class="hljs-comment">//比较出最大的</span><br>sort4 u_sort4(<br>   <span class="hljs-variable">.clk</span>(clk),<br>   <span class="hljs-variable">.rst_n</span>(rst_n),<br>   <span class="hljs-variable">.data1</span>(r_red), <br>   <span class="hljs-variable">.data2</span>(r_yellow), <br>   <span class="hljs-variable">.data3</span>(r_green   ),<br>   <span class="hljs-variable">.data4</span>(r_blue),<br>   <span class="hljs-variable">.max_data</span>    (), <br>   <span class="hljs-variable">.mid_data</span>    (), <br>   <span class="hljs-variable">.min_data</span>    (),<br>   <span class="hljs-variable">.max</span>(max)<br>);<br><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> rst_n)<span class="hljs-keyword">begin</span><br>    <span class="hljs-keyword">if</span>(!rst_n)<br>        r_max &lt;= <span class="hljs-number">4&#x27;d0</span>;<br>    <span class="hljs-keyword">else</span> <br>        r_max &lt;= max;<br><span class="hljs-keyword">end</span><br><span class="hljs-comment">//x在365--435,y在220--260计数</span><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> rst_n)<span class="hljs-keyword">begin</span><br>    <span class="hljs-keyword">if</span>(!rst_n||per_frame_vsync)<span class="hljs-keyword">begin</span><br>        red    &lt;= <span class="hljs-number">12&#x27;d0</span>;<br>        yellow &lt;= <span class="hljs-number">12&#x27;d0</span>;<br>        green  &lt;= <span class="hljs-number">12&#x27;d0</span>;<br>        blue   &lt;= <span class="hljs-number">12&#x27;d0</span>;<br>        other  &lt;= <span class="hljs-number">12&#x27;d0</span>;<br>    <span class="hljs-keyword">end</span> <span class="hljs-comment">//黄色是79-65 绿:130-148 蓝:210-230 红:0-8</span><br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(per_frame_clken)<span class="hljs-keyword">begin</span><br>            <span class="hljs-keyword">if</span>((x_cnt &gt; CENTER_POS_X - <span class="hljs-number">35</span>) &amp;&amp; (x_cnt &lt;= CENTER_POS_X + <span class="hljs-number">35</span>)<br>                &amp;&amp;(y_cnt &gt; CENTER_POS_Y - <span class="hljs-number">20</span>) &amp;&amp; (y_cnt &lt;= CENTER_POS_Y + <span class="hljs-number">20</span>))<span class="hljs-keyword">begin</span><br>                <span class="hljs-keyword">if</span>((per_img_H &gt;= <span class="hljs-number">0</span> &amp;&amp; per_img_H &lt; <span class="hljs-number">25</span>) || (per_img_H &gt;= <span class="hljs-number">348</span> &amp;&amp; per_img_H &lt; <span class="hljs-number">361</span>))<br>                    red &lt;= red + <span class="hljs-number">1</span>;<br>                <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(per_img_H &gt;= <span class="hljs-number">56</span> &amp;&amp; per_img_H &lt; <span class="hljs-number">82</span>)<br>                    yellow &lt;= yellow + <span class="hljs-number">1</span>;<br>                <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(per_img_H &gt;= <span class="hljs-number">101</span> &amp;&amp; per_img_H &lt; <span class="hljs-number">152</span>)<br>                    green &lt;= green + <span class="hljs-number">1</span>;<br>                <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(per_img_H &gt;= <span class="hljs-number">162</span> &amp;&amp; per_img_H &lt; <span class="hljs-number">232</span>)<br>                    blue &lt;= blue + <span class="hljs-number">1</span>;<br>                <span class="hljs-keyword">else</span> <br>                    other &lt;= other + <span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">end</span><br>        <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">always</span> @(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> rst_n)<span class="hljs-keyword">begin</span><br>    <span class="hljs-keyword">if</span> (!rst_n) <span class="hljs-keyword">begin</span><br>        r_red    &lt;= <span class="hljs-number">12&#x27;d0</span>;<br>        r_yellow &lt;= <span class="hljs-number">12&#x27;d0</span>;<br>        r_green  &lt;= <span class="hljs-number">12&#x27;d0</span>;<br>        r_blue   &lt;= <span class="hljs-number">12&#x27;d0</span>;<br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (y_cnt &gt; <span class="hljs-number">10&#x27;d260</span>)<span class="hljs-keyword">begin</span><br>        r_red    &lt;= red;<br>        r_yellow &lt;= yellow;<br>        r_green  &lt;= green;<br>        r_blue   &lt;= blue;<br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> rst_n)<span class="hljs-keyword">begin</span><br>    <span class="hljs-keyword">if</span>(!rst_n) <span class="hljs-keyword">begin</span><br>        target_color &lt;= <span class="hljs-number">8&#x27;d0</span>;<br><span class="hljs-comment">//led &lt;= 4&#x27;d0;</span><br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(y_cnt == <span class="hljs-number">10&#x27;d479</span>)<span class="hljs-keyword">begin</span><br>        <span class="hljs-keyword">case</span>(r_max)<br>            <span class="hljs-number">3&#x27;d0</span>: <span class="hljs-keyword">begin</span><br>                target_color &lt;= <span class="hljs-number">8&#x27;d8</span>;<br>            <span class="hljs-comment">//    led &lt;= 4&#x27;b1000;</span><br>            <span class="hljs-keyword">end</span><br>            <span class="hljs-number">3&#x27;d1</span>:  <span class="hljs-keyword">begin</span><br>                target_color &lt;= <span class="hljs-number">8&#x27;d2</span>;<span class="hljs-comment">//红</span><br>            <span class="hljs-comment">//    led &lt;= 4&#x27;b0100;</span><br>            <span class="hljs-keyword">end</span><br>            <span class="hljs-number">3&#x27;d2</span>: <span class="hljs-keyword">begin</span><br>                target_color &lt;= <span class="hljs-number">8&#x27;d3</span>;<span class="hljs-comment">//黄</span><br>            <span class="hljs-comment">//    led &lt;= 4&#x27;b0010;</span><br>            <span class="hljs-keyword">end</span><br>            <span class="hljs-number">3&#x27;d3</span>: <span class="hljs-keyword">begin</span><br>                target_color &lt;= <span class="hljs-number">8&#x27;d4</span>;<span class="hljs-comment">//绿</span><br>            <span class="hljs-comment">//    led &lt;= 4&#x27;b0001;</span><br>            <span class="hljs-keyword">end</span><br>            <span class="hljs-number">3&#x27;d4</span>: <span class="hljs-keyword">begin</span><br>                target_color &lt;= <span class="hljs-number">8&#x27;d5</span>;<span class="hljs-comment">//蓝</span><br>            <span class="hljs-comment">//    led &lt;= 4&#x27;b1100;</span><br>            <span class="hljs-keyword">end</span><br><span class="hljs-keyword">default</span>: <span class="hljs-keyword">begin</span><br>                target_color &lt;= <span class="hljs-number">8&#x27;d6</span>;<br>            <span class="hljs-comment">//    led &lt;= 4&#x27;b0011;</span><br>            <span class="hljs-keyword">end</span><br>        <span class="hljs-keyword">endcase</span><br>        <br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-keyword">always</span> @(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> rst_n) <span class="hljs-keyword">begin</span><br>    <span class="hljs-keyword">if</span> (!rst_n) <span class="hljs-keyword">begin</span><br>        per_frame_vsync_delay &lt;= <span class="hljs-number">3&#x27;b0</span>;<br>        per_frame_href_delay  &lt;= <span class="hljs-number">3&#x27;b0</span>;<br>        per_frame_clken_delay &lt;= <span class="hljs-number">3&#x27;b0</span>;<br>    <span class="hljs-keyword">end</span> <span class="hljs-keyword">else</span> <span class="hljs-keyword">begin</span><br>        per_frame_vsync_delay &lt;= &#123;per_frame_vsync_delay[<span class="hljs-number">1</span>:<span class="hljs-number">0</span>], per_frame_vsync&#125;;<br>        per_frame_href_delay  &lt;= &#123;per_frame_href_delay[<span class="hljs-number">1</span>:<span class="hljs-number">0</span>],  per_frame_href&#125;;<br>        per_frame_clken_delay &lt;= &#123;per_frame_clken_delay[<span class="hljs-number">1</span>:<span class="hljs-number">0</span>], per_frame_clken&#125;;<br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-keyword">assign</span> post_frame_vsync = per_frame_vsync_delay[<span class="hljs-number">2</span>];<br><span class="hljs-keyword">assign</span> post_frame_href  = per_frame_href_delay[<span class="hljs-number">2</span>];<br><span class="hljs-keyword">assign</span> post_frame_clken = per_frame_clken_delay[<span class="hljs-number">2</span>];<br><span class="hljs-comment">/*0° - 30°红色（Red）</span><br><span class="hljs-comment">  30° - 60°橙色（Orange）</span><br><span class="hljs-comment">  60° - 90°黄色（Yellow）</span><br><span class="hljs-comment">  90° - 150°绿色（Green）</span><br><span class="hljs-comment">  150° - 180°青色（Cyan）</span><br><span class="hljs-comment">  180° - 210°蓝绿色（青蓝色）（Teal）</span><br><span class="hljs-comment">  210° - 270°蓝色（Blue）</span><br><span class="hljs-comment">  270° - 330°紫色 / 洋红色（Purple / Magenta）</span><br><span class="hljs-comment">  330° - 360°红色（Red）</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">endmodule</span><br><br></code></pre></td></tr></table></figure><h2 id="rgb2hsv"><a href="#rgb2hsv" class="headerlink" title="rgb2hsv"></a>rgb2hsv</h2><p>下面是rgb转hsv</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-keyword">module</span> rgb2hsv(<br>    <span class="hljs-keyword">input</span> clk,<br>    <span class="hljs-keyword">input</span> reset_n,<br>    <span class="hljs-keyword">input</span> [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]rgb_r,<br>    <span class="hljs-keyword">input</span> [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]rgb_g,<br>    <span class="hljs-keyword">input</span> [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]rgb_b,<br>    <span class="hljs-keyword">input</span> vs,<br>    <span class="hljs-keyword">input</span> hs,<br>    <span class="hljs-keyword">input</span> de,<br>    <span class="hljs-keyword">output</span> [<span class="hljs-number">8</span>:<span class="hljs-number">0</span>]hsv_h,<br>    <span class="hljs-keyword">output</span> [<span class="hljs-number">8</span>:<span class="hljs-number">0</span>]hsv_s,<br>    <span class="hljs-keyword">output</span> [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]hsv_v,<br>    <span class="hljs-keyword">output</span> hsv_vs,<br>    <span class="hljs-keyword">output</span> hsv_hs,<br>    <span class="hljs-keyword">output</span> hsv_de<br>);<br><br><span class="hljs-keyword">reg</span> [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]max;<br><span class="hljs-keyword">reg</span>[<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]min;<br><span class="hljs-keyword">reg</span>[<span class="hljs-number">13</span>:<span class="hljs-number">0</span>]rgb_r_r;<br><span class="hljs-keyword">reg</span>[<span class="hljs-number">13</span>:<span class="hljs-number">0</span>]rgb_g_r;<br><span class="hljs-keyword">reg</span>[<span class="hljs-number">13</span>:<span class="hljs-number">0</span>]rgb_b_r;<br><br><span class="hljs-keyword">reg</span> [<span class="hljs-number">13</span>:<span class="hljs-number">0</span>]rgb_r_r2;<br><span class="hljs-keyword">reg</span>[<span class="hljs-number">13</span>:<span class="hljs-number">0</span>]rgb_g_r2;<br><span class="hljs-keyword">reg</span>[<span class="hljs-number">13</span>:<span class="hljs-number">0</span>]rgb_b_r2;<br><span class="hljs-keyword">reg</span>[<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]max_r;<br><br><span class="hljs-keyword">wire</span> [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]max_min;<br><span class="hljs-keyword">assign</span>max_min=max-min;<br><span class="hljs-keyword">reg</span>  [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]max_min_r;<br><span class="hljs-keyword">wire</span> [<span class="hljs-number">13</span>:<span class="hljs-number">0</span>]max60;<br><span class="hljs-keyword">assign</span> max60=max*<span class="hljs-number">60</span>;<br><br><span class="hljs-keyword">wire</span> [<span class="hljs-number">13</span>:<span class="hljs-number">0</span>] g_b;<br><span class="hljs-keyword">wire</span> [<span class="hljs-number">13</span>:<span class="hljs-number">0</span>] b_r;<br><span class="hljs-keyword">wire</span> [<span class="hljs-number">13</span>:<span class="hljs-number">0</span>] r_g;<br><span class="hljs-keyword">assign</span>g_b=(rgb_g_r&gt;=rgb_b_r)?(rgb_g_r-rgb_b_r):(rgb_b_r-rgb_g_r);<br><span class="hljs-keyword">assign</span>  b_r=(rgb_b_r&gt;=rgb_r_r)?(rgb_b_r-rgb_r_r):(rgb_r_r-rgb_b_r);<br><span class="hljs-keyword">assign</span>  r_g=(rgb_r_r&gt;=rgb_g_r)?(rgb_r_r-rgb_g_r):(rgb_g_r-rgb_r_r);<br><br><span class="hljs-keyword">reg</span> [<span class="hljs-number">13</span>:<span class="hljs-number">0</span>]temp;<br><span class="hljs-keyword">reg</span>[<span class="hljs-number">13</span>:<span class="hljs-number">0</span>]hsv_h_r;<br><span class="hljs-keyword">reg</span>[<span class="hljs-number">15</span>:<span class="hljs-number">0</span>]hsv_s_r;<br><span class="hljs-keyword">reg</span>[<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]hsv_v_r;<br><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> reset_n)<span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(!reset_n)<span class="hljs-keyword">begin</span><br>rgb_r_r&lt;=<span class="hljs-number">0</span>;<br>rgb_g_r&lt;=<span class="hljs-number">0</span>;<br>rgb_b_r&lt;=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">else</span> <span class="hljs-keyword">begin</span><br>rgb_r_r&lt;=<span class="hljs-number">60</span>*rgb_r;<br>        rgb_g_r&lt;=<span class="hljs-number">60</span>*rgb_g;<br>        rgb_b_r&lt;=<span class="hljs-number">60</span>*rgb_b;<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> reset_n)<span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(!reset_n)<span class="hljs-keyword">begin</span><br>rgb_r_r2&lt;=<span class="hljs-number">0</span>;<br>        rgb_g_r2&lt;=<span class="hljs-number">0</span>;<br>    rgb_b_r2&lt;=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">else</span> <span class="hljs-keyword">begin</span><br>rgb_r_r2&lt;=rgb_r_r;<br>    rgb_g_r2&lt;=rgb_g_r;<br>    rgb_b_r2&lt;=rgb_b_r;<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> reset_n)<span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(!reset_n)<br>max&lt;=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>((rgb_r&gt;=rgb_b)&amp;&amp;(rgb_r&gt;=rgb_g))<br>max&lt;=rgb_r;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>((rgb_g&gt;=rgb_b)&amp;&amp;(rgb_g&gt;=rgb_r))<br>max&lt;=rgb_g;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>((rgb_b&gt;=rgb_r)&amp;&amp;(rgb_b&gt;=rgb_g))<br>max&lt;=rgb_b;<br><span class="hljs-keyword">end</span><br><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> reset_n)<span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(!reset_n)<br>min&lt;=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>((rgb_r&lt;=rgb_b)&amp;&amp;(rgb_r&lt;=rgb_g))<br>min&lt;=rgb_r;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>((rgb_g&lt;=rgb_b)&amp;&amp;(rgb_g&lt;=rgb_r))<br>min&lt;=rgb_g;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>((rgb_b&lt;=rgb_r)&amp;&amp;(rgb_b&lt;=rgb_g))<br>min&lt;=rgb_b;<br><span class="hljs-keyword">end</span><br><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> reset_n)<span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(!reset_n)<br>max_min_r&lt;=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">else</span><br>max_min_r&lt;=max_min;<br><span class="hljs-keyword">end</span><br><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> reset_n)<span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(!reset_n)<br>temp&lt;=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(max_min!=<span class="hljs-number">0</span>)<span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(rgb_r_r==max60)<br>temp&lt;=g_b/&#123;<span class="hljs-number">6&#x27;b0</span>,max_min&#125;;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(rgb_g_r==max60)<br>temp&lt;=b_r/&#123;<span class="hljs-number">6&#x27;b0</span>,max_min&#125;;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(rgb_b_r==max60)<br>temp&lt;=r_g/&#123;<span class="hljs-number">6&#x27;b0</span>,max_min&#125;;<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(max_min==<span class="hljs-number">0</span>)<br>temp&lt;=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">end</span><br><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> reset_n)<span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(!reset_n)<br>max_r&lt;=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">else</span><br>max_r&lt;=max;<br><span class="hljs-keyword">end</span><br><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> reset_n)<span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(!reset_n)<br>hsv_h_r&lt;=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(max_r==<span class="hljs-number">0</span>)<br>hsv_h_r&lt;=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(rgb_r_r2==<span class="hljs-number">60</span>*max_r)<br>hsv_h_r&lt;=(rgb_g_r2&gt;=rgb_b_r2)?temp:(<span class="hljs-number">14&#x27;d360</span>-temp);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(rgb_g_r2==<span class="hljs-number">60</span>*max_r)<br>hsv_h_r&lt;=(rgb_b_r2&gt;=rgb_r_r2)?(temp+<span class="hljs-number">120</span>):(<span class="hljs-number">14&#x27;d120</span>-temp);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(rgb_b_r2==<span class="hljs-number">60</span>*max_r)<br>hsv_h_r&lt;=(rgb_r_r2&gt;=rgb_g_r2)?(temp+<span class="hljs-number">240</span>):(<span class="hljs-number">14&#x27;d240</span>-temp);<br><span class="hljs-keyword">end</span><br><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> reset_n)<span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(!reset_n)<br>hsv_s_r&lt;=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(max_r==<span class="hljs-number">0</span>)<br>hsv_s_r&lt;=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">else</span><br>hsv_s_r&lt;=&#123;max_min_r,<span class="hljs-number">8&#x27;b0</span>&#125;/&#123;<span class="hljs-number">8&#x27;b0</span>,max_r&#125;;<br><span class="hljs-keyword">end</span><br><br><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> reset_n)<span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(!reset_n)<br>hsv_v_r&lt;=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">else</span><br>hsv_v_r&lt;=max_r;<br><span class="hljs-keyword">end</span><br><br><span class="hljs-keyword">reg</span> [<span class="hljs-number">2</span>:<span class="hljs-number">0</span>]vs_delay;<br><span class="hljs-keyword">reg</span>[<span class="hljs-number">2</span>:<span class="hljs-number">0</span>]hs_delay;<br><span class="hljs-keyword">reg</span>[<span class="hljs-number">2</span>:<span class="hljs-number">0</span>]de_delay;<br><br><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> reset_n)<span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(!reset_n)<span class="hljs-keyword">begin</span><br>vs_delay&lt;=<span class="hljs-number">0</span>;<br>        hs_delay&lt;=<span class="hljs-number">0</span>;<br>        de_delay&lt;=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">else</span> <span class="hljs-keyword">begin</span><br>vs_delay &lt;= &#123; vs_delay[<span class="hljs-number">1</span>:<span class="hljs-number">0</span>],vs&#125;;<br>        hs_delay &lt;= &#123; hs_delay[<span class="hljs-number">1</span>:<span class="hljs-number">0</span>],hs&#125;;<br>        de_delay &lt;= &#123; de_delay[<span class="hljs-number">1</span>:<span class="hljs-number">0</span>],de&#125;;<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-keyword">assign</span> hsv_vs=vs_delay[<span class="hljs-number">2</span>];<br><span class="hljs-keyword">assign</span> hsv_hs=hs_delay[<span class="hljs-number">2</span>];<br><span class="hljs-keyword">assign</span> hsv_de=de_delay[<span class="hljs-number">2</span>];<br><br><span class="hljs-keyword">assign</span> hsv_h=hsv_h_r[<span class="hljs-number">8</span>:<span class="hljs-number">0</span>];<br><span class="hljs-keyword">assign</span> hsv_s=hsv_s_r[<span class="hljs-number">8</span>:<span class="hljs-number">0</span>];<br><span class="hljs-keyword">assign</span> hsv_v=hsv_v_r;<br><br><span class="hljs-keyword">endmodule</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>25-5-13</title>
    <link href="/2025/05/13/25-5-13/"/>
    <url>/2025/05/13/25-5-13/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><h1 id="FPGA联合ModelSim进行图像仿真"><a href="#FPGA联合ModelSim进行图像仿真" class="headerlink" title="FPGA联合ModelSim进行图像仿真"></a>FPGA联合ModelSim进行图像仿真</h1><p>首先是大磊的代码，参考那个写的，在完整的工程里进行仿真一堆报错，就把核心代码移出去了。<br>工程名\prj\sim\behav\run_behav_simulate.tcl里面需要改东西</p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs tcl"><span class="hljs-comment"># ----------------------------------------</span><br><span class="hljs-comment"># Created on: Tue May 13 00:34:12 2025</span><br><span class="hljs-comment"># Auto generated by Pango</span><br><span class="hljs-comment"># ----------------------------------------</span><br><span class="hljs-comment">#下面两行注释掉然后把文件改成只读即可</span><br><span class="hljs-comment">#vsim  -novopt  -L work -L usim -L adc_e2 -L ddc_e2 -L dll_e2 -L hsstlp_lane -L hsstlp_pll -L iolhr_dft -L ipal_e1 -L ipal_e2 -L iserdes_e2 -L oserdes_e2 -L pciegen2 bmp_sim_VIP_tb usim.GTP_GRS</span><br>vsim  -voptargs=+acc  -L work -L usim -L adc_e2 -L ddc_e2 -L dll_e2 -L hsstlp_lane -L hsstlp_pll -L iolhr_dft -L ipal_e1 -L ipal_e2 -L iserdes_e2 -L oserdes_e2 -L pciegen2 bmp_sim_VIP_tb usim.GTP_GRS<br><br>add wave *<br>view wave<br>view structure<br>view signals<br><br>run <span class="hljs-number">1000</span>ns<br><br><span class="hljs-comment"># ----------------------------------------</span><br><br></code></pre></td></tr></table></figure><p>下面贴出来tb文件</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-meta">`<span class="hljs-keyword">timescale</span> 1ns / 1ns</span><br><br><span class="hljs-comment">//使用BMP图片格式仿真VIP视频图像处理算法</span><br><span class="hljs-keyword">module</span> bmp_sim_VIP_tb();<br><span class="hljs-keyword">integer</span> iBmpFileId;                 <span class="hljs-comment">//输入BMP图片</span><br><br><span class="hljs-keyword">integer</span> oBmpFileId_1;                 <span class="hljs-comment">//输出BMP图片 1</span><br><span class="hljs-keyword">integer</span> oTxtFileId;                 <span class="hljs-comment">//输入TXT文本</span><br><span class="hljs-keyword">integer</span> iIndex = <span class="hljs-number">0</span>;                 <span class="hljs-comment">//输出BMP数据索引</span><br><span class="hljs-keyword">integer</span> pixel_index = <span class="hljs-number">0</span>;           <span class="hljs-comment">//输出像素数据索引 </span><br><span class="hljs-keyword">integer</span> iCode;      <br>        <br><span class="hljs-keyword">integer</span> iBmpWidth;                  <span class="hljs-comment">//输入BMP 宽度</span><br><span class="hljs-keyword">integer</span> iBmpHight;                  <span class="hljs-comment">//输入BMP 高度</span><br><span class="hljs-keyword">integer</span> iBmpSize;                   <span class="hljs-comment">//输入BMP 字节数</span><br><span class="hljs-keyword">integer</span> iDataStartIndex;            <span class="hljs-comment">//输入BMP 像素数据偏移量</span><br><br><span class="hljs-keyword">reg</span> [ <span class="hljs-number">7</span>:<span class="hljs-number">0</span>] rBmpData [<span class="hljs-number">0</span>:<span class="hljs-number">2000000</span>];    <span class="hljs-comment">//用于寄存输入BMP图片中的字节数据（包括54字节的文件头）</span><br><br><span class="hljs-keyword">reg</span> [ <span class="hljs-number">7</span>:<span class="hljs-number">0</span>] Vip_BmpData_1 [<span class="hljs-number">0</span>:<span class="hljs-number">2000000</span>]; <span class="hljs-comment">//用于寄存视频图像处理之后 的BMP图片 数据 </span><br><br><span class="hljs-keyword">reg</span> [<span class="hljs-number">31</span>:<span class="hljs-number">0</span>] rBmpWord;                <span class="hljs-comment">//输出BMP图片时用于寄存数据（以word为单位，即4byte）</span><br><br><span class="hljs-keyword">reg</span> [ <span class="hljs-number">7</span>:<span class="hljs-number">0</span>] pixel_data;              <span class="hljs-comment">//输出视频流时的像素数据</span><br><br><span class="hljs-keyword">reg</span> clk;<br><span class="hljs-keyword">reg</span> rst_n;<br><span class="hljs-keyword">reg</span> [ <span class="hljs-number">7</span>:<span class="hljs-number">0</span>] vip_pixel_data_1 [<span class="hljs-number">0</span>:<span class="hljs-number">921600</span>];   <span class="hljs-comment">//640x480x3</span><br><span class="hljs-keyword">integer</span> i;<br><span class="hljs-keyword">integer</span> j;<br><span class="hljs-keyword">wire</span> [<span class="hljs-number">0</span>:<span class="hljs-number">4</span>] char_feature  [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>] [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>] ;<span class="hljs-comment">//特征结果</span><br><span class="hljs-keyword">initial</span> <span class="hljs-keyword">begin</span><br>    iBmpFileId      = <span class="hljs-built_in">$fopen</span>(<span class="hljs-string">&quot;D:\\temp\\10_Yu_GE6V08.bmp&quot;</span>,<span class="hljs-string">&quot;rb&quot;</span>);<br>    <span class="hljs-comment">//iBmpFileId      = $fopen(&quot;F:\\project\\Plate_Recognization\\simulation\\bmp_sim_plate_recognization\\PIC\\21_Su_A65NF7.bmp&quot;,&quot;rb&quot;);</span><br>    <span class="hljs-comment">//将输入BMP图片加载到数组中 21_Su_A65NF7</span><br>iCode = <span class="hljs-built_in">$fread</span>(rBmpData,iBmpFileId);<br>    <span class="hljs-comment">//根据BMP图片文件头的格式，分别计算出图片的 宽度 /高度 /像素数据偏移量 /图片字节数</span><br>iBmpWidth       = &#123;rBmpData[<span class="hljs-number">21</span>],rBmpData[<span class="hljs-number">20</span>],rBmpData[<span class="hljs-number">19</span>],rBmpData[<span class="hljs-number">18</span>]&#125;;<br>iBmpHight       = &#123;rBmpData[<span class="hljs-number">25</span>],rBmpData[<span class="hljs-number">24</span>],rBmpData[<span class="hljs-number">23</span>],rBmpData[<span class="hljs-number">22</span>]&#125;;<br>iBmpSize        = &#123;rBmpData[ <span class="hljs-number">5</span>],rBmpData[ <span class="hljs-number">4</span>],rBmpData[ <span class="hljs-number">3</span>],rBmpData[ <span class="hljs-number">2</span>]&#125;;<br>iDataStartIndex = &#123;rBmpData[<span class="hljs-number">13</span>],rBmpData[<span class="hljs-number">12</span>],rBmpData[<span class="hljs-number">11</span>],rBmpData[<span class="hljs-number">10</span>]&#125;;<br>    <span class="hljs-comment">//关闭输入BMP图片</span><br><span class="hljs-built_in">$fclose</span>(iBmpFileId);<br><br><span class="hljs-comment">//---------------------------------------------</span><br><span class="hljs-comment">//打开输出BMP图片</span><br>    oBmpFileId_1 = <span class="hljs-built_in">$fopen</span>(<span class="hljs-string">&quot;D:\\temp\\output_file_1.bmp&quot;</span>,<span class="hljs-string">&quot;wb+&quot;</span>);<br><span class="hljs-keyword">if</span> (oBmpFileId_1 == <span class="hljs-number">0</span>) <span class="hljs-keyword">begin</span><br>    <span class="hljs-built_in">$display</span>(<span class="hljs-string">&quot;Error: Failed to open output BMP file.&quot;</span>);<br>    <span class="hljs-built_in">$finish</span>;<br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-comment">//oBmpFileId_1 = $fopen(&quot;F:\\project\\Plate_Recognization\\simulation\\bmp_sim_plate_recognization\\PIC\\output_file_1.bmp&quot;,&quot;wb+&quot;);</span><br>    <span class="hljs-comment">//延迟13ms，等待第一帧VIP处理结束</span><br>    #<span class="hljs-number">13000000</span>    <br>    <span class="hljs-comment">//加载图像处理后，BMP图片的文件头和像素数据</span><br><br>    <span class="hljs-comment">//---------------------------------------------</span><br><span class="hljs-comment">//输出第一张</span><br><span class="hljs-keyword">for</span> (iIndex = <span class="hljs-number">0</span>; iIndex &lt; iBmpSize; iIndex = iIndex + <span class="hljs-number">1</span>) <span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(iIndex &lt; <span class="hljs-number">54</span>)<br>            Vip_BmpData_1[iIndex] = rBmpData[iIndex];<br>        <span class="hljs-keyword">else</span><br>            Vip_BmpData_1[iIndex] = vip_pixel_data_1[iIndex-<span class="hljs-number">54</span>];<br><span class="hljs-keyword">end</span><br>    <span class="hljs-comment">//将数组中的数据写到输出BMP图片中    </span><br><span class="hljs-keyword">for</span> (iIndex = <span class="hljs-number">0</span>; iIndex &lt; iBmpSize; iIndex = iIndex + <span class="hljs-number">4</span>) <span class="hljs-keyword">begin</span><br>rBmpWord = &#123;Vip_BmpData_1[iIndex+<span class="hljs-number">3</span>],Vip_BmpData_1[iIndex+<span class="hljs-number">2</span>],Vip_BmpData_1[iIndex+<span class="hljs-number">1</span>],Vip_BmpData_1[iIndex]&#125;;<br><span class="hljs-built_in">$fwrite</span>(oBmpFileId_1,<span class="hljs-string">&quot;%u&quot;</span>,rBmpWord);<br><span class="hljs-keyword">end</span><br><span class="hljs-comment">//---------------------------------------------</span><br>    <span class="hljs-comment">//关闭输出BMP图片</span><br><span class="hljs-built_in">$fclose</span>(oBmpFileId_1);<br><span class="hljs-comment">//---------------------------------------------</span><br><span class="hljs-comment">//打开输出的Txt文本</span><br>oTxtFileId = <span class="hljs-built_in">$fopen</span>(<span class="hljs-string">&quot;D:\\temp\\output_file.txt&quot;</span>,<span class="hljs-string">&quot;w+&quot;</span>);<br>    <span class="hljs-comment">//oTxtFileId = $fopen(&quot;F:\\project\\Plate_Recognization\\simulation\\bmp_sim_plate_recognization\\PIC\\output_file.txt&quot;,&quot;w+&quot;);</span><br><br>    <span class="hljs-comment">//输出特征值</span><br><span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">8</span>;i++)<span class="hljs-keyword">begin</span><br><span class="hljs-keyword">for</span>(j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">8</span>;j++) <span class="hljs-keyword">begin</span><br><span class="hljs-comment">//$fdisplay(oTxtFileId,&quot;%b&quot;,char_feature[i][7-j]);</span><br><span class="hljs-built_in">$fdisplay</span>(oTxtFileId,<span class="hljs-string">&quot;%b&quot;</span>,char_feature[i][j]);<br><span class="hljs-keyword">end</span><br><span class="hljs-built_in">$fdisplay</span>(oTxtFileId,<span class="hljs-string">&quot;\n&quot;</span>);<br><span class="hljs-keyword">end</span><br>    <span class="hljs-comment">//将数组中的数据写到输出Txt文本中</span><br><span class="hljs-comment">//$fwrite(oTxtFileId,&quot;%p&quot;,rBmpData);</span><br><br>    <span class="hljs-comment">//关闭Txt文本</span><br>    <span class="hljs-built_in">$fclose</span>(oTxtFileId);<br><br><span class="hljs-keyword">end</span>  <br><br><span class="hljs-comment">//---------------------------------------------</span><br><span class="hljs-comment">//初始化时钟和复位信号</span><br><span class="hljs-keyword">reg</span> inita_done ;<br><br><span class="hljs-keyword">initial</span> <span class="hljs-keyword">begin</span><br>    clk     = <span class="hljs-number">1</span>;<br>    rst_n   = <span class="hljs-number">0</span>;<br>inita_done = <span class="hljs-number">0</span> ;<br>    #<span class="hljs-number">110</span><br>    rst_n   = <span class="hljs-number">1</span>;<br>#<span class="hljs-number">22_00</span><br>inita_done = <span class="hljs-number">1</span> ;<br><span class="hljs-keyword">end</span> <br><span class="hljs-comment">//产生50MHz时钟</span><br><span class="hljs-keyword">always</span> #<span class="hljs-number">10</span> clk = ~clk;<br><br><span class="hljs-comment">//---------------------------------------------</span><br><span class="hljs-comment">//在时钟驱动下，从数组中读出像素数据，用于在Modelsim中查看BMP中的数据 </span><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> rst_n)<span class="hljs-keyword">begin</span><br>    <span class="hljs-keyword">if</span>(!rst_n) <span class="hljs-keyword">begin</span><br>        pixel_data  &lt;=  <span class="hljs-number">8&#x27;d0</span>;<br>        pixel_index &lt;=  <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">begin</span><br>        pixel_data  &lt;=  rBmpData[pixel_index];<br>        pixel_index &lt;=  pixel_index+<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment">//---------------------------------------------</span><br><span class="hljs-comment">//产生摄像头时序 </span><br><br><span class="hljs-keyword">wire</span>cmos_vsync ;<br><span class="hljs-keyword">reg</span>cmos_href;<br><span class="hljs-keyword">wire</span>        cmos_clken;<br><span class="hljs-keyword">reg</span>[<span class="hljs-number">23</span>:<span class="hljs-number">0</span>]cmos_data;<br> <br><span class="hljs-keyword">reg</span>         cmos_clken_r;<br><br><span class="hljs-keyword">reg</span> [<span class="hljs-number">31</span>:<span class="hljs-number">0</span>]  cmos_index;<br><br><span class="hljs-keyword">parameter</span> [<span class="hljs-number">10</span>:<span class="hljs-number">0</span>] IMG_HDISP = <span class="hljs-number">11&#x27;d640</span>;<br><span class="hljs-keyword">parameter</span> [<span class="hljs-number">10</span>:<span class="hljs-number">0</span>] IMG_VDISP = <span class="hljs-number">11&#x27;d480</span>;<br><br><span class="hljs-keyword">localparam</span> H_SYNC = <span class="hljs-number">11&#x27;d5</span>;<br><span class="hljs-keyword">localparam</span> H_BACK = <span class="hljs-number">11&#x27;d5</span>;<br><span class="hljs-keyword">localparam</span> H_DISP = IMG_HDISP;<br><span class="hljs-keyword">localparam</span> H_FRONT = <span class="hljs-number">11&#x27;d5</span>;<br><span class="hljs-keyword">localparam</span> H_TOTAL = H_SYNC + H_BACK + H_DISP + H_FRONT;<br><br><span class="hljs-keyword">localparam</span> V_SYNC = <span class="hljs-number">11&#x27;d1</span>;<br><span class="hljs-keyword">localparam</span> V_BACK = <span class="hljs-number">11&#x27;d0</span>;<br><span class="hljs-keyword">localparam</span> V_DISP = IMG_VDISP;<br><span class="hljs-keyword">localparam</span> V_FRONT = <span class="hljs-number">11&#x27;d1</span>;<br><span class="hljs-keyword">localparam</span> V_TOTAL = V_SYNC + V_BACK + V_DISP + V_FRONT;<br><br><span class="hljs-comment">//---------------------------------------------</span><br><span class="hljs-comment">//模拟 OV7725/OV5640 驱动模块输出的时钟使能</span><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> rst_n) <span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(!rst_n)<br>cmos_clken_r &lt;= <span class="hljs-number">0</span>;<br><span class="hljs-keyword">else</span><br>        cmos_clken_r &lt;= ~cmos_clken_r;<br><span class="hljs-keyword">end</span><br><span class="hljs-comment">//---------------------------------------------</span><br><span class="hljs-comment">//水平计数器</span><br><span class="hljs-keyword">reg</span>[<span class="hljs-number">10</span>:<span class="hljs-number">0</span>]hcnt;<br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> rst_n) <span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(!rst_n)<br>hcnt &lt;= <span class="hljs-number">11&#x27;d0</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cmos_clken_r) <br>hcnt &lt;= (hcnt &lt; H_TOTAL - <span class="hljs-number">1&#x27;b1</span>) ? hcnt + <span class="hljs-number">1&#x27;b1</span> : <span class="hljs-number">11&#x27;d0</span>;<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment">//---------------------------------------------</span><br><span class="hljs-comment">//竖直计数器</span><br><span class="hljs-keyword">reg</span>[<span class="hljs-number">10</span>:<span class="hljs-number">0</span>]vcnt;<br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> rst_n) <span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(!rst_n)<br>vcnt &lt;= <span class="hljs-number">11&#x27;d0</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cmos_clken_r) <span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(hcnt == H_TOTAL - <span class="hljs-number">1&#x27;b1</span>)<br>vcnt &lt;= (vcnt &lt; V_TOTAL - <span class="hljs-number">1&#x27;b1</span>) ? vcnt + <span class="hljs-number">1&#x27;b1</span> : <span class="hljs-number">11&#x27;d0</span>;<br><span class="hljs-keyword">else</span><br>vcnt &lt;= vcnt;<br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><span class="hljs-comment">//---------------------------------------------</span><br><span class="hljs-comment">//场同步</span><br><span class="hljs-keyword">reg</span>cmos_vsync_r;<br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> rst_n) <span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(!rst_n)<br>cmos_vsync_r &lt;= <span class="hljs-number">1&#x27;b0</span>;<span class="hljs-comment">//H: Vaild, L: inVaild</span><br><span class="hljs-keyword">else</span> <span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(vcnt &lt;= V_SYNC - <span class="hljs-number">1&#x27;b1</span>)<br>cmos_vsync_r &lt;= <span class="hljs-number">1&#x27;b0</span>; <span class="hljs-comment">//H: Vaild, L: inVaild</span><br><span class="hljs-keyword">else</span><br>cmos_vsync_r &lt;= <span class="hljs-number">1&#x27;b1</span>; <span class="hljs-comment">//H: Vaild, L: inVaild</span><br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">assign</span>cmos_vsync= cmos_vsync_r;<br><br><span class="hljs-comment">//---------------------------------------------</span><br><span class="hljs-comment">//行有效</span><br><span class="hljs-keyword">wire</span>frame_valid_ahead =  ( vcnt &gt;= V_SYNC + V_BACK  &amp;&amp; vcnt &lt; V_SYNC + V_BACK + V_DISP<br>                            &amp;&amp; hcnt &gt;= H_SYNC + H_BACK  &amp;&amp; hcnt &lt; H_SYNC + H_BACK + H_DISP ) <br>? <span class="hljs-number">1&#x27;b1</span> : <span class="hljs-number">1&#x27;b0</span>;<br>      <br><span class="hljs-keyword">reg</span>cmos_href_r;      <br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> rst_n) <span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(!rst_n)<br>cmos_href_r &lt;= <span class="hljs-number">0</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(frame_valid_ahead)<br>cmos_href_r &lt;= <span class="hljs-number">1</span>;<br><span class="hljs-keyword">else</span><br>cmos_href_r &lt;= <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> rst_n) <span class="hljs-keyword">begin</span><br><span class="hljs-keyword">if</span>(!rst_n)<br>cmos_href &lt;= <span class="hljs-number">0</span>;<br><span class="hljs-keyword">else</span><br>        cmos_href &lt;= cmos_href_r;<br><span class="hljs-keyword">end</span><br><br><span class="hljs-keyword">assign</span> cmos_clken = cmos_href &amp; cmos_clken_r;<br><span class="hljs-comment">//-------------------------------------</span><br><span class="hljs-comment">//从数组中以视频格式输出像素数据</span><br><span class="hljs-keyword">wire</span> [<span class="hljs-number">10</span>:<span class="hljs-number">0</span>] x_pos;<br><span class="hljs-keyword">wire</span> [<span class="hljs-number">10</span>:<span class="hljs-number">0</span>] y_pos;<br><br><span class="hljs-keyword">assign</span> x_pos = frame_valid_ahead ? (hcnt - (H_SYNC + H_BACK )) : <span class="hljs-number">0</span>;<br><span class="hljs-keyword">assign</span> y_pos = frame_valid_ahead ? (vcnt - (V_SYNC + V_BACK )) : <span class="hljs-number">0</span>;<br><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> rst_n)<span class="hljs-keyword">begin</span><br>   <span class="hljs-keyword">if</span>(!rst_n) <span class="hljs-keyword">begin</span><br>       cmos_index   &lt;=  <span class="hljs-number">0</span>;<br>       cmos_data    &lt;=  <span class="hljs-number">24&#x27;d0</span>;<br>   <span class="hljs-keyword">end</span><br>   <span class="hljs-keyword">else</span> <span class="hljs-keyword">begin</span><br>       <span class="hljs-comment">//cmos_index   &lt;=  y_pos * 1920  + x_pos*3 + 54;         //  3*(y*640 + x) + 54</span><br>       <br>       <span class="hljs-comment">//读取图片时上下翻转</span><br>       cmos_index   &lt;=  (<span class="hljs-number">479</span>- y_pos) * <span class="hljs-number">1920</span>  + x_pos*<span class="hljs-number">3</span> + <span class="hljs-number">54</span>;         <span class="hljs-comment">//  3*((479-y)*640 + x) + 54</span><br><br>       cmos_data    &lt;=  &#123;rBmpData[cmos_index], rBmpData[cmos_index+<span class="hljs-number">1</span>] , rBmpData[cmos_index+<span class="hljs-number">2</span>]&#125;;<br>   <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-keyword">wire</span> per_frame_vsync=cmos_vsync ;<span class="hljs-comment">//后者是摄像头输出</span><br><span class="hljs-keyword">wire</span> per_frame_href=cmos_href;<br><span class="hljs-keyword">wire</span> per_frame_clken=cmos_clken;<br><span class="hljs-keyword">wire</span> [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]per_img_red=cmos_data[ <span class="hljs-number">7</span>: <span class="hljs-number">0</span>];   <br><span class="hljs-keyword">wire</span> [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]per_img_green=cmos_data[<span class="hljs-number">15</span>: <span class="hljs-number">8</span>];               <br><span class="hljs-keyword">wire</span> [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]per_img_blue=cmos_data[<span class="hljs-number">23</span>:<span class="hljs-number">16</span>]; <br>              <br><span class="hljs-keyword">wire</span>  [<span class="hljs-number">8</span>:<span class="hljs-number">0</span>]hsv_h;<br><span class="hljs-keyword">wire</span>  [<span class="hljs-number">8</span>:<span class="hljs-number">0</span>]hsv_s;<br><span class="hljs-keyword">wire</span>  [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]hsv_v;<br><span class="hljs-keyword">wire</span>  post_frame_vsync;<br><span class="hljs-keyword">wire</span>  post_frame_href;<br><span class="hljs-keyword">wire</span>  post_frame_de;<br>rgb2hsv u_rgb2hsv(                                        <br>    <span class="hljs-variable">.clk</span>(clk ),   <br>    <span class="hljs-variable">.reset_n</span>(rst_n ),   <br>    <span class="hljs-variable">.rgb_r</span>(per_img_red                     ),   <br>    <span class="hljs-variable">.rgb_g</span>(per_img_green                   ),   <br>    <span class="hljs-variable">.rgb_b</span>(per_img_blue                    ),   <br>    <span class="hljs-variable">.vs</span>(per_frame_vsync ),   <br>    <span class="hljs-variable">.hs</span>(per_frame_href ),   <br>    <span class="hljs-variable">.de</span>(per_frame_clken ),   <br>    <span class="hljs-variable">.hsv_h</span>(hsv_h ),   <br>    <span class="hljs-variable">.hsv_s</span>(hsv_s         ),   <br>    <span class="hljs-variable">.hsv_v</span>(hsv_v                           ),   <br>    <span class="hljs-variable">.hsv_vs</span>(post_frame_vsync ),   <br>    <span class="hljs-variable">.hsv_hs</span>(post_frame_href ),   <br>    <span class="hljs-variable">.hsv_de</span>(post_frame_de )    <br>);                                                        <br><br><span class="hljs-comment">//-------------------------------------</span><br><span class="hljs-comment">//寄存图像处理之后的像素数据</span><br><span class="hljs-keyword">wire</span> vip_out_frame_vsync;   <br><span class="hljs-keyword">wire</span> vip_out_frame_href ;   <br><span class="hljs-keyword">wire</span> vip_out_frame_clken;    <br><span class="hljs-keyword">wire</span> [<span class="hljs-number">8</span>:<span class="hljs-number">0</span>]vip_out_img_h    ;   <br><span class="hljs-keyword">wire</span> [<span class="hljs-number">8</span>:<span class="hljs-number">0</span>]vip_out_img_s     ;   <br><span class="hljs-keyword">wire</span> [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]vip_out_img_v     ;  <br><br><span class="hljs-keyword">assign</span> vip_out_frame_vsync = post_frame_vsync;   <br><span class="hljs-keyword">assign</span> vip_out_frame_href  = post_frame_href ;   <br><span class="hljs-keyword">assign</span> vip_out_frame_clken = post_frame_de;    <br><span class="hljs-keyword">assign</span> vip_out_img_h       = hsv_h;   <br><span class="hljs-keyword">assign</span> vip_out_img_s       = hsv_s;   <br><span class="hljs-keyword">assign</span> vip_out_img_v       = hsv_v; <br><br><span class="hljs-keyword">reg</span> [<span class="hljs-number">31</span>:<span class="hljs-number">0</span>] vip_cnt;<br> <br><span class="hljs-keyword">reg</span>         vip_vsync_r;    <span class="hljs-comment">//寄存VIP输出的场同步 </span><br><span class="hljs-keyword">reg</span>         vip_out_en;     <span class="hljs-comment">//寄存VIP处理图像的使能信号，仅维持一帧的时间</span><br><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> rst_n)<span class="hljs-keyword">begin</span><br>   <span class="hljs-keyword">if</span>(!rst_n) <br>        vip_vsync_r   &lt;=  <span class="hljs-number">1&#x27;b0</span>;<br>   <span class="hljs-keyword">else</span> <br>        vip_vsync_r   &lt;=  post_frame_vsync;<br><span class="hljs-keyword">end</span><br><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> rst_n)<span class="hljs-keyword">begin</span><br>   <span class="hljs-keyword">if</span>(!rst_n) <br>        vip_out_en    &lt;=  <span class="hljs-number">1&#x27;b1</span>;<br>   <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(vip_vsync_r &amp; (!post_frame_vsync))  <span class="hljs-comment">//第一帧结束之后，使能拉低</span><br>        vip_out_en    &lt;=  <span class="hljs-number">1&#x27;b0</span>;<br><span class="hljs-keyword">end</span><br><br><span class="hljs-keyword">always</span>@(<span class="hljs-keyword">posedge</span> clk <span class="hljs-keyword">or</span> <span class="hljs-keyword">negedge</span> rst_n)<span class="hljs-keyword">begin</span><br>   <span class="hljs-keyword">if</span>(!rst_n) <span class="hljs-keyword">begin</span><br>        vip_cnt &lt;=  <span class="hljs-number">32&#x27;d0</span>;<br>   <span class="hljs-keyword">end</span><br>   <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(vip_out_en) <span class="hljs-keyword">begin</span><br>        <span class="hljs-keyword">if</span>(vip_out_frame_href &amp; vip_out_frame_clken) <span class="hljs-keyword">begin</span><br>            vip_cnt &lt;=  vip_cnt + <span class="hljs-number">3</span>;<br>            vip_pixel_data_1[vip_cnt+<span class="hljs-number">0</span>] &lt;= vip_out_img_h;<br>            vip_pixel_data_1[vip_cnt+<span class="hljs-number">1</span>] &lt;= vip_out_img_s;<br>            vip_pixel_data_1[vip_cnt+<span class="hljs-number">2</span>] &lt;= vip_out_img_v;<br>        <span class="hljs-keyword">end</span><br>   <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">endmodule</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>25-5-9</title>
    <link href="/2025/05/09/25-5-9/"/>
    <url>/2025/05/09/25-5-9/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><p>最近事多，半期+校赛。<br>周六半期考模电，周天早上校赛测评，都搞完了弄集创赛。加一个形状识别。唉~又有的忙了。累。<br>“通过无线图传来操控小车到不同的位置，然后模拟一下物流传送带运输，用摄像头实时识别物体的颜色和形状,这样可以体现实际可用性，就是要加入到实际的场景中”<br>校赛结束后还有大概八天左右。时间很紧希望能搞完。<br>网上也有例程。呵呵几个月没碰FPGA了，之后再稍微学一下基础例程。</p><p>まあ，就酱，有博客可更新的话倒没那么枯燥。</p><p>顺便补充一下5.4号的小车代码到5.2号的博客。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>25-5-2</title>
    <link href="/2025/05/02/25-5-2/"/>
    <url>/2025/05/02/25-5-2/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><h1 id="摄像头"><a href="#摄像头" class="headerlink" title="摄像头"></a>摄像头</h1><p>改了下摄像头的代码，因为有任务一，二，按照C的思路改的，不得不说男生的思路还是清晰，32发送0x01给摄像头，任务一开始且cnt开始计数。cnt &#x3D;&#x3D; 12时任务一结束，二维码和上一个二维码清零，跳出循环。进入主循环。</p><p>等待32发送0x02，进入任务二，不过一开始只识别一次，跳出循环并延时1.5s，进入下一个循环，内容和任务一相似。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 二维码识别示例</span><br><span class="hljs-keyword">import</span> sensor, image, time<br><span class="hljs-keyword">from</span> machine <span class="hljs-keyword">import</span> UART <span class="hljs-comment">#引入串口模块</span><br>sensor.reset()<br>sensor.set_pixformat(sensor.GRAYSCALE)<br>sensor.set_framesize(sensor.VGA)<br>sensor.set_windowing((<span class="hljs-number">480</span>, <span class="hljs-number">480</span>)) <span class="hljs-comment"># 看VGA分辨率中间的240x240像素。</span><br>sensor.skip_frames(<span class="hljs-number">30</span>)<br>sensor.set_auto_gain(<span class="hljs-literal">False</span>)  <span class="hljs-comment"># 必须关闭此功能，以防止图像冲洗…</span><br>cnt = <span class="hljs-number">0</span><br>data = <span class="hljs-number">0</span><br>uart = UART(<span class="hljs-number">3</span>, <span class="hljs-number">115200</span>)<br>clock = time.clock()<br>last_payload = <span class="hljs-literal">None</span>  <span class="hljs-comment"># 用来保存上一次识别到的二维码内容</span><br>THRESHOLD = (<span class="hljs-number">0</span>, <span class="hljs-number">120</span>)  <span class="hljs-comment"># 可以根据具体情况调整阈值，0 是黑色，100 是白色</span><br><span class="hljs-keyword">while</span>(<span class="hljs-literal">True</span>):<br>    clock.tick()<br>    img = sensor.snapshot()<br>    <span class="hljs-keyword">if</span> uart.<span class="hljs-built_in">any</span>():  <span class="hljs-comment"># 如果串口有数据可读</span><br>        data = uart.read()  <span class="hljs-comment"># 读取所有可用数据（类型为 bytes）</span><br>        <span class="hljs-built_in">print</span>(data)<br>    <span class="hljs-keyword">if</span>(data == <span class="hljs-string">b&#x27;\x01&#x27;</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-number">0x03</span>)<br>        <span class="hljs-keyword">while</span>(<span class="hljs-literal">True</span>):<br>            clock.tick()<br>            img = sensor.snapshot()<br>            codes = img.find_qrcodes()<br>            <span class="hljs-keyword">if</span> codes:<br>                payload = codes[<span class="hljs-number">0</span>].payload()<br>                <span class="hljs-keyword">if</span> payload != last_payload:<br>                    last_payload = payload<br>                    cnt+=<span class="hljs-number">1</span><br>                    <span class="hljs-built_in">print</span>(payload)<br>                    <span class="hljs-keyword">if</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/RlYaaoM/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;1&quot;</span>:<br>                        out = <span class="hljs-string">&quot;1&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x01&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/bDNqqqx/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;2&quot;</span>:<br>                        out = <span class="hljs-string">&quot;2&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x02&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/RMkwwwj/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;3&quot;</span>:<br>                        out = <span class="hljs-string">&quot;3&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x03&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/Ay4eeeX/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;4&quot;</span>:<br>                        out = <span class="hljs-string">&quot;4&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x04&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/O8eDDDV/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;5&quot;</span>:<br>                        out = <span class="hljs-string">&quot;5&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x05&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/O9Dmmmy/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;6&quot;</span>:<br>                        out = <span class="hljs-string">&quot;6&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x06&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/OdB888K/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;7&quot;</span>:<br>                        out = <span class="hljs-string">&quot;7&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x07&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AGwdddv/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;8&quot;</span>:<br>                        out = <span class="hljs-string">&quot;8&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x08&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AQp7778/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;9&quot;</span>:<br>                        out = <span class="hljs-string">&quot;9&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x09&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/R4e222J/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;10&quot;</span>:<br>                        out = <span class="hljs-string">&quot;a&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x0a&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AV8YYYN/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;11&quot;</span>:<br>                        out = <span class="hljs-string">&quot;b&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x0b&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AxqWWWQ/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;12&quot;</span>:<br>                        out = <span class="hljs-string">&quot;c&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x0c&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                    <span class="hljs-keyword">if</span>(cnt == <span class="hljs-number">12</span>):<br>                        codes = <span class="hljs-number">0</span><br>                        cnt = <span class="hljs-number">0</span><br>                        data = <span class="hljs-number">0</span><br>                        last_payload =<span class="hljs-number">0</span><br>                        <span class="hljs-keyword">break</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-number">0x04</span>)<br>    <span class="hljs-keyword">if</span>(data == <span class="hljs-string">b&#x27;\x02&#x27;</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-number">0x05</span>)<br>        <span class="hljs-keyword">while</span>(<span class="hljs-literal">True</span>):<br>            clock.tick()<br>            img = sensor.snapshot()<br>            codes = <span class="hljs-number">0</span><br>            codes = img.find_qrcodes()<br>            <span class="hljs-keyword">if</span> codes:<br>                payload = codes[<span class="hljs-number">0</span>].payload()  <span class="hljs-comment"># 假设只识别一个二维码</span><br>                <span class="hljs-keyword">if</span> payload != last_payload:<br>                    last_payload = payload<br>                    <span class="hljs-built_in">print</span>(payload)<br>                    <span class="hljs-keyword">if</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/RlYaaoM/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;1&quot;</span>:<br>                        out = <span class="hljs-string">&quot;1&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x01&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                        codes = <span class="hljs-number">0</span><br>                        last_payload =<span class="hljs-number">0</span><br>                        <span class="hljs-keyword">break</span><br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/bDNqqqx/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;2&quot;</span>:<br>                        out = <span class="hljs-string">&quot;2&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x02&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                        codes = <span class="hljs-number">0</span><br>                        last_payload =<span class="hljs-number">0</span><br>                        <span class="hljs-keyword">break</span><br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/RMkwwwj/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;3&quot;</span>:<br>                        out = <span class="hljs-string">&quot;3&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x03&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                        codes = <span class="hljs-number">0</span><br>                        last_payload =<span class="hljs-number">0</span><br>                        <span class="hljs-keyword">break</span><br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/Ay4eeeX/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;4&quot;</span>:<br>                        out = <span class="hljs-string">&quot;4&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x04&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                        codes = <span class="hljs-number">0</span><br>                        last_payload =<span class="hljs-number">0</span><br>                        <span class="hljs-keyword">break</span><br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/O8eDDDV/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;5&quot;</span>:<br>                        out = <span class="hljs-string">&quot;5&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x05&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                        codes = <span class="hljs-number">0</span><br>                        last_payload =<span class="hljs-number">0</span><br>                        <span class="hljs-keyword">break</span><br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/O9Dmmmy/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;6&quot;</span>:<br>                        out = <span class="hljs-string">&quot;6&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x06&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                        codes = <span class="hljs-number">0</span><br>                        last_payload =<span class="hljs-number">0</span><br>                        <span class="hljs-keyword">break</span><br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/OdB888K/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;7&quot;</span>:<br>                        out = <span class="hljs-string">&quot;7&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x07&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                        codes = <span class="hljs-number">0</span><br>                        last_payload =<span class="hljs-number">0</span><br>                        <span class="hljs-keyword">break</span><br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AGwdddv/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;8&quot;</span>:<br>                        out = <span class="hljs-string">&quot;8&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x08&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                        codes = <span class="hljs-number">0</span><br>                        last_payload =<span class="hljs-number">0</span><br>                        <span class="hljs-keyword">break</span><br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AQp7778/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;9&quot;</span>:<br>                        out = <span class="hljs-string">&quot;9&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x09&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                        codes = <span class="hljs-number">0</span><br>                        last_payload =<span class="hljs-number">0</span><br>                        <span class="hljs-keyword">break</span><br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/R4e222J/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;10&quot;</span>:<br>                        out = <span class="hljs-string">&quot;a&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x0a&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                        codes = <span class="hljs-number">0</span><br>                        last_payload =<span class="hljs-number">0</span><br>                        <span class="hljs-keyword">break</span><br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AV8YYYN/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;11&quot;</span>:<br>                        out = <span class="hljs-string">&quot;b&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x0b&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                        codes = <span class="hljs-number">0</span><br>                        last_payload =<span class="hljs-number">0</span><br>                        <span class="hljs-keyword">break</span><br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AxqWWWQ/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;12&quot;</span>:<br>                        out = <span class="hljs-string">&quot;c&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x0c&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                        codes = <span class="hljs-number">0</span><br>                        last_payload =<span class="hljs-number">0</span><br>                        <span class="hljs-keyword">break</span><br>        time.sleep_ms(<span class="hljs-number">1500</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-number">0x06</span>)<br>        <span class="hljs-keyword">while</span>(<span class="hljs-literal">True</span>):<br>            clock.tick()<br>            img = sensor.snapshot()<br>            codes = img.find_qrcodes()<br>            <span class="hljs-keyword">if</span> codes:<br>                payload = codes[<span class="hljs-number">0</span>].payload()  <span class="hljs-comment"># 假设只识别一个二维码</span><br>                <span class="hljs-keyword">if</span> payload != last_payload:<br>                    last_payload = payload<br>                    <span class="hljs-built_in">print</span>(<span class="hljs-number">0x07</span>)<br>                    <span class="hljs-built_in">print</span>(payload)<br>                    <span class="hljs-keyword">if</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/RlYaaoM/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;1&quot;</span>:<br>                        out = <span class="hljs-string">&quot;1&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x01&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/bDNqqqx/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;2&quot;</span>:<br>                        out = <span class="hljs-string">&quot;2&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x02&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/RMkwwwj/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;3&quot;</span>:<br>                        out = <span class="hljs-string">&quot;3&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x03&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/Ay4eeeX/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;4&quot;</span>:<br>                        out = <span class="hljs-string">&quot;4&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x04&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/O8eDDDV/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;5&quot;</span>:<br>                        out = <span class="hljs-string">&quot;5&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x05&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/O9Dmmmy/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;6&quot;</span>:<br>                        out = <span class="hljs-string">&quot;6&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x06&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/OdB888K/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;7&quot;</span>:<br>                        out = <span class="hljs-string">&quot;7&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x07&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AGwdddv/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;8&quot;</span>:<br>                        out = <span class="hljs-string">&quot;8&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x08&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AQp7778/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;9&quot;</span>:<br>                        out = <span class="hljs-string">&quot;9&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x09&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/R4e222J/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;10&quot;</span>:<br>                        out = <span class="hljs-string">&quot;a&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x0a&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AV8YYYN/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;11&quot;</span>:<br>                        out = <span class="hljs-string">&quot;b&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x0b&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br>                    <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AxqWWWQ/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;12&quot;</span>:<br>                        out = <span class="hljs-string">&quot;c&quot;</span><br>                        uart.write(<span class="hljs-string">b&#x27;\x0c&#x27;</span>)<br>                        time.sleep_ms(<span class="hljs-number">50</span>)<br><br></code></pre></td></tr></table></figure><h1 id="地面站"><a href="#地面站" class="headerlink" title="地面站"></a>地面站</h1><p>前两天没写，今天加上。内容很简单，接收数据拆分数据再发送给串口屏。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br>  &#123;<br>  <span class="hljs-keyword">if</span>(n==<span class="hljs-number">1</span>)&#123;<br>  temp = rx1;<br>  p_cnt= (rx1 &gt;&gt; <span class="hljs-number">4</span>) &amp; <span class="hljs-number">0x0F</span>;<span class="hljs-comment">//高四位</span><br>  rx1   = temp &amp; <span class="hljs-number">0x0F</span>;<span class="hljs-comment">//低四位</span><br>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;page1.n0.val=%d\xff\xff\xff&quot;</span>,rx1);<br>  <span class="hljs-keyword">switch</span>(p_cnt)&#123;<br>  <span class="hljs-keyword">case</span> <span class="hljs-number">0x01</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;page1.t4.txt=\&quot;A1\&quot;\xff\xff\xff&quot;</span>);<span class="hljs-keyword">break</span>;<br>  <span class="hljs-keyword">case</span> <span class="hljs-number">0x02</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;page1.t4.txt=\&quot;A2\&quot;\xff\xff\xff&quot;</span>);<span class="hljs-keyword">break</span>;<br>  <span class="hljs-keyword">case</span> <span class="hljs-number">0x03</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;page1.t4.txt=\&quot;A3\&quot;\xff\xff\xff&quot;</span>);<span class="hljs-keyword">break</span>;<br>  <span class="hljs-keyword">case</span> <span class="hljs-number">0x04</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;page1.t4.txt=\&quot;B3\&quot;\xff\xff\xff&quot;</span>);<span class="hljs-keyword">break</span>;<br>  <span class="hljs-keyword">case</span> <span class="hljs-number">0x05</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;page1.t4.txt=\&quot;B2\&quot;\xff\xff\xff&quot;</span>);<span class="hljs-keyword">break</span>;<br>  <span class="hljs-keyword">case</span> <span class="hljs-number">0x06</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;page1.t4.txt=\&quot;B1\&quot;\xff\xff\xff&quot;</span>);<span class="hljs-keyword">break</span>;<br>  <span class="hljs-keyword">case</span> <span class="hljs-number">0x07</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;page1.t4.txt=\&quot;C1\&quot;\xff\xff\xff&quot;</span>);<span class="hljs-keyword">break</span>;<br>  <span class="hljs-keyword">case</span> <span class="hljs-number">0x08</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;page1.t4.txt=\&quot;C2\&quot;\xff\xff\xff&quot;</span>);<span class="hljs-keyword">break</span>;<br>  <span class="hljs-keyword">case</span> <span class="hljs-number">0x09</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;page1.t4.txt=\&quot;C3\&quot;\xff\xff\xff&quot;</span>);<span class="hljs-keyword">break</span>;<br>  <span class="hljs-keyword">case</span> <span class="hljs-number">0x0a</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;page1.t4.txt=\&quot;D3\&quot;\xff\xff\xff&quot;</span>);<span class="hljs-keyword">break</span>;<br>  <span class="hljs-keyword">case</span> <span class="hljs-number">0x0b</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;page1.t4.txt=\&quot;D2\&quot;\xff\xff\xff&quot;</span>);<span class="hljs-keyword">break</span>;<br>  <span class="hljs-keyword">case</span> <span class="hljs-number">0x0c</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;page1.t4.txt=\&quot;D1\&quot;\xff\xff\xff&quot;</span>);<span class="hljs-keyword">break</span>;<br>  <span class="hljs-keyword">default</span>:  ;<span class="hljs-keyword">break</span>;<br> &#125;<br> n = <span class="hljs-number">0</span>;<br>  &#125;<br>  &#125;<br></code></pre></td></tr></table></figure><h1 id="小车"><a href="#小车" class="headerlink" title="小车"></a>小车</h1><p>这里更新的是上午的代码。之后用按键区分任务一任务二。用数组保存第一轮二维码的位置。13位是为了方便。</p><p>先这样。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//给地面站发送数据</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Ground</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>tx5= (p_cnt&lt;&lt;<span class="hljs-number">4</span>)|rx3;<br>HAL_UART_Transmit(&amp;huart2,&amp;rx3,<span class="hljs-number">2</span>,<span class="hljs-number">100</span>);<br>HAL_UART_Transmit(&amp;huart5,&amp;tx5,<span class="hljs-number">1</span>,<span class="hljs-number">100</span>);<br>&#125;<br><span class="hljs-comment">//下面是while(1)里的</span><br><span class="hljs-keyword">if</span>(tesk==<span class="hljs-number">0</span>)<br>  &#123;<br>          <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br>          &#123;   <br>          <br>              <span class="hljs-keyword">if</span>(x!=<span class="hljs-number">1</span>&amp;&amp;t==<span class="hljs-number">0</span>)<br>                   Load(<span class="hljs-number">13</span>,<span class="hljs-number">10</span>);<br>              <span class="hljs-keyword">if</span>(x==<span class="hljs-number">1</span>)&#123;<br>                  out2 = PID_realize2(&amp;pidHW_Tracking,r) ;<br>                  Load(<span class="hljs-number">20</span>-out2,<span class="hljs-number">20</span>+out2);<br>              &#125;<br>             <span class="hljs-keyword">if</span>(t==<span class="hljs-number">1</span>)&#123;<br>              p_cnt++;<br>              code[p_cnt] = rx3;<br>              Load(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>              HAL_Delay(<span class="hljs-number">500</span>);<br>              t=<span class="hljs-number">0</span>;<br>              Ground();<br>          &#125;<br>              <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData==<span class="hljs-number">0x00</span>&amp;&amp;x==<span class="hljs-number">1</span>)&#123;<br>                 <br>                  <span class="hljs-keyword">if</span>(p_cnt!=<span class="hljs-number">6</span>&amp;&amp;p_cnt!=<span class="hljs-number">12</span>)&#123;<br>                      <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> q=<span class="hljs-number">450</span>;q&gt;<span class="hljs-number">0</span>;q--)&#123;<br>                  HAL_Delay(<span class="hljs-number">1</span>);<br>                          Load(<span class="hljs-number">20</span>,<span class="hljs-number">14</span>);<br>                      <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>)&#123;<span class="hljs-keyword">break</span>;&#125;&#125;<br>                  <br>                  Load(<span class="hljs-number">15</span>,<span class="hljs-number">-15</span>);<br>                   <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>                  &#123;<br>                      HAL_Delay(<span class="hljs-number">1</span>);<br>                      <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>)&#123;<span class="hljs-keyword">break</span>;&#125;<br>                  &#125;<br>                  &#125;<br>                  <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(p_cnt==<span class="hljs-number">6</span>)<br>                  &#123;<br>                      <br>                    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> q=<span class="hljs-number">450</span>;q&gt;<span class="hljs-number">0</span>;q--)<br>                      &#123;<br>                          HAL_Delay(<span class="hljs-number">1</span>);<br>                          Load(<span class="hljs-number">20</span>,<span class="hljs-number">14</span>);<br>                          <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>)&#123;b=<span class="hljs-number">1</span>;<span class="hljs-keyword">break</span>;&#125;<br>                          b=<span class="hljs-number">0</span>;<br>                      &#125;<br>                      <span class="hljs-keyword">if</span>(b==<span class="hljs-number">0</span>)&#123;<br>                      turn(<span class="hljs-number">270</span>);<br>                      Load(<span class="hljs-number">20</span>,<span class="hljs-number">20</span>);<br>                       HAL_Delay(<span class="hljs-number">800</span>);<br>                      turn(<span class="hljs-number">0</span>);<br>                      x=<span class="hljs-number">0</span>;&#125;<br>                  &#125;<br>              &#125;<br>          <span class="hljs-keyword">if</span>(p_cnt == <span class="hljs-number">12</span>)&#123;<br>          Load(<span class="hljs-number">15</span>,<span class="hljs-number">15</span>);<br>          turn(<span class="hljs-number">270</span>);<br>          Load(<span class="hljs-number">15</span>,<span class="hljs-number">15</span>);<br>                  HAL_Delay(<span class="hljs-number">320</span>);<br>          turn(<span class="hljs-number">0</span>);<br>          my_uwTick = uwTick;<br>          line(<span class="hljs-number">5</span>);<br>          stop = <span class="hljs-number">1</span>;<br>          &#125;<br>          <span class="hljs-keyword">if</span>(stop == <span class="hljs-number">1</span>)&#123;<br>          <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)&#123;<br>          Load(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>          &#125;<br>          &#125;<br>  &#125;<br>  &#125;<br></code></pre></td></tr></table></figure><p>这里补充5.4号的代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//两个Ground函数</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Ground1</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-keyword">switch</span>(rx3)<br>&#123;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x01</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;01&quot;</span>);<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x02</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;02&quot;</span>);<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x03</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;03&quot;</span>);<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x04</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;04&quot;</span>);<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x05</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;05&quot;</span>);<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x06</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;06&quot;</span>);<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x07</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;07&quot;</span>);<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x08</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;08&quot;</span>);<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x09</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;09&quot;</span>);<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x0a</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;10&quot;</span>);<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x0b</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;11&quot;</span>);<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x0c</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;12&quot;</span>);<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">default</span>: ;<span class="hljs-keyword">break</span>;<br>&#125;<br>        tx5= (p_cnt&lt;&lt;<span class="hljs-number">4</span>)|rx3;<br>        HAL_UART_Transmit(&amp;huart5,&amp;tx5,<span class="hljs-number">1</span>,<span class="hljs-number">100</span>);<br>&#125;<br><span class="hljs-type">void</span> <span class="hljs-title function_">Ground2</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-keyword">switch</span>(rx3)<br>&#123;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x01</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;01&quot;</span>);<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x02</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;02&quot;</span>);<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x03</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;03&quot;</span>);<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x04</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;04&quot;</span>);<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x05</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;05&quot;</span>);<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x06</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;06&quot;</span>);<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x07</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;07&quot;</span>);<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x08</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;08&quot;</span>);<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x09</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;09&quot;</span>);<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x0a</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;10&quot;</span>);<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x0b</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;11&quot;</span>);<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x0c</span>:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;12&quot;</span>);<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">default</span>: ;<span class="hljs-keyword">break</span>;<br>&#125;<br>        tx5= (aimd&lt;&lt;<span class="hljs-number">4</span>)|rx3;<br>        HAL_UART_Transmit(&amp;huart5,&amp;tx5,<span class="hljs-number">1</span>,<span class="hljs-number">100</span>);<br>&#125;<br><br><span class="hljs-comment">//main里的函数,这里只取while(1)里的</span><br><span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br>  &#123;   <br>tesk=Key_GetNum();<br>  <span class="hljs-keyword">if</span>(tesk==<span class="hljs-number">1</span>)<br>  &#123;<br>HAL_UART_Transmit(&amp;huart3,&amp;tesk,<span class="hljs-number">1</span>,<span class="hljs-number">50</span>);<br>tesk=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br>        &#123;   <br>          <br><span class="hljs-keyword">if</span>(x!=<span class="hljs-number">1</span>&amp;&amp;t==<span class="hljs-number">0</span>)Load(<span class="hljs-number">13</span>,<span class="hljs-number">10</span>);<br>              <br>          <span class="hljs-keyword">if</span>(x==<span class="hljs-number">1</span>)<br>&#123;<br>out2 = PID_realize2(&amp;pidHW_Tracking,r) ;<br>          Load(<span class="hljs-number">20</span>-out2,<span class="hljs-number">20</span>+out2);<br>          &#125;<br>          <span class="hljs-keyword">if</span>(t==<span class="hljs-number">1</span>)<br>&#123;<br>p_cnt++;<br>            code[p_cnt] = rx3;<br>            Load(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>            HAL_Delay(<span class="hljs-number">500</span>);<br>            t=<span class="hljs-number">0</span>;<br>            Ground1();<br>          &#125;<br>          <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData==<span class="hljs-number">0x00</span>&amp;&amp;x==<span class="hljs-number">1</span>)<br>&#123;<br><span class="hljs-keyword">if</span>(p_cnt!=<span class="hljs-number">6</span>&amp;&amp;p_cnt!=<span class="hljs-number">12</span>)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> q=<span class="hljs-number">450</span>;q&gt;<span class="hljs-number">0</span>;q--)<br>&#123;<br>HAL_Delay(<span class="hljs-number">1</span>);<br>Load(<span class="hljs-number">20</span>,<span class="hljs-number">14</span>);<br>                <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>)<span class="hljs-keyword">break</span>;<br>&#125;<br>                  <br>              Load(<span class="hljs-number">15</span>,<span class="hljs-number">-15</span>);<br>              <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>              &#123;<br>HAL_Delay(<span class="hljs-number">1</span>);<br>                <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>)&#123;<span class="hljs-keyword">break</span>;&#125;<br>              &#125;<br>             &#125;<br>             <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(p_cnt==<span class="hljs-number">6</span>)<br>             &#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> q=<span class="hljs-number">450</span>;q&gt;<span class="hljs-number">0</span>;q--)<br>              &#123;<br>HAL_Delay(<span class="hljs-number">1</span>);<br>                Load(<span class="hljs-number">20</span>,<span class="hljs-number">14</span>);<br>                <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>)&#123;b=<span class="hljs-number">1</span>;<span class="hljs-keyword">break</span>;&#125;<br>                b=<span class="hljs-number">0</span>;<br>              &#125;<br>              <span class="hljs-keyword">if</span>(b==<span class="hljs-number">0</span>)<br> &#123;<br>                turn(<span class="hljs-number">270</span>);<br>                Load(<span class="hljs-number">20</span>,<span class="hljs-number">20</span>);<br>                HAL_Delay(<span class="hljs-number">800</span>);<br>                turn(<span class="hljs-number">0</span>);<br>                x=<span class="hljs-number">0</span>;<br> &#125;<br>            &#125;<br>          &#125;<br>        <span class="hljs-keyword">if</span>(p_cnt == <span class="hljs-number">12</span>)<br>&#123;<br>         Load(<span class="hljs-number">15</span>,<span class="hljs-number">15</span>);<br>         turn(<span class="hljs-number">270</span>);<br>         Load(<span class="hljs-number">15</span>,<span class="hljs-number">15</span>);<br>          HAL_Delay(<span class="hljs-number">320</span>);<br>          turn(<span class="hljs-number">0</span>);<br>          my_uwTick = uwTick;<br>          line(<span class="hljs-number">0</span>,<span class="hljs-number">3800</span>);<br>          stop = <span class="hljs-number">1</span>;<br>         &#125;<br>        <span class="hljs-keyword">if</span>(stop == <span class="hljs-number">1</span>)<br>&#123;<br>          Load(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>rx3=<span class="hljs-number">0</span>;<br>p_cnt = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">break</span>;<br>        &#125;<br>  &#125;<br>  &#125;<br>  <br>  <span class="hljs-keyword">if</span>(tesk==<span class="hljs-number">2</span>)<br>  &#123;<br>HAL_UART_Transmit(&amp;huart3,&amp;tesk,<span class="hljs-number">1</span>,<span class="hljs-number">50</span>);<br>      <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br>&#123;   <br>        HAL_Delay(<span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">if</span>(rx3!=<span class="hljs-number">0</span>)<br>    &#123;<br>    aim=rx3;<br>  <span class="hljs-keyword">for</span>(id=<span class="hljs-number">1</span>;id&lt;=<span class="hljs-number">13</span>;id++)<br>  &#123;<br>  <span class="hljs-keyword">if</span>(rx3==code[id])<br>  &#123;<br>  aimd=id;<br>  <span class="hljs-keyword">break</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span>(id==<span class="hljs-number">13</span>)&#123;id=<span class="hljs-number">0</span>;&#125;<br>  &#125;<br>    rx3=<span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">if</span>(aimd&lt;=<span class="hljs-number">3</span>)<br>  &#123;<br>         <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>         &#123;<br>         <span class="hljs-keyword">if</span>(x!=<span class="hljs-number">1</span>)Load(<span class="hljs-number">13</span>,<span class="hljs-number">10</span>);<br>     <span class="hljs-keyword">if</span>(x==<span class="hljs-number">1</span>)<br>     &#123;<br>      out2 = PID_realize2(&amp;pidHW_Tracking,r) ;<br>      Load(<span class="hljs-number">20</span>-out2,<span class="hljs-number">20</span>+out2);<br>     &#125;<br>     <span class="hljs-keyword">if</span>(rx3==aim&amp;&amp;flag2==<span class="hljs-number">0</span>)<br>     &#123;<br>         Load(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>         HAL_Delay(<span class="hljs-number">500</span>);<br> Ground2();<br>     flag2 = <span class="hljs-number">1</span>;<br>     &#125;<br>     <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData==<span class="hljs-number">0x00</span>&amp;&amp;x==<span class="hljs-number">1</span>)<br>         &#123;<br>     <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> q=<span class="hljs-number">450</span>;q&gt;<span class="hljs-number">0</span>;q--)<br>     &#123;<br>         HAL_Delay(<span class="hljs-number">1</span>);<br>         Load(<span class="hljs-number">20</span>,<span class="hljs-number">14</span>);<br>         flag=<span class="hljs-number">1</span>;<br>         <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>)&#123;flag=<span class="hljs-number">0</span>;<span class="hljs-keyword">break</span>;&#125;<br>     &#125;<br>      <span class="hljs-keyword">if</span>(flag2==<span class="hljs-number">1</span>)<br>      &#123;<br>       my_uwTick = uwTick;<br>       line(<span class="hljs-number">0</span>,<span class="hljs-number">600</span>);<br>       turn(<span class="hljs-number">270</span>);<br>       my_uwTick = uwTick;<br>       line(<span class="hljs-number">270</span>,<span class="hljs-number">6200</span>);<br>       Load(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>       rx3=<span class="hljs-number">0</span>;<br>       <span class="hljs-keyword">break</span>;<br>       &#125;<br>                             &#125;<br><br>              &#125;<br>                &#125;<br>  <span class="hljs-keyword">if</span>(aimd&gt;<span class="hljs-number">3</span>&amp;&amp;aimd&lt;=<span class="hljs-number">6</span>)<br>  &#123;<br>       <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>    &#123;<br>  <span class="hljs-keyword">if</span>(x!=<span class="hljs-number">1</span>)Load(<span class="hljs-number">13</span>,<span class="hljs-number">10</span>);<br>            <span class="hljs-keyword">if</span>(x==<span class="hljs-number">1</span>)<br>      &#123;<br>              out2 = PID_realize2(&amp;pidHW_Tracking,r) ;<br>            Load(<span class="hljs-number">20</span>-out2,<span class="hljs-number">20</span>+out2);<br>            &#125;<br> <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData==<span class="hljs-number">0x00</span>&amp;&amp;x==<span class="hljs-number">1</span>)<br>&#123;<br>             <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> q=<span class="hljs-number">450</span>;q&gt;<span class="hljs-number">0</span>;q--)<br>&#123;<br>               HAL_Delay(<span class="hljs-number">1</span>);<br>               Load(<span class="hljs-number">20</span>,<span class="hljs-number">14</span>);<br>               <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>)&#123;flag=<span class="hljs-number">0</span>;<span class="hljs-keyword">break</span>;&#125;<br> flag=<span class="hljs-number">1</span>;<br>  &#125;<br>             <span class="hljs-keyword">if</span>(flag==<span class="hljs-number">1</span>&amp;&amp;flag2!=<span class="hljs-number">1</span>) &#123; <br>             Load(<span class="hljs-number">15</span>,<span class="hljs-number">-15</span>);<br>             <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>            &#123;<br>               HAL_Delay(<span class="hljs-number">1</span>);<br>               <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>)&#123;<span class="hljs-keyword">break</span>;&#125;<br>            &#125;<br>          &#125;<br> <span class="hljs-keyword">if</span>(flag2==<span class="hljs-number">1</span>&amp;&amp;flag==<span class="hljs-number">1</span>)<br>&#123;<br>turn(<span class="hljs-number">270</span>);<br>my_uwTick = uwTick;<br>line(<span class="hljs-number">270</span>,<span class="hljs-number">3800</span>);<br>turn(<span class="hljs-number">0</span>);<br>my_uwTick = uwTick;<br>line(<span class="hljs-number">0</span>,<span class="hljs-number">5200</span>);<br>Load(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>rx3=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">break</span>;<br><br>&#125;<br>&#125;<br>          <span class="hljs-keyword">if</span>(rx3==aim&amp;&amp;flag2==<span class="hljs-number">0</span>)<br> &#123;<br>            Load(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>            HAL_Delay(<span class="hljs-number">500</span>);<br> Ground2();<br> flag2=<span class="hljs-number">1</span>;<br> rx3=<span class="hljs-number">0</span>;<br>          &#125;<br>  <br>          &#125;<br>&#125;<br>                 <br>  <span class="hljs-keyword">if</span>(aimd&gt;<span class="hljs-number">6</span>&amp;&amp;aimd&lt;=<span class="hljs-number">9</span>)<br>  &#123;<br>turn(<span class="hljs-number">270</span>);<br>my_uwTick = uwTick;<br>line(<span class="hljs-number">275</span>,<span class="hljs-number">3300</span>);<br>turn(<span class="hljs-number">0</span>);<br>       <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>    &#123;<br>  <span class="hljs-keyword">if</span>(x!=<span class="hljs-number">1</span>)Load(<span class="hljs-number">13</span>,<span class="hljs-number">10</span>);<br>            <span class="hljs-keyword">if</span>(x==<span class="hljs-number">1</span>)<br>      &#123;<br>              out2 = PID_realize2(&amp;pidHW_Tracking,r) ;<br>            Load(<span class="hljs-number">20</span>-out2,<span class="hljs-number">20</span>+out2);<br>            &#125;<br> <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData==<span class="hljs-number">0x00</span>&amp;&amp;x==<span class="hljs-number">1</span>)<br>&#123;<br>             <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> q=<span class="hljs-number">450</span>;q&gt;<span class="hljs-number">0</span>;q--)<br>&#123;<br>               HAL_Delay(<span class="hljs-number">1</span>);<br>               Load(<span class="hljs-number">20</span>,<span class="hljs-number">14</span>);<br>               <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>)&#123;flag=<span class="hljs-number">0</span>;<span class="hljs-keyword">break</span>;&#125;<br> flag=<span class="hljs-number">1</span>;<br>  &#125;<br>                <span class="hljs-keyword">if</span>(flag==<span class="hljs-number">1</span>&amp;&amp;flag2!=<span class="hljs-number">1</span>)&#123;  <br>             Load(<span class="hljs-number">15</span>,<span class="hljs-number">-15</span>);<br>             <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>            &#123;<br>               HAL_Delay(<span class="hljs-number">1</span>);<br>               <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>)&#123;<span class="hljs-keyword">break</span>;&#125;<br>            &#125;<br>&#125;<br><span class="hljs-keyword">if</span>(flag2==<span class="hljs-number">1</span>&amp;&amp;flag==<span class="hljs-number">1</span>)<br>&#123;<br>my_uwTick = uwTick;<br>             line(<span class="hljs-number">0</span>,<span class="hljs-number">650</span>);<br>turn(<span class="hljs-number">270</span>);<br>my_uwTick = uwTick;<br>line(<span class="hljs-number">270</span>,<span class="hljs-number">2700</span>);<br><br>Load(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>rx3=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">break</span>;<br><br>&#125;<br>          &#125;<br>          <span class="hljs-keyword">if</span>(rx3==aim&amp;&amp;flag2==<span class="hljs-number">0</span>)<br> &#123;<br>            Load(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>            HAL_Delay(<span class="hljs-number">500</span>);<br> Ground2();<br> flag2=<span class="hljs-number">1</span>;<br> rx3=<span class="hljs-number">0</span>;<br>          &#125;<br>          &#125;<br>&#125;<br>  <br><span class="hljs-keyword">if</span>(aimd&gt;<span class="hljs-number">9</span>&amp;&amp;aimd&lt;=<span class="hljs-number">13</span>)<br>  &#123;<br>       <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>    &#123;<br>  <span class="hljs-keyword">if</span>(x!=<span class="hljs-number">1</span>)Load(<span class="hljs-number">13</span>,<span class="hljs-number">10</span>);<br>            <span class="hljs-keyword">if</span>(x==<span class="hljs-number">1</span>)<br>      &#123;<br>              out2 = PID_realize2(&amp;pidHW_Tracking,r) ;<br>            Load(<span class="hljs-number">20</span>-out2,<span class="hljs-number">20</span>+out2);<br>            &#125;<br> <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData==<span class="hljs-number">0x00</span>&amp;&amp;x==<span class="hljs-number">1</span>)<br>&#123;<br>             <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> q=<span class="hljs-number">450</span>;q&gt;<span class="hljs-number">0</span>;q--)<br>&#123;<br>               HAL_Delay(<span class="hljs-number">1</span>);<br>               Load(<span class="hljs-number">20</span>,<span class="hljs-number">14</span>);<br>flag=<span class="hljs-number">1</span>;<br>               <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>)&#123;flag=<span class="hljs-number">0</span>;<span class="hljs-keyword">break</span>;&#125;<br>  &#125;<br><span class="hljs-keyword">if</span>(flag==<span class="hljs-number">1</span>&amp;&amp;flag2!=<span class="hljs-number">1</span>)&#123;<br>             my_uwTick = uwTick;<br>             line(<span class="hljs-number">0</span>,<span class="hljs-number">500</span>);<br> turn(<span class="hljs-number">270</span>);<br>my_uwTick = uwTick;<br>line(<span class="hljs-number">267</span>,<span class="hljs-number">5900</span>);<br>turn(<span class="hljs-number">180</span>);<br>            x=<span class="hljs-number">0</span>;&#125;<br><span class="hljs-keyword">if</span>(flag2==<span class="hljs-number">1</span>&amp;&amp;flag==<span class="hljs-number">1</span>)<br>&#123;<br>turn(<span class="hljs-number">270</span>);<br>my_uwTick = uwTick;<br>line(<span class="hljs-number">270</span>,<span class="hljs-number">200</span>);<br>turn(<span class="hljs-number">0</span>);<br>my_uwTick = uwTick;<br>line(<span class="hljs-number">0</span>,<span class="hljs-number">5000</span>);<br>Load(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>rx3=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">break</span>;<br><br>&#125;<br>          &#125;<br>          <span class="hljs-keyword">if</span>(rx3==aim&amp;&amp;flag2==<span class="hljs-number">0</span>)<br> &#123;<br>            Load(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>            HAL_Delay(<span class="hljs-number">500</span>);<br> Ground2();<br> flag2=<span class="hljs-number">1</span>;<br>rx3=<span class="hljs-number">0</span>;<br>          &#125;<br>          &#125;<br>&#125;<br><br>  &#125;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>25-4-30</title>
    <link href="/2025/04/30/25-4-30/"/>
    <url>/2025/04/30/25-4-30/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>MX里面配置不好会锁芯片，导致识别不到st-link，下一次程序就会锁。</p><p>首先，和上次一样，可以用flymcu软件通过串口下载解锁，but注意boot引脚，对于stm32c8t6</p><ul><li>运行模式：BOOT 0为0，BOOT 1为0</li><li>烧写模式：BOOT 0为1，BOOT 1为0</li></ul><p>所以要改一个boot引脚。</p><p>其次，这次遇到的问题是System Core -&gt; SYS里Debug要把Serial Wire勾上。不勾就有问题，网上也有这么解释的，不过目前还不清楚外什么F407可以不勾。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>25-4-28</title>
    <link href="/2025/04/28/25-4-28/"/>
    <url>/2025/04/28/25-4-28/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><h1 id="今日份"><a href="#今日份" class="headerlink" title="今日份"></a>今日份</h1><p>主函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br>  &#123;   <br>      <span class="hljs-keyword">if</span>(x!=<span class="hljs-number">1</span>&amp;&amp;t==<span class="hljs-number">0</span>)<br>           Load(<span class="hljs-number">13</span>,<span class="hljs-number">10</span>);<br>      <span class="hljs-keyword">if</span>(x==<span class="hljs-number">1</span>)&#123;<br>          out2 = PID_realize2(&amp;pidHW_Tracking,r) ;<br>          Load(<span class="hljs-number">20</span>-out2,<span class="hljs-number">20</span>+out2);<br>      &#125;<br>      <span class="hljs-keyword">if</span>(t==<span class="hljs-number">1</span>)&#123;<br>          p_cnt++;<br>      Load(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>      HAL_Delay(<span class="hljs-number">500</span>);<br>          t=<span class="hljs-number">0</span>;<br>      &#125;<br>      <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData==<span class="hljs-number">0x00</span>&amp;&amp;x==<span class="hljs-number">1</span>)&#123;<br>         <br>          <span class="hljs-keyword">if</span>(p_cnt!=<span class="hljs-number">6</span>&amp;&amp;p_cnt!=<span class="hljs-number">12</span>)&#123;<br>              <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> q=<span class="hljs-number">450</span>;q&gt;<span class="hljs-number">0</span>;q--)&#123;<br>                  HAL_Delay(<span class="hljs-number">1</span>);<br>                  Load(<span class="hljs-number">20</span>,<span class="hljs-number">14</span>);<br>              <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>)&#123;<span class="hljs-keyword">break</span>;&#125;&#125;<br>          Load(<span class="hljs-number">15</span>,<span class="hljs-number">-15</span>);<br>           <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>          &#123;<br>              HAL_Delay(<span class="hljs-number">1</span>);<br>              <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>)&#123;<span class="hljs-keyword">break</span>;&#125;<br>          &#125;<br>          &#125;<br>          <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(p_cnt==<span class="hljs-number">6</span>)<br>          &#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> q=<span class="hljs-number">450</span>;q&gt;<span class="hljs-number">0</span>;q--)<br>              &#123;<br>                  HAL_Delay(<span class="hljs-number">1</span>);<br>                  Load(<span class="hljs-number">20</span>,<span class="hljs-number">14</span>);<br>                  <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>)&#123;b=<span class="hljs-number">1</span>;<span class="hljs-keyword">break</span>;&#125;<br>                  b=<span class="hljs-number">0</span>;<br>              &#125;<br>              <span class="hljs-keyword">if</span>(b==<span class="hljs-number">0</span>)&#123;<br>              turn(<span class="hljs-number">270</span>);<br>              Load(<span class="hljs-number">20</span>,<span class="hljs-number">20</span>);<br>               HAL_Delay(<span class="hljs-number">1000</span>);<br>              turn(<span class="hljs-number">0</span>);<br>              x=<span class="hljs-number">0</span>;&#125;<br>          &#125;<br>      &#125;<br>  <span class="hljs-keyword">if</span>(rx3 == <span class="hljs-number">0x11</span>||p_cnt == <span class="hljs-number">12</span>)&#123;<br>  Load(<span class="hljs-number">15</span>,<span class="hljs-number">15</span>);<br>  turn(<span class="hljs-number">270</span>);<br>  Load(<span class="hljs-number">15</span>,<span class="hljs-number">15</span>);<br>          HAL_Delay(<span class="hljs-number">320</span>);<br>  turn(<span class="hljs-number">0</span>);<br>  <br>  Load(<span class="hljs-number">20</span>,<span class="hljs-number">20</span>);<br>  HAL_Delay(<span class="hljs-number">4000</span>);<br>  stop = <span class="hljs-number">1</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span>(stop == <span class="hljs-number">1</span>)&#123;<br>  <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)&#123;<br>  Load(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>  &#125;<br>  &#125;<br>    <span class="hljs-comment">/* USER CODE END WHILE */</span><br><br>    <span class="hljs-comment">/* USER CODE BEGIN 3 */</span><br>  &#125;<br></code></pre></td></tr></table></figure><p>或者后面写</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">if</span>(rx3 == <span class="hljs-number">0x62</span>||p_cnt == <span class="hljs-number">12</span>)&#123;<br>  Load(<span class="hljs-number">15</span>,<span class="hljs-number">15</span>);<br>  turn(<span class="hljs-number">270</span>);<br>  Load(<span class="hljs-number">15</span>,<span class="hljs-number">15</span>);<br>          HAL_Delay(<span class="hljs-number">300</span>);<br>  turn(<span class="hljs-number">0</span>);<br>  my_uwTick = uwTick;<span class="hljs-comment">//打点在line函数里判断</span><br>  line(<span class="hljs-number">0</span>);<br>  stop = <span class="hljs-number">1</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span>(stop == <span class="hljs-number">1</span>)&#123;<br>  <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)&#123;<br>  Load(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>  &#125;<br>  &#125;<br></code></pre></td></tr></table></figure><p>走直线和转向</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">void</span> <span class="hljs-title function_">line</span><span class="hljs-params">(<span class="hljs-type">float</span> du)</span><br>&#123;<br>  pidMPU6050YawMovement.target_val=du;<br>  <span class="hljs-keyword">if</span>(pidMPU6050YawMovement.target_val&gt;<span class="hljs-number">360</span>)pidMPU6050YawMovement.target_val-=<span class="hljs-number">360</span>;<br>  <span class="hljs-keyword">if</span>(pidMPU6050YawMovement.target_val&lt;<span class="hljs-number">0</span>)pidMPU6050YawMovement.target_val+=<span class="hljs-number">360</span>;<br> <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>) <br> &#123;<br>  HAL_UART_Receive_IT(&amp;huart4,&amp;rx4,<span class="hljs-number">1</span>);<br>  <span class="hljs-keyword">if</span>(pidMPU6050YawMovement.target_val&lt;<span class="hljs-number">10</span>)<br>  &#123;<br><span class="hljs-keyword">if</span>(jiaoz&gt;<span class="hljs-number">350</span>)  jiaoz-=<span class="hljs-number">360</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span>(pidMPU6050YawMovement.target_val&gt;<span class="hljs-number">350</span>)<br>  &#123;<br><span class="hljs-keyword">if</span>(jiaoz&lt;<span class="hljs-number">10</span>)  jiaoz+=<span class="hljs-number">360</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span>(pidMPU6050YawMovement.target_val==<span class="hljs-number">0</span>&amp;&amp;jiaoz&gt;<span class="hljs-number">300</span>)jiaoz-=<span class="hljs-number">360</span>;<br>  out1 = PID_realize2(&amp;pidMPU6050YawMovement,jiaoz);<br>  Load(<span class="hljs-number">20</span>-out1,<span class="hljs-number">20</span>+out1);<br> &#125;<br>&#125;<br><span class="hljs-type">void</span> <span class="hljs-title function_">turn</span><span class="hljs-params">(<span class="hljs-type">float</span> du)</span><br>&#123;<br>  pidMPU6050YawMovement.target_val=du;<span class="hljs-comment">//jiaoz + </span><br>  <span class="hljs-keyword">if</span>(pidMPU6050YawMovement.target_val&gt;<span class="hljs-number">360</span>)pidMPU6050YawMovement.target_val-=<span class="hljs-number">360</span>;<br>  <span class="hljs-keyword">if</span>(pidMPU6050YawMovement.target_val&lt;<span class="hljs-number">0</span>)pidMPU6050YawMovement.target_val+=<span class="hljs-number">360</span>;<br> <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>) <br> &#123;<br>    <span class="hljs-keyword">if</span>(pidMPU6050YawMovement.target_val&lt;<span class="hljs-number">10</span>)<br>     &#123;<br>   <span class="hljs-keyword">if</span>(jiaoz&gt;<span class="hljs-number">350</span>)  jiaoz-=<span class="hljs-number">360</span>;<br>     &#125;<br>    <span class="hljs-keyword">if</span>(pidMPU6050YawMovement.target_val&gt;<span class="hljs-number">350</span>)<br>    &#123;<br>    <span class="hljs-keyword">if</span>(jiaoz&lt;<span class="hljs-number">10</span>)  jiaoz+=<span class="hljs-number">360</span>;<br>    &#125;<br>  HAL_UART_Receive_IT(&amp;huart4,&amp;rx4,<span class="hljs-number">1</span>);<br>  <span class="hljs-keyword">if</span>(pidMPU6050YawMovement.target_val==<span class="hljs-number">0</span>&amp;&amp;jiaoz&gt;<span class="hljs-number">300</span>)jiaoz-=<span class="hljs-number">360</span>;<br>  out1 = PID_realize2(&amp;pidMPU6050YawMovement,jiaoz);<br>  Load(-out1,out1);<br>      <span class="hljs-keyword">if</span>(jiaoz&gt;pidMPU6050YawMovement.target_val<span class="hljs-number">-5</span>&amp;&amp;jiaoz&lt;pidMPU6050YawMovement.target_val+<span class="hljs-number">5</span>)  &#123;pidMPU6050YawMovement.err_sum=<span class="hljs-number">0.0</span>;<span class="hljs-keyword">break</span>;&#125;<br> &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>25-4-27</title>
    <link href="/2025/04/27/25-4-27/"/>
    <url>/2025/04/27/25-4-27/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><h1 id="今日份"><a href="#今日份" class="headerlink" title="今日份"></a>今日份</h1><p>小车后面转弯要用到陀螺仪。<br>陀螺仪JY61P，去年电赛M0用到过的代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">void</span> <span class="hljs-title function_">UART_JY61P_INST_IRQHandler</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>    getdata[cnt]=DL_UART_Main_receiveData(UART_JY61P_INST);<br>    <span class="hljs-keyword">if</span>(getdata[<span class="hljs-number">0</span>]==<span class="hljs-number">0x53</span>)<br>    &#123;<br>        cnt++;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(cnt==<span class="hljs-number">10</span>)<br>    &#123;<br>        NVIC_DisableIRQ(UART_JY61P_INST_INT_IRQN);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">uint8_t</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">3</span>;j++)=(((<span class="hljs-type">short</span>) getdata[<span class="hljs-number">2</span>+j*<span class="hljs-number">2</span>]&lt;&lt;<span class="hljs-number">8</span>)|getdata[<span class="hljs-number">1</span>+j*<span class="hljs-number">2</span>])/<span class="hljs-number">182</span>; <br>        NVIC_ClearPendingIRQ(UART_JY61P_INST_INT_IRQN);<br>        NVIC_EnableIRQ(UART_JY61P_INST_INT_IRQN);<br>        cnt=<span class="hljs-number">0</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>网上搜的 WT61C-TTL 陀螺仪的代码，可以用。陀螺仪上电后默认一直发数据包，分别是加速度，角速度和角度，角度范围是-180–180。这个代码是解析数据包读出角度，小车要用到的是偏航角，即xyz[2]。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">uint8_t</span> rx4;<br><span class="hljs-keyword">if</span>( huart==&amp;huart4)<br>&#123;<br><span class="hljs-type">static</span> <span class="hljs-type">uint8_t</span> i = <span class="hljs-number">0</span>;<br><span class="hljs-type">static</span> <span class="hljs-type">int16_t</span> buff[<span class="hljs-number">8</span>]; <br>buff[i++] = rx4;<br><span class="hljs-keyword">if</span>((i == <span class="hljs-number">1</span>) &amp;&amp; (buff[<span class="hljs-number">0</span>] != <span class="hljs-number">0x55</span>))<br>&#123;<br>i = <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">if</span>((i == <span class="hljs-number">2</span>) &amp;&amp; (buff[<span class="hljs-number">1</span>] != <span class="hljs-number">0x53</span>))<br>&#123;<br>i = <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(i == <span class="hljs-number">8</span>)<br>&#123;<br><span class="hljs-type">int16_t</span> value_x = (buff[<span class="hljs-number">3</span>] &lt;&lt; <span class="hljs-number">8</span>) | buff[<span class="hljs-number">2</span>];<br><span class="hljs-type">int16_t</span> value_y = (buff[<span class="hljs-number">5</span>] &lt;&lt; <span class="hljs-number">8</span>) | buff[<span class="hljs-number">4</span>];<br><span class="hljs-type">int16_t</span> value_z = (buff[<span class="hljs-number">7</span>] &lt;&lt; <span class="hljs-number">8</span>) | buff[<span class="hljs-number">6</span>];<br>xyz[<span class="hljs-number">0</span>] = (<span class="hljs-type">float</span>)value_x / <span class="hljs-number">32768</span>* <span class="hljs-number">180</span> ;<br>xyz[<span class="hljs-number">1</span>] = (<span class="hljs-type">float</span>)value_y/ <span class="hljs-number">32768</span>* <span class="hljs-number">180</span>;<br>xyz[<span class="hljs-number">2</span>] = (<span class="hljs-type">float</span>)value_z / <span class="hljs-number">32768</span>* <span class="hljs-number">180</span>;<br>                <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.1f,%.1f,%.1f\r\n&quot;</span>,xyz[<span class="hljs-number">0</span>],xyz[<span class="hljs-number">1</span>],xyz[<span class="hljs-number">2</span>]);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">8</span>; j++)<br>&#123;<br>buff[j] = <span class="hljs-number">0</span>;<br>&#125;<br>i = <span class="hljs-number">0</span>;<br>&#125;<br>HAL_UART_Receive_IT(&amp;huart4,&amp;rx4,<span class="hljs-number">1</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>资料的网址</p><p><a href="https://wit-motion.yuque.com/wumwnr/ltst03/wegquy#Ge5Fv">WT61协议</a></p><p>下面插一点图片</p><img src="01.jpg" alt="小车" width="400" height="400"/>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>25-4-26</title>
    <link href="/2025/04/26/25-4-26/"/>
    <url>/2025/04/26/25-4-26/</url>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><h1 id="今日份"><a href="#今日份" class="headerlink" title="今日份"></a>今日份</h1><p>总算是有点进展了捏，把第二个摄像头安上去了,安在了第一个的上面。</p><p>也可以扫到二维码<br>c很好</p><p>不愧是能进到06的人啊</p><p>废话不多说</p><p>二维码可以扫，每扫到变化的二维码就发数字给单片机，用串口3接收，本来要用数据包，but有问题，每次只能隔一个接收。算了，后来换成只发单个数据了，单片机接收的很好。</p><p>去吃晚饭前的代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br>  &#123;<br>  <span class="hljs-keyword">if</span>(x!=<span class="hljs-number">1</span>)<br>   Load(<span class="hljs-number">10</span>,<span class="hljs-number">10</span>);<br>  <span class="hljs-keyword">if</span>(x==<span class="hljs-number">1</span>&amp;&amp;t==<span class="hljs-number">0</span>)&#123;<br>  out1 = PID_realize2(&amp;pidHW_Tracking,s) ;<br>  Load(<span class="hljs-number">20</span>-out1,<span class="hljs-number">20</span>+out1);<br>  &#125;<br>  <span class="hljs-keyword">if</span>(t==<span class="hljs-number">1</span>)&#123;<br>  Load(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>  HAL_Delay(<span class="hljs-number">500</span>);<br>  t=<span class="hljs-number">0</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData==<span class="hljs-number">0x00</span>&amp;&amp;x==<span class="hljs-number">1</span>)&#123;<br>  HAL_Delay(<span class="hljs-number">800</span>);<br>  Load(<span class="hljs-number">15</span>,<span class="hljs-number">-15</span>);<br>  <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>  &#123;<br>  HAL_Delay(<span class="hljs-number">1</span>);<br>  <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>)&#123;<span class="hljs-keyword">break</span>;&#125;<br>  &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>只要开始循迹x就会变为1，识别到新的二维码的话t变1，t每次变1就停500ms，并清零t。</p><p>摄像头循迹代码还是换了之前的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sensor, image, time,math,machine<br><span class="hljs-keyword">from</span> pyb <span class="hljs-keyword">import</span> UART<br><span class="hljs-keyword">from</span> vl53l1x <span class="hljs-keyword">import</span> VL53L1X<br><span class="hljs-keyword">from</span> pyb <span class="hljs-keyword">import</span> LED<br><br>uart = UART(<span class="hljs-number">3</span>, <span class="hljs-number">115200</span>)<br>green_led = LED(<span class="hljs-number">2</span>)<br>sensor.reset()<br>sensor.set_pixformat(sensor.RGB565)<br><span class="hljs-comment"># 关闭自动白平衡</span><br>sensor.set_auto_exposure(<span class="hljs-literal">False</span>)<br>sensor.set_auto_whitebal(<span class="hljs-literal">False</span>)<br>sensor.set_auto_gain(<span class="hljs-literal">False</span>)<br>sensor.set_framesize(sensor.QQVGA)<br>sensor.skip_frames(<span class="hljs-number">10</span>)<br>clock = time.clock()<br><br>red_threshold=(<span class="hljs-number">0</span>, <span class="hljs-number">86</span>, <span class="hljs-number">5</span>, <span class="hljs-number">49</span>, <span class="hljs-number">5</span>, <span class="hljs-number">68</span>)<br>green_threshold=(<span class="hljs-number">43</span>, <span class="hljs-number">100</span>, -<span class="hljs-number">35</span>, -<span class="hljs-number">128</span>, <span class="hljs-number">11</span>, <span class="hljs-number">127</span>)<br>lastx = <span class="hljs-number">0</span><br>lastx2 = <span class="hljs-number">0</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sending_data3</span>(<span class="hljs-params">x</span>):<br>    FH = <span class="hljs-built_in">bytearray</span>([x])<br>    uart.write(FH);<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">send_uart</span>(<span class="hljs-params">deflection_angle,deflection_angle2</span>):<br>    sending_data3(<span class="hljs-number">0xA5</span>)<br>    time.sleep_ms(<span class="hljs-number">5</span>)<br>    sending_data3(deflection_angle)<br>    time.sleep_ms(<span class="hljs-number">5</span>)<br>    sending_data3(deflection_angle2)<br>    time.sleep_ms(<span class="hljs-number">5</span>)<br>    sending_data3(<span class="hljs-number">0x5B</span>)<br>    time.sleep_ms(<span class="hljs-number">5</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">find_max</span>(<span class="hljs-params">blobs</span>):<br>    max_size=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> blob <span class="hljs-keyword">in</span> blobs:<br>        <span class="hljs-keyword">if</span> blob[<span class="hljs-number">2</span>]*blob[<span class="hljs-number">3</span>] &gt; max_size:<br>            max_blob=blob<br>            max_size = blob[<span class="hljs-number">2</span>]*blob[<span class="hljs-number">3</span>]<br>    <span class="hljs-keyword">return</span> max_blob<br><br><span class="hljs-keyword">while</span>(<span class="hljs-literal">True</span>):<br>    clock.tick()<br>    img = sensor.snapshot()<br>    green_led.on()<br>    blobs = img.find_blobs([red_threshold])<br>    <span class="hljs-keyword">if</span> blobs:<br>        max_blob = find_max(blobs)<br>        lastx = max_blob.cx()<br>        <span class="hljs-comment">#lasty = max_blob.cy()</span><br>        img.draw_cross(max_blob.cx(), max_blob.cy())<br>        lastx=lastx-<span class="hljs-number">120</span>;<br>        d = <span class="hljs-string">&quot;%d&quot;</span> %(lastx)<br>        uart.write(<span class="hljs-string">&#x27;a&#x27;</span>);<br>        uart.write(<span class="hljs-string">&#x27;b&#x27;</span>);<br>        uart.write(d);<br>        uart.write(<span class="hljs-string">&#x27;e&#x27;</span>);<br>    <span class="hljs-keyword">else</span>:<br>        sending_data3(<span class="hljs-number">0x00</span>)<br><br>    blobs2 = img.find_blobs([green_threshold])<br>    <span class="hljs-keyword">if</span> blobs2:<br>        max_blob2 = find_max(blobs2)<br>        lastx2 = max_blob2.cx()<br>        <span class="hljs-comment">#lasty = max_blob.cy()</span><br>        img.draw_cross(max_blob2.cx(), max_blob2.cy())<br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;lastx:&quot;</span>,lastx,<span class="hljs-string">&quot;lastx2:&quot;</span>,lastx2)<br><br></code></pre></td></tr></table></figure><p>发x坐标 - 120</p><p>下面是稍微改了一点点的识别二维码的代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 二维码识别示例</span><br><span class="hljs-keyword">import</span> sensor, image, time<br><span class="hljs-keyword">from</span> machine <span class="hljs-keyword">import</span> UART <span class="hljs-comment">#引入串口模块</span><br>sensor.reset()<br>sensor.set_pixformat(sensor.GRAYSCALE)<br>sensor.set_framesize(sensor.VGA)<br>sensor.set_windowing((<span class="hljs-number">480</span>, <span class="hljs-number">480</span>)) <span class="hljs-comment"># 看VGA分辨率中间的240x240像素。</span><br>sensor.skip_frames(<span class="hljs-number">30</span>)<br>sensor.set_auto_gain(<span class="hljs-literal">False</span>)  <span class="hljs-comment"># 必须关闭此功能，以防止图像冲洗…</span><br><br>uart = UART(<span class="hljs-number">3</span>, <span class="hljs-number">115200</span>)<br>clock = time.clock()<br>last_payload = <span class="hljs-literal">None</span>  <span class="hljs-comment"># 用来保存上一次识别到的二维码内容</span><br>THRESHOLD = (<span class="hljs-number">0</span>, <span class="hljs-number">120</span>)  <span class="hljs-comment"># 可以根据具体情况调整阈值，0 是黑色，100 是白色</span><br><span class="hljs-keyword">while</span>(<span class="hljs-literal">True</span>):<br>    clock.tick()<br>    img = sensor.snapshot()<br>   <span class="hljs-comment"># for code in img.find_qrcodes():</span><br>    <span class="hljs-comment">#    print(code)</span><br>    <span class="hljs-comment">#img.binary([THRESHOLD])  # 对图像进行二值化处理</span><br>    codes = img.find_qrcodes()<br>    <span class="hljs-keyword">if</span> codes:<br>        payload = codes[<span class="hljs-number">0</span>].payload()  <span class="hljs-comment"># 假设只识别一个二维码</span><br>        <span class="hljs-keyword">if</span> payload != last_payload:<br>            last_payload = payload<br>            <span class="hljs-built_in">print</span>(payload)<br>            <span class="hljs-keyword">if</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/RlYaaoM/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;1&quot;</span>:<br>                out = <span class="hljs-string">&quot;1&quot;</span><br>                uart.write(out)<br>                time.sleep_ms(<span class="hljs-number">50</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/bDNqqqx/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;2&quot;</span>:<br>                out = <span class="hljs-string">&quot;2&quot;</span><br>                uart.write(out)<br>                time.sleep_ms(<span class="hljs-number">50</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/RMkwwwj/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;3&quot;</span>:<br>                out = <span class="hljs-string">&quot;3&quot;</span><br>                uart.write(out)<br>                time.sleep_ms(<span class="hljs-number">50</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/Ay4eeeX/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;4&quot;</span>:<br>                out = <span class="hljs-string">&quot;4&quot;</span><br>                uart.write(out)<br>                time.sleep_ms(<span class="hljs-number">50</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/O8eDDDV/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;5&quot;</span>:<br>                out = <span class="hljs-string">&quot;5&quot;</span><br>                uart.write(out)<br>                time.sleep_ms(<span class="hljs-number">50</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/O9Dmmmy/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;6&quot;</span>:<br>                out = <span class="hljs-string">&quot;6&quot;</span><br>                uart.write(out)<br>                time.sleep_ms(<span class="hljs-number">50</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/OdB888K/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;7&quot;</span>:<br>                out = <span class="hljs-string">&quot;7&quot;</span><br>                uart.write(out)<br>                time.sleep_ms(<span class="hljs-number">50</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AGwdddv/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;8&quot;</span>:<br>                out = <span class="hljs-string">&quot;8&quot;</span><br>                uart.write(out)<br>                time.sleep_ms(<span class="hljs-number">50</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AQp7778/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;9&quot;</span>:<br>                out = <span class="hljs-string">&quot;9&quot;</span><br>                uart.write(out)<br>                time.sleep_ms(<span class="hljs-number">50</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/R4e222J/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;10&quot;</span>:<br>                out = <span class="hljs-string">&quot;10&quot;</span><br>                uart.write(out)<br>                time.sleep_ms(<span class="hljs-number">50</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AV8YYYN/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;11&quot;</span>:<br>                out = <span class="hljs-string">&quot;11&quot;</span><br>                uart.write(out)<br>                time.sleep_ms(<span class="hljs-number">50</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AxqWWWQ/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;12&quot;</span>:<br>                out = <span class="hljs-string">&quot;12&quot;</span><br>                uart.write(out)<br>                time.sleep_ms(<span class="hljs-number">50</span>)<br><br></code></pre></td></tr></table></figure><h1 id="其他事件"><a href="#其他事件" class="headerlink" title="其他事件"></a>其他事件</h1><p>li_wan_ling过来问我FPGA相关的，算是一无所知然后在tb里面连线？相当复杂来着，东西是集创赛里的。</p><p>我没找出问题，不过嘛,没问题才奇怪吧，她很多没改直接copy，axi_uart模块好多引脚直接接地了，总之最终输出波形为0，任重而道远啊，下面把部分代码贴出来</p><p><a href="./files/1.pdf">点击这里查看完整文档</a></p><p>tb里的</p><details> <summary><font size="4" color="orange">Show Code</font></summary> <pre><code class="language-cpp">`timescale 1ns / 1ps`include "config.h"<p><code>define UART_PSEL               u_soc_top.u_axi_uart_controller.uart0.PSEL </code>define UART_PENBLE             u_soc_top.u_axi_uart_controller.uart0.PENABLE<br><code>define UART_PWRITE             u_soc_top.u_axi_uart_controller.uart0.PWRITE </code>define UART_WADDR              u_soc_top.u_axi_uart_controller.uart0.PADDR[7:0]<br>&#96;define UART_WDATA              u_soc_top.u_axi_uart_controller.uart0.PWDATA[7:0]</p><p>module tb_top( );<br>reg reset;<br>reg clk;<br>reg   [3:0]  touch_btn;<br>reg   [31:0]  dip_sw;</p><p>wire         UART_RX;<br>wire         UART_TX;<br>wire  [2:0]  video_red;<br>wire  [2:0]  video_green;<br>wire  [1:0]  video_blue;<br>wire  video_hsync;<br>wire  video_vsync;<br>wire  video_clk;<br>wire  video_de;<br>wire  [15:0]  leds;<br>wire  [7:0]  dpy0;<br>wire  [7:0]  dpy1;<br>wire  [19:0]  base_ram_addr;<br>wire  [ 3:0]  base_ram_be_n;<br>wire  base_ram_ce_n;<br>wire  base_ram_oe_n;<br>wire  base_ram_we_n;<br>wire  [19:0]  ext_ram_addr;<br>wire  [ 3:0]  ext_ram_be_n;<br>wire  ext_ram_ce_n;<br>wire  ext_ram_oe_n;<br>wire  ext_ram_we_n;<br>wire  [31:0]  base_ram_data;<br>wire  [31:0]  ext_ram_data;</p><p>initial<br>begin<br>    clk &#x3D; 1’b0;<br>    reset &#x3D; 1’b1;<br>    dip_sw &#x3D; 32’h0;<br>    #2000;<br>    reset &#x3D; 1’b0;<br>end<br>always #10 clk&#x3D;~clk;</p><p>initial<br>begin<br>    touch_btn &#x3D; 4’h0;<br>    dip_sw    &#x3D; 32’h0000_abcd;</p><pre><code class="hljs">#3000000;#100000touch_btn = 4&#39;b0001;#50touch_btn = 4&#39;b0000;#100000touch_btn = 4&#39;b0010;#50touch_btn = 4&#39;b0000;#100000touch_btn = 4&#39;b0100;#50touch_btn = 4&#39;b0000;#100000touch_btn = 4&#39;b1000;#50touch_btn = 4&#39;b0000;</code></pre><p>end</p><p>soc_top  #(.SIMULATION(1’b1)) u_soc_top (<br>    .clk                     ( clk           ),<br>    .reset                   ( reset         ),<br>    .touch_btn               ( touch_btn     ),<br>    .dip_sw                  ( dip_sw        ),</p><pre><code class="hljs">.video_red               ( video_red     ),.video_green             ( video_green   ),.video_blue              ( video_blue    ),.video_hsync             ( video_hsync   ),.video_vsync             ( video_vsync   ),.video_clk               ( video_clk     ),.video_de                ( video_de      ),.leds                    ( leds          ),.dpy0                    ( dpy0          ),.dpy1                    ( dpy1          ),.base_ram_addr           ( base_ram_addr   ),.base_ram_be_n           ( base_ram_be_n   ),.base_ram_ce_n           ( base_ram_ce_n   ),.base_ram_oe_n           ( base_ram_oe_n   ),.base_ram_we_n           ( base_ram_we_n   ),.ext_ram_addr            ( ext_ram_addr    ),.ext_ram_be_n            ( ext_ram_be_n    ),.ext_ram_ce_n            ( ext_ram_ce_n    ),.ext_ram_oe_n            ( ext_ram_oe_n    ),.ext_ram_we_n            ( ext_ram_we_n    ),.base_ram_data           ( base_ram_data   ),.ext_ram_data            ( ext_ram_data    ),.UART_RX                 ( UART_RX       ),.UART_TX                 ( UART_TX       )</code></pre><p>);</p><p>&#x2F;&#x2F;模拟串口打印<br>wire uart_display;<br>wire [7:0] uart_data;<br>wire uart_wen;<br>assign uart_wen &#x3D; (<code>UART_PSEL == 1&#39;b1) &amp;&amp;  (</code>UART_PENBLE &#x3D;&#x3D; 1’b1) &amp;&amp; (<code>UART_PWRITE == 1&#39;b1); assign uart_display = (uart_wen == 1&#39;b1) &amp;&amp; (</code>UART_WADDR &#x3D;&#x3D; 8’h0);<br>assign uart_data    &#x3D; &#96;UART_WDATA;</p><p>always @(posedge clk)<br>begin<br>    if(uart_display)<br>    begin<br>        if(uart_data&#x3D;&#x3D;8’hff)<br>        begin<br>            ;&#x2F;&#x2F;$finish;<br>        end<br>        else<br>        begin<br>            $write(“%c”,uart_data);<br>        end<br>    end<br>end</p><p>sram_sp #(<br>    .AW        ( 18     ),<br>    .Init_File(&#96;SRAM_Init_File))<br>base_sram_sp (<br>    .ram_addr                ( base_ram_addr   ),<br>    .ram_be_n                ( base_ram_be_n   ),<br>    .ram_ce_n                ( base_ram_ce_n   ),<br>    .ram_oe_n                ( base_ram_oe_n   ),<br>    .ram_we_n                ( base_ram_we_n   ),</p><pre><code class="hljs">.ram_data                ( base_ram_data   )</code></pre><p>);</p><p>sram_sp #(<br>    .AW        ( 18     ),<br>    .Init_File(&#96;SRAM_Init_File))<br>ext_sram_sp (<br>    .ram_addr                ( ext_ram_addr   ),<br>    .ram_be_n                ( ext_ram_be_n   ),<br>    .ram_ce_n                ( ext_ram_ce_n   ),<br>    .ram_oe_n                ( ext_ram_oe_n   ),<br>    .ram_we_n                ( ext_ram_we_n   ),</p><pre><code class="hljs">.ram_data                ( ext_ram_data   )</code></pre><p>);</p><p>endmodule</code><br></pre> </details>    </p><p>soc_top的</p><details> <summary><font size="4" color="orange">Show Code</font></summary> <pre><code class="language-cpp">`include "config.h"module soc_top #(    parameter SIMULATION = 1'b0) (    input clk,  //50MHz 时钟输入    input reset,  //BTN6手动复位按钮开关，带消抖电路，按下时为1    //图像输出信号    output [2:0] video_red,  //红色像素，3位    output [2:0] video_green,  //绿色像素，3位    output [1:0] video_blue,  //蓝色像素，2位    output video_hsync,  //行同步（水平同步）信号    output video_vsync,  //场同步（垂直同步）信号    output video_clk,  //像素时钟输出    output video_de,  //行数据有效信号，用于区分消隐区    input clock_btn,  //BTN5手动时钟按钮开关，带消抖电路，按下时为1    input [3:0] touch_btn,  //BTN1~BTN4，按钮开关，按下时为1    input [31:0] dip_sw,  //32位拨码开关，拨到“ON”时为1    output [15:0] leds,  //16位LED，输出时1点亮    output [7:0] dpy0,  //数码管低位信号，包括小数点，输出1点亮    output [7:0] dpy1,  //数码管高位信号，包括小数点，输出1点亮    //BaseRAM信号    inout [31:0] base_ram_data,  //BaseRAM数据，低8位与CPLD串口控制器共享    output [19:0] base_ram_addr,  //BaseRAM地址    output [ 3:0]   base_ram_be_n,      //BaseRAM字节使能，低有效。如果不使用字节使能，请保持为0    output base_ram_ce_n,  //BaseRAM片选，低有效    output base_ram_oe_n,  //BaseRAM读使能，低有效    output base_ram_we_n,  //BaseRAM写使能，低有效    //ExtRAM信号    inout [31:0] ext_ram_data,  //ExtRAM数据    output [19:0] ext_ram_addr,  //ExtRAM地址    output [ 3:0]   ext_ram_be_n,       //ExtRAM字节使能，低有效。如果不使用字节使能，请保持为0    output ext_ram_ce_n,  //ExtRAM片选，低有效    output ext_ram_oe_n,  //ExtRAM读使能，低有效    output ext_ram_we_n,  //ExtRAM写使能，低有效    //Flash存储器信号，参考 JS28F640 芯片手册    output [22:0] flash_a,  //Flash地址，a0仅在8bit模式有效，16bit模式无意义    inout [15:0] flash_d,  //Flash数据    output flash_rp_n,  //Flash复位信号，低有效    output flash_vpen,  //Flash写保护信号，低电平时不能擦除、烧写    output flash_ce_n,  //Flash片选信号，低有效    output flash_oe_n,  //Flash读使能信号，低有效    output flash_we_n,  //Flash写使能信号，低有效    output          flash_byte_n,       //Flash 8bit模式选择，低有效。在使用flash的16位模式时请设为1    //------uart-------    inout UART_RX,  //串口RX接收    inout UART_TX  //串口TX发送);  wire cpu_clk;  wire cpu_resetn;  wire sys_clk;  wire sys_resetn;  generate    if (SIMULATION) begin : sim_clk      //simulation clk.      reg clk_sim;      initial begin        clk_sim = 1'b0;      end      always #15 clk_sim = ~clk_sim;      assign cpu_clk = clk_sim;      assign sys_clk = clk;      rst_sync u_rst_sys (          .clk(sys_clk),          .rst_n_in(~reset),          .rst_n_out(sys_resetn)      );      rst_sync u_rst_cpu (          .clk(cpu_clk),          .rst_n_in(sys_resetn),          .rst_n_out(cpu_resetn)      );    end else begin : pll_clk      clk_pll u_clk_pll (          .cpu_clk(cpu_clk),          .sys_clk(sys_clk),          .resetn (~reset),          .locked (pll_locked),          .clk_in1(clk)      );      rst_sync u_rst_sys (          .clk(sys_clk),          .rst_n_in(pll_locked),          .rst_n_out(sys_resetn)      );      rst_sync u_rst_cpu (          .clk(cpu_clk),          .rst_n_in(sys_resetn),          .rst_n_out(cpu_resetn)      );    end  endgenerate  //TODO: add your code  //例化OpenLA500处理器核  core_top u_cpu (      //外部中断信号      .intrpt(8'h0),  //high active      .aclk(cpu_clk),      .aresetn(cpu_resetn),  //low active      //读地址通道      .arid(cpu_arid),      .araddr(cpu_araddr),      .arlen(cpu_arlen),      .arsize(cpu_arsize),      .arburst(cpu_arburst),      .arlock(cpu_arlock),      .arcache(cpu_arcache),      .arprot(cpu_arprot),      .arvalid(cpu_arvalid),      .arready(cpu_arready),      //读数据通道      .rid(cpu_rid),      .rdata(cpu_rdata),      .rresp(cpu_rresp),      .rlast(cpu_rlast),      .rvalid(cpu_rvalid),      .rready(cpu_rready),      //写地址通道      .awid(cpu_awid),      .awaddr(cpu_awaddr),      .awlen(cpu_awlen),      .awsize(cpu_awsize),      .awburst(cpu_awburst),      .awlock(cpu_awlock),      .awcache(cpu_awcache),      .awprot(cpu_awprot),      .awvalid(cpu_awvalid),      .awready(cpu_awready),      //写数据通道      .wid(cpu_wid),      .wdata(cpu_wdata),      .wstrb(cpu_wstrb),      .wlast(cpu_wlast),      .wvalid(cpu_wvalid),      .wready(cpu_wready),      //写响应通道      .bid(cpu_bid),      .bresp(cpu_bresp),      .bvalid(cpu_bvalid),      .bready(cpu_bready),      //已弃用      .break_point(1'b0),      .infor_flag(1'b0),      .reg_num(5'b0),      .ws_valid(),      .rf_rdata(),      //写回阶段提供的调试信息      .debug0_wb_pc(debug_wb_pc),      .debug0_wb_inst(debug_wb_inst),      .debug0_wb_rf_wen(debug_wb_rf_wen),      .debug0_wb_rf_wnum(debug_wb_rf_wnum),      .debug0_wb_rf_wdata(debug_wb_rf_wdata)  );  //例化Axi_CDC  Axi_CDC u_Axi_CDC (      .axiInClk (cpu_clk),      .axiInRst (cpu_resetn),      .axiOutClk(sys_clk),      .axiOutRst(sys_clk),      //in      //aw      .axiIn_awvalid(cpu_awvalid),      .axiIn_awready(cpu_awready),      .axiIn_awaddr (cpu_awaddr),      .axiIn_awid   (cpu_awid),      .axiIn_awlen  (cpu_awlen),      .axiIn_awsize (cpu_awsize),      .axiIn_awburst(cpu_awburst),      .axiIn_awlock (cpu_awlock),      .axiIn_awcache(cpu_awcache),      .axiIn_awprot (cpu_awprot),      //w      .axiIn_wvalid(cpu_wvalid),      .axiIn_wready(cpu_wready),      .axiIn_wdata (cpu_wdata),      .axiIn_wstrb (cpu_wstrb),      .axiIn_wlast (cpu_wlast),      //b      .axiIn_bready(cpu_bready),      .axiIn_bvalid(cpu_bvalid),      .axiIn_bid   (cpu_bid),      .axiIn_bresp (cpu_bresp),      //ar      .axiIn_arvalid(cpu_arvalid),      .axiIn_arready(cpu_arready),      .axiIn_araddr (cpu_araddr),      .axiIn_arid   (cpu_arid),      .axiIn_arlen  (cpu_arlen),      .axiIn_arsize (cpu_arsize),      .axiIn_arburst(cpu_arburst),      .axiIn_arlock (cpu_arlock),      .axiIn_arcache(cpu_arcache),      .axiIn_arprot (cpu_arprot),      //r      .axiIn_rvalid(cpu_rvalid),      .axiIn_rready(cpu_rready),      .axiIn_rdata (cpu_rdata),      .axiIn_rid   (cpu_rid),      .axiIn_rresp (cpu_rresp),      .axiIn_rlast (cpu_rlast),      //out      //aw      .axiOut_awvalid(cpu_sync_awvalid),      .axiOut_awready(cpu_sync_awready),      .axiOut_awaddr (cpu_sync_awaddr),      .axiOut_awid   (cpu_sync_awid),      .axiOut_awlen  (cpu_sync_awlen),      .axiOut_awsize (cpu_sync_awsize),      .axiOut_awburst(cpu_sync_awburst),      .axiOut_awlock (cpu_sync_awlock),      .axiOut_awcache(cpu_sync_awcache),      .axiOut_awprot (cpu_sync_awprot),      //w      .axiOut_wvalid(cpu_sync_wvalid),      .axiOut_wready(cpu_sync_wready),      .axiOut_wdata (cpu_sync_wdata),      .axiOut_wstrb (cpu_sync_wstrb),      .axiOut_wlast (cpu_sync_wlast),      //b      .axiOut_bready(cpu_sync_bready),      .axiOut_bvalid(cpu_sync_bvalid),      .axiOut_bid   (cpu_sync_bid),      .axiOut_bresp (cpu_sync_bresp),      //ar      .axiOut_arvalid(cpu_sync_arvalid),      .axiOut_arready(cpu_sync_arready),      .axiOut_araddr (cpu_sync_araddr),      .axiOut_arid   (cpu_sync_arid),      .axiOut_arlen  (cpu_sync_arlen),      .axiOut_arsize (cpu_sync_arsize),      .axiOut_arburst(cpu_sync_arburst),      .axiOut_arlock (cpu_sync_arlock),      .axiOut_arcache(cpu_sync_arcache),      .axiOut_arprot (cpu_sync_arprot),      //r      .axiOut_rvalid(cpu_sync_rvalid),      .axiOut_rready(cpu_sync_rready),      .axiOut_rdata (cpu_sync_rdata),      .axiOut_rid   (cpu_sync_rid),      .axiOut_rresp (cpu_sync_rresp),      .axiOut_rlast (cpu_sync_rlast)  );  //例化AxiCrossbar_1x4  assign axiOut_2_arready = 1'b1;  assign axiOut_2_rid = 5'b0;  assign axiOut_2_rdata = 32'b0;  assign axiOut_2_rresp = 2'b0;  assign axiOut_2_rlast = 1'b0;  assign axiOut_2_rvalid = 1'b0;  assign axiOut_2_awready = 1'b1;  assign axiOut_2_wready = 1'b1;  assign axiOut_2_bid = 5'b0;  assign axiOut_2_bresp = 2'b0;  assign axiOut_2_bvalid = 1'b0;  AxiCrossbar_1x4 u_AxiCrossbar_1x4 (      .clk   (sys_clk),      .resetn(sys_resetn),      //master 0      //aw      .axiIn_awvalid(cpu_sync_awvalid),      .axiIn_awready(cpu_sync_awready),      .axiIn_awaddr (cpu_sync_awaddr),      .axiIn_awid   (cpu_sync_awid),      .axiIn_awlen  (cpu_sync_awlen),      .axiIn_awsize (cpu_sync_awsize),      .axiIn_awburst(cpu_sync_awburst),      .axiIn_awlock (cpu_sync_awlock),      .axiIn_awcache(cpu_sync_awcache),      .axiIn_awprot (cpu_sync_awprot),      //w      .axiIn_wvalid(cpu_sync_wvalid),      .axiIn_wready(cpu_sync_wready),      .axiIn_wdata (cpu_sync_wdata),      .axiIn_wstrb (cpu_sync_wstrb),      .axiIn_wlast (cpu_sync_wlast),      //b      .axiIn_bready(cpu_sync_bread),      .axiIn_bvalid(cpu_sync_bvalid),      .axiIn_bid   (cpu_sync_bid),      .axiIn_bresp (cpu_sync_bresp),      //ar      .axiIn_arvalid(cpu_sync_arvalid),      .axiIn_arready(cpu_sync_arready),      .axiIn_araddr (cpu_sync_araddr),      .axiIn_arid   (cpu_sync_arid),      .axiIn_arlen  (cpu_sync_arlen),      .axiIn_arsize (cpu_sync_arsize),      .axiIn_arburst(cpu_sync_arburst),      .axiIn_arlock (cpu_sync_arlock),      .axiIn_arcache(cpu_sync_arcache),      .axiIn_arprot (cpu_sync_arprot),      //r      .axiIn_rvalid(cpu_sync_rvalid),      .axiIn_rready(cpu_sync_rready),      .axiIn_rdata (cpu_sync_rdata),      .axiIn_rid   (cpu_sync_rid),      .axiIn_rresp (cpu_sync_rresp),      .axiIn_rlast (cpu_sync_rlast),      //slave 0      //aw      .axiOut_0_awvalid(ram_awvalid),      .axiOut_0_awready(ram_awready),      .axiOut_0_awaddr (ram_awaddr),      .axiOut_0_awid   (ram_awid),      .axiOut_0_awlen  (ram_awlen),      .axiOut_0_awsize (ram_awsize),      .axiOut_0_awburst(ram_awburst),      .axiOut_0_awlock (ram_awlock),      .axiOut_0_awcache(ram_awcache),      .axiOut_0_awprot (ram_awprot),      //w      .axiOut_0_wvalid(ram_wvalid),      .axiOut_0_wready(ram_wready),      .axiOut_0_wdata (ram_wdata),      .axiOut_0_wstrb (ram_wstrb),      .axiOut_0_wlast (ram_wlast),      //b      .axiOut_0_bready(ram_bready),      .axiOut_0_bvalid(ram_bvalid),      .axiOut_0_bid   (ram_bid),      .axiOut_0_bresp (ram_bresp),      //ar      .axiOut_0_arvalid(ram_arvalid),      .axiOut_0_arready(ram_arready),      .axiOut_0_araddr (ram_araddr),      .axiOut_0_arid   (ram_arid),      .axiOut_0_arlen  (ram_arlen),      .axiOut_0_arsize (ram_arsize),      .axiOut_0_arburst(ram_arburst),      .axiOut_0_arlock (ram_arlock),      .axiOut_0_arcache(ram_arcache),      .axiOut_0_arprot (ram_arprot),      //r      .axiOut_0_rvalid(ram_rvalid),      .axiOut_0_rready(ram_rready),      .axiOut_0_rdata (ram_rdata),      .axiOut_0_rid   (ram_rid),      .axiOut_0_rresp (ram_rres),      .axiOut_0_rlast (ram_rlast),      //slave1      //aw      .axiOut_1_awvalid(uart_awvalid),      .axiOut_1_awready(uart_awready),      .axiOut_1_awaddr (uart_awaddr),      .axiOut_1_awid   (uart_awid),      .axiOut_1_awlen  (uart_awlen),      .axiOut_1_awsize (uart_awsize),      .axiOut_1_awburst(uart_awburst),      .axiOut_1_awlock (uart_awlock),      .axiOut_1_awcache(uart_awcache),      .axiOut_1_awprot (uart_awprot),      //w      .axiOut_1_wvalid(uart_wvalid),      .axiOut_1_wready(uart_wready),      .axiOut_1_wdata (uart_wdata),      .axiOut_1_wstrb (uart_wstrb),      .axiOut_1_wlast (uart_wlast),      //b      .axiOut_1_bready(uart_bready),      .axiOut_1_bvalid(uart_bvalid),      .axiOut_1_bid   (uart_bid),      .axiOut_1_bresp (uart_bresp),      //ar      .axiOut_1_arvalid(uart_arvalid),      .axiOut_1_arready(uart_arready),      .axiOut_1_araddr (uart_araddr),      .axiOut_1_arid   (uart_arid),      .axiOut_1_arlen  (uart_arlen),      .axiOut_1_arsize (uart_arsize),      .axiOut_1_arburst(uart_arburst),      .axiOut_1_arlock (uart_arlock),      .axiOut_1_arcache(uart_arcache),      .axiOut_1_arprot (uart_arprot),      //r      .axiOut_1_rvalid(uart_rvalid),      .axiOut_1_rready(uart_rready),      .axiOut_1_rdata (uart_rdata),      .axiOut_1_rid   (uart_rid),      .axiOut_1_rresp (uart_rres),      .axiOut_1_rlast (uart_rlast),      //slave3      //aw      .axiOut_3_awvalid(confreg_awvalid),      .axiOut_3_awready(confreg_awready),      .axiOut_3_awaddr (confreg_awaddr),      .axiOut_3_awid   (confreg_awid),      .axiOut_3_awlen  (confreg_awlen),      .axiOut_3_awsize (confreg_awsize),      .axiOut_3_awburst(confreg_awburst),      .axiOut_3_awlock (confreg_awlock),      .axiOut_3_awcache(confreg_awcache),      .axiOut_3_awprot (confreg_awprot),      //w      .axiOut_3_wvalid(confreg_wvalid),      .axiOut_3_wready(confreg_wready),      .axiOut_3_wdata (confreg_wdata),      .axiOut_3_wstrb (confreg_wstrb),      .axiOut_3_wlast (confreg_wlast),      //b      .axiOut_3_bready(confreg_bready),      .axiOut_3_bvalid(confreg_bvalid),      .axiOut_3_bid   (confreg_bid),      .axiOut_3_bresp (confreg_bresp),      //ar      .axiOut_3_arvalid(confreg_arvalid),      .axiOut_3_arready(confreg_arready),      .axiOut_3_araddr (confreg_araddr),      .axiOut_3_arid   (confreg_arid),      .axiOut_3_arlen  (confreg_arlen),      .axiOut_3_arsize (confreg_arsize),      .axiOut_3_arburst(confreg_arburst),      .axiOut_3_arlock (confreg_arlock),      .axiOut_3_arcache(confreg_arcache),      .axiOut_3_arprot (confreg_arprot),      //r      .axiOut_3_rvalid(confreg_rvalid),      .axiOut_3_rready(confreg_rready),      .axiOut_3_rdata (confreg_rdata),      .axiOut_3_rid   (confreg_rid),      .axiOut_3_rresp (confreg_rres),      .axiOut_3_rlast (confreg_rlast)  );  //例化sram  //axi ram  axi_wrap_ram_sp_ext u_axi_ram (      .aclk(sys_clk),      .aresetn(sys_resetn),  //ar .axi_arid ( ram_arid ),      .axi_araddr (ram_araddr),      .axi_arlen  (ram_arlen),      .axi_arsize (ram_arsize),      .axi_arburst(ram_arburst),      .axi_arlock (ram_arlock),      .axi_arcache(ram_arcache),      .axi_arprot (ram_arprot),      .axi_arvalid(ram_arvalid),      .axi_arready(ram_arready),      //r      .axi_rid(ram_rid),      .axi_rdata(ram_rdata),      .axi_rresp(ram_rresp),      .axi_rlast(ram_rlast),      .axi_rvalid(ram_rvalid),      .axi_rready(ram_rready),      //aw      .axi_awid(ram_awid),      .axi_awaddr(ram_awaddr),      .axi_awlen(ram_awlen),      .axi_awsize(ram_awsize),      .axi_awburst(ram_awburst),      .axi_awlock(ram_awlock),      .axi_awcache(ram_awcache),      .axi_awprot(ram_awprot),      .axi_awvalid(ram_awvalid),      .axi_awready(ram_awready),      //w      .axi_wdata (ram_wdata),      .axi_wstrb (ram_wstrb),      .axi_wlast (ram_wlast),      .axi_wvalid(ram_wvalid),      .axi_wready(ram_wready),      //b ram      .axi_bid(ram_bid),      .axi_bresp(ram_bresp),      .axi_bvalid(ram_bvalid),      .axi_bready(ram_bready),      .base_ram_addr(base_ram_addr),      .base_ram_be_n(base_ram_be_n),      .base_ram_ce_n(base_ram_ce_n),      .base_ram_oe_n(base_ram_oe_n),      .base_ram_we_n(base_ram_we_n),      .ext_ram_addr (ext_ram_addr),      .ext_ram_be_n (ext_ram_be_n),      .ext_ram_ce_n (ext_ram_ce_n),      .ext_ram_oe_n (ext_ram_oe_n),      .ext_ram_we_n (ext_ram_we_n),      .base_ram_data(base_ram_data),      .ext_ram_data (ext_ram_data)  );  //例化uart  //uart  wire UART_CTS, UART_RTS;  wire UART_DTR, UART_DSR;  wire UART_RI, UART_DCD;  assign UART_CTS = 1'b0;  assign UART_DSR = 1'b0;  assign UART_DCD = 1'b0;  assign UART_RI  = 1'b0;  wire uart0_int;  wire uart0_txd_o;  wire uart0_txd_i;  wire uart0_txd_oe;  wire uart0_rxd_o;  wire uart0_rxd_i;  wire uart0_rxd_oe;  wire uart0_rts_o;  wire uart0_cts_i;  wire uart0_dsr_i;  wire uart0_dcd_i;  wire uart0_dtr_o;  wire uart0_ri_i;  assign UART_RX = uart0_rxd_oe ? 1'bz : uart0_rxd_o;  assign UART_TX = uart0_txd_oe ? 1'bz : uart0_txd_o;  assign UART_RTS = uart0_rts_o;  assign UART_DTR = uart0_dtr_o;  assign uart0_txd_i = UART_TX;  assign uart0_rxd_i = UART_RX;  assign uart0_cts_i = UART_CTS;  assign uart0_dcd_i = UART_DCD;  assign uart0_dsr_i = UART_DSR;  assign uart0_ri_i = UART_RI;  //UART_CONTROLLER  axi_uart_controller u_axi_uart_controller (      .clk  (sys_clk),      .rst_n(sys_resetn),      .axi_s_awid(uart_awid),      .axi_s_awaddr(uart_awaddr),      .axi_s_awlen(uart_awlen),      .axi_s_awsize(uart_awsize),      .axi_s_awburst(uart_awburst),      .axi_s_awlock(uart_awlock),      .axi_s_awcache(uart_awcache),      .axi_s_awprot(uart_awprot),      .axi_s_awvalid(uart_awvalid),      .axi_s_awready(uart_awready),      .axi_s_wid(uart_wid),      .axi_s_wdata(uart_wdata),      .axi_s_wstrb(uart_wstrb),      .axi_s_wlast(uart_wlast),      .axi_s_wvalid(uart_wvalid),      .axi_s_wready(uart_wready),      .axi_s_bid(uart_bid),      .axi_s_bresp(uart_bresp),      .axi_s_bvalid(uart_bvalid),      .axi_s_bready(uart_bready),      .axi_s_arid(uart_arid),      .axi_s_araddr(uart_araddr),      .axi_s_arlen(uart_arlen),      .axi_s_arsize(uart_arsize),      .axi_s_arburst(uart_arburst),      .axi_s_arlock(uart_arlock),      .axi_s_arcache(uart_arcache),      .axi_s_arprot(uart_arprot),      .axi_s_arvalid(uart_arvalid),      .axi_s_arready(uart_arready),      .axi_s_rid(uart_rid),      .axi_s_rdata(uart_rdata),      .axi_s_rresp(uart_rresp),      .axi_s_rlast(uart_rlast),      .axi_s_rvalid(uart_rvalid),      .axi_s_rready(uart_rready),      .apb_rw_dma(1'b0),      .apb_psel_dma(1'b0),      .apb_enab_dma(1'b0),      .apb_addr_dma(20'b0),      .apb_valid_dma(1'b0),      .apb_wdata_dma(32'b0),      .apb_rdata_dma(),      .apb_ready_dma(),      .dma_grant(),      .dma_req_o(),      .dma_ack_i(1'b0),      //UART0       .uart0_txd_i(uart0_txd_i),      .uart0_txd_o(uart0_txd_o),      .uart0_txd_oe(uart0_txd_oe),      .uart0_rxd_i(uart0_rxd_i),      .uart0_rxd_o(uart0_rxd_o),      .uart0_rxd_oe(uart0_rxd_oe),      .uart0_rts_o(uart0_rts_o),      .uart0_dtr_o(uart0_dtr_o),      .uart0_cts_i(uart0_cts_i),      .uart0_dsr_i(uart0_dsr_i),      .uart0_dcd_i(uart0_dcd_i),      .uart0_ri_i(uart0_ri_i),      .uart0_int(uart0_int)  );  //例化confreg  confreg #(      .SIMULATION(SIMULATION)  ) u_confreg (      .aclk(sys_clk),      .aresetn(sys_resetn),      .cpu_clk(cpu_clk),      .cpu_resetn(cpu_resetn),      .s_awid(confreg_awid),      .s_awaddr(confreg_awaddr),      .s_awlen(confreg_awlen),      .s_awsize(confreg_awsize),      .s_awburst(confreg_awburst),      .s_awlock(confreg_awlock),      .s_awcache(confreg_awcache),      .s_awprot(confreg_awprot),      .s_awvalid(confreg_awvalid),      .s_wid(confreg_wid),      .s_wdata(confreg_wdata),      .s_wstrb(confreg_wstrb),      .s_wlast(confreg_wlast),      .s_wvalid(confreg_wvalid),      .s_bready(confreg_bready),      .s_arid(confreg_arid),      .s_araddr(confreg_araddr),      .s_arlen(confreg_arlen),      .s_arsize(confreg_arsize),      .s_arburst(confreg_arburst),      .s_arlock(confreg_arlock),      .s_arcache(confreg_arcache),      .s_arprot(confreg_arprot),      .s_arvalid(confreg_arvalid),      .s_rready(confreg_rready),      .s_awready(confreg_awready),      .s_wready(confreg_wready),      .s_bid(confreg_bid),      .s_bresp(confreg_bresp),      .s_bvalid(confreg_bvalid),      .s_arready(confreg_arready),      .s_rid(confreg_rid),      .s_rdata(confreg_rdata),      .s_rresp(confreg_rresp),      .s_rlast(confreg_rlast),      .s_rvalid(confreg_rvalid),      .switch(dip_sw),      .touch_btn(touch_btn),      .led(leds),      .dpy0(dpy0),      .dpy1(dpy1),      .confreg_int()  );endmodule</code></pre> </details>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>25-4-25</title>
    <link href="/2025/04/25/25-4-25/"/>
    <url>/2025/04/25/25-4-25/</url>
    
    <content type="html"><![CDATA[<figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">hexo clean <span class="hljs-variable">&amp;&amp;</span> hexo g <span class="hljs-variable">&amp;&amp;</span> hexo d<br></code></pre></td></tr></table></figure><h1 id="今日份代码-——-主要是gocm"><a href="#今日份代码-——-主要是gocm" class="headerlink" title="今日份代码 —— 主要是gocm"></a>今日份代码 —— 主要是gocm</h1><p>还是那个问题，gocm最后小车突然停会抖，导致摄像头的s过大，导致速度过大</p><p>c的openmv代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs python">THRESHOLD = (<span class="hljs-number">0</span>, <span class="hljs-number">86</span>, <span class="hljs-number">5</span>, <span class="hljs-number">49</span>, <span class="hljs-number">5</span>, <span class="hljs-number">68</span>)<br><span class="hljs-keyword">import</span> sensor, image, time,math<br><span class="hljs-keyword">from</span> pyb <span class="hljs-keyword">import</span> LED<br><span class="hljs-keyword">from</span> pid <span class="hljs-keyword">import</span> PID<br><span class="hljs-keyword">from</span> machine <span class="hljs-keyword">import</span> UART<br>uart = UART(<span class="hljs-number">3</span>, <span class="hljs-number">115200</span>)<br>rho_pid = PID(p=<span class="hljs-number">0.3</span>, i=<span class="hljs-number">0</span>)<br>theta_pid = PID(p=<span class="hljs-number">0.004</span>, i=<span class="hljs-number">0</span>)<br>LED(<span class="hljs-number">1</span>).on()<br>LED(<span class="hljs-number">2</span>).on()<br>LED(<span class="hljs-number">3</span>).on()<br>sensor.reset()<br>sensor.set_vflip(<span class="hljs-literal">True</span>)<br>sensor.set_hmirror(<span class="hljs-literal">True</span>)<br>sensor.set_pixformat(sensor.RGB565)<br>sensor.set_framesize(sensor.QQQVGA)<br>sensor.skip_frames(time = <span class="hljs-number">2000</span>)<br>clock = time.clock()<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sending_data3</span>(<span class="hljs-params">x</span>):<br>FH = <span class="hljs-built_in">bytearray</span>([x])<br>uart.write(FH);<br><span class="hljs-keyword">while</span>(<span class="hljs-literal">True</span>):<br>clock.tick()<br>img = sensor.snapshot().binary([THRESHOLD])<br>line = img.get_regression([(<span class="hljs-number">100</span>,<span class="hljs-number">100</span>)], robust = <span class="hljs-literal">True</span>)<br><span class="hljs-keyword">if</span> (line):<br>rho_err = <span class="hljs-built_in">abs</span>(line.rho())-img.width()/<span class="hljs-number">2</span><br><span class="hljs-keyword">if</span> line.theta()&gt;<span class="hljs-number">90</span>:<br>theta_err = line.theta()-<span class="hljs-number">180</span><br><span class="hljs-keyword">else</span>:<br>theta_err = line.theta()<br>img.draw_line(line.line(), color = <span class="hljs-number">127</span>)<br><span class="hljs-built_in">print</span>(rho_err,line.magnitude(),rho_err)<br><span class="hljs-keyword">if</span> line.magnitude()&gt;<span class="hljs-number">8</span>:<br>rho_output = rho_pid.get_pid(rho_err,<span class="hljs-number">1</span>)<br>theta_output = theta_pid.get_pid(theta_err,<span class="hljs-number">1</span>)<br>output = rho_output+theta_output<br>e = <span class="hljs-number">123</span><br>d = <span class="hljs-string">&quot;%d&quot;</span> %(output)<br>uart.write(<span class="hljs-string">&#x27;a&#x27;</span>);<br>uart.write(<span class="hljs-string">&#x27;b&#x27;</span>);<br>uart.write(d);<br>uart.write(<span class="hljs-string">&#x27;e&#x27;</span>);<br>time.sleep_ms(<span class="hljs-number">5</span>)<br><span class="hljs-keyword">else</span>:<br>uart.write(<span class="hljs-string">&#x27;a&#x27;</span>);<br>uart.write(<span class="hljs-string">&#x27;b&#x27;</span>);<br>uart.write(<span class="hljs-string">&#x27;0&#x27;</span>);<br>uart.write(<span class="hljs-string">&#x27;e&#x27;</span>);<br>time.sleep_ms(<span class="hljs-number">5</span>)<br><span class="hljs-keyword">else</span>:<br>sending_data3(<span class="hljs-number">0x00</span>);<br>time.sleep_ms(<span class="hljs-number">5</span>)<br><span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><p>小车工程的串口和主函数的</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">if</span>(x==<span class="hljs-number">1</span>)<br>  Load(<span class="hljs-number">30</span><span class="hljs-number">-4</span>*s,<span class="hljs-number">30</span>+<span class="hljs-number">4</span>*s);<br>  <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData==<span class="hljs-number">0x00</span>&amp;&amp;x==<span class="hljs-number">1</span>&amp;&amp;m==<span class="hljs-number">0</span>&amp;&amp;k==<span class="hljs-number">0</span>)&#123;<br>  HAL_Delay(<span class="hljs-number">500</span>);<br>  Load(<span class="hljs-number">10</span>,<span class="hljs-number">-10</span>);<br>  <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)&#123;<span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>&amp;&amp;s==<span class="hljs-number">0</span>)<span class="hljs-keyword">break</span>;HAL_Delay(<span class="hljs-number">1</span>);&#125;<br>  m=<span class="hljs-number">1</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData==<span class="hljs-number">0x00</span>&amp;&amp;x==<span class="hljs-number">1</span>&amp;&amp;m==<span class="hljs-number">1</span>&amp;&amp;k==<span class="hljs-number">0</span>)&#123;<br>  HAL_Delay(<span class="hljs-number">500</span>);<br>  Load(<span class="hljs-number">10</span>,<span class="hljs-number">-10</span>);<br>  <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)&#123;<span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>&amp;&amp;s==<span class="hljs-number">0</span>)<span class="hljs-keyword">break</span>;HAL_Delay(<span class="hljs-number">1</span>);&#125;<br>  m=<span class="hljs-number">1</span>;k=<span class="hljs-number">1</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData==<span class="hljs-number">0x00</span>&amp;&amp;x==<span class="hljs-number">1</span>&amp;&amp;m==<span class="hljs-number">1</span>&amp;&amp;k==<span class="hljs-number">1</span>)&#123;<br>  HAL_Delay(<span class="hljs-number">500</span>);<br>  Load(<span class="hljs-number">-20</span>,<span class="hljs-number">20</span>);<br>  HAL_Delay(<span class="hljs-number">550</span>);<br>  Load(<span class="hljs-number">20</span>,<span class="hljs-number">20</span>);<br>   HAL_Delay(<span class="hljs-number">950</span>);<br>   Load(<span class="hljs-number">-10</span>,<span class="hljs-number">10</span>);<br><br> HAL_Delay(<span class="hljs-number">700</span>);<br> <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)&#123;<span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>&amp;&amp;s==<span class="hljs-number">0</span>)<span class="hljs-keyword">break</span>;HAL_Delay(<span class="hljs-number">1</span>);&#125;<br> Load(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>  HAL_Delay(<span class="hljs-number">20</span>);<br>  m=<span class="hljs-number">0</span>;k=<span class="hljs-number">0</span>;<br>  &#125;<br></code></pre></td></tr></table></figure><p>串口</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_UART_RxCpltCallback</span><span class="hljs-params">(UART_HandleTypeDef *huart)</span><br>&#123;<br><span class="hljs-keyword">if</span>( huart==&amp;huart6)<br>&#123;<br><span class="hljs-comment">//HAL_UART_Transmit(&amp;huart1,&amp;rx1,1,50);</span><br>usartCamera_Receive_Data(g_ucUsart2ReceiveData);<br>HAL_UART_Receive_IT(&amp;huart6,&amp;g_ucUsart2ReceiveData,<span class="hljs-number">1</span>);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>处理数据的函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> <span class="hljs-title function_">usartCamera_Receive_Data</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> data)</span><br>&#123;<br><span class="hljs-type">static</span> <span class="hljs-type">uint8_t</span> state = <span class="hljs-number">0</span>;<span class="hljs-comment">//定义静态static 变量</span><br><br><span class="hljs-keyword">if</span>(state==<span class="hljs-number">0</span>&amp;&amp;data==<span class="hljs-number">0x61</span>) <span class="hljs-comment">//判断第一个是不是帧头0xA5</span><br>&#123;<br>state=<span class="hljs-number">1</span>;<span class="hljs-comment">//是帧头0xA5 赋值state=1 表示接收下一个数据</span><br><span class="hljs-comment">//数据存储在数组中 &quot;g_ucUsart2ReceivCounter++&quot;,这里是先用后加，比如g_ucUsart2ReceivCounter 初值为0，执行这个是先g_ucaUsart3ReceiveBuffer[0]=data，然后g_ucUsart3ReceivCounter++，即后g_ucUsart3ReceivCounter = 1的</span><br>g_ucaUsart2ReceiveBuffer[g_ucUsart2ReceivCounter++] = data;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(state==<span class="hljs-number">1</span>&amp;&amp;data==<span class="hljs-number">0x62</span>) <span class="hljs-comment">//第二个是不是帧头0xA6</span><br>&#123;<br>state=<span class="hljs-number">2</span>;<span class="hljs-comment">//如果第二个是帧头0xA6 赋值state=2 表示接收下一个数据</span><br>g_ucaUsart2ReceiveBuffer[g_ucUsart2ReceivCounter++] = data;<span class="hljs-comment">//保存数据</span><br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(state==<span class="hljs-number">2</span>)<span class="hljs-comment">//然后确定开头是0XA5 0XA6 就开始接收</span><br>&#123;<br>g_ucaUsart2ReceiveBuffer[g_ucUsart2ReceivCounter++]=data;<br><span class="hljs-keyword">if</span>(g_ucUsart2ReceivCounter&gt;<span class="hljs-number">9</span>||data==<span class="hljs-number">0x65</span>) state=<span class="hljs-number">3</span>;  <span class="hljs-comment">//接收大于9个或者接收到帧尾0X5B 就置位状态三</span><br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(state==<span class="hljs-number">3</span>) <span class="hljs-comment">//状态三</span><br>&#123;<br>x=<span class="hljs-number">1</span>;<br>s=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">if</span>(g_ucaUsart2ReceiveBuffer[g_ucUsart2ReceivCounter<span class="hljs-number">-1</span>] == <span class="hljs-number">0x65</span>)  <span class="hljs-comment">//确定 最后一个是不是0x5B帧尾 是帧尾0x5B 就认为通信正确 处理数据</span><br>&#123;<br>state = <span class="hljs-number">0</span>;<span class="hljs-comment">//这里就可以处理数据了、处理完记得清空数组和重置标志位与计数值</span><br><br><span class="hljs-keyword">if</span>(g_ucaUsart2ReceiveBuffer[<span class="hljs-number">2</span>]!=<span class="hljs-number">0x2d</span>)<br>            &#123;<br><span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(i=<span class="hljs-number">2</span>;i&lt;g_ucUsart2ReceivCounter<span class="hljs-number">-1</span>;i++)<br>&#123;<br>s*=<span class="hljs-number">10</span>;<br><span class="hljs-keyword">if</span>(g_ucaUsart2ReceiveBuffer[i]<span class="hljs-number">-48</span>&lt;<span class="hljs-number">10</span>)<br>s+=(g_ucaUsart2ReceiveBuffer[i]<span class="hljs-number">-48</span>);<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-type">int</span> q=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(q=<span class="hljs-number">3</span>;q&lt;g_ucUsart2ReceivCounter<span class="hljs-number">-1</span>;q++)<br>&#123;<br>s*=<span class="hljs-number">10</span>;<br><span class="hljs-keyword">if</span>(g_ucaUsart2ReceiveBuffer[q]<span class="hljs-number">-48</span>&lt;<span class="hljs-number">10</span>)<br>s+=(g_ucaUsart2ReceiveBuffer[q]<span class="hljs-number">-48</span>);<br>&#125;<br>s=-s;<br>&#125;<br>g_ucUsart2ReceivCounter = <span class="hljs-number">0</span>;<span class="hljs-comment">//清零计数值</span><br><span class="hljs-comment">//2.然后清空数组</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">10</span>;i++)&#123; g_ucaUsart2ReceiveBuffer[i]=<span class="hljs-number">0x00</span>;&#125;<span class="hljs-comment">//清空数组</span><br><br><span class="hljs-keyword">return</span> s;<br>&#125;<br><span class="hljs-keyword">else</span><span class="hljs-comment">//不是帧尾说明通信错误重新开始接收</span><br>&#123;<br>state=<span class="hljs-number">0</span>;<br>g_ucUsart2ReceivCounter =<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">10</span>;i++) &#123; g_ucaUsart2ReceiveBuffer[i]=<span class="hljs-number">0x00</span>;&#125;<span class="hljs-comment">//清空数组</span><br>s=<span class="hljs-number">0</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<span class="hljs-comment">//其他异常清空</span><br>state=<span class="hljs-number">0</span>;<br>g_ucUsart2ReceivCounter =<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">10</span>;i++) g_ucaUsart2ReceiveBuffer[i]=<span class="hljs-number">0x00</span>;<span class="hljs-comment">//清空数组</span><br>s=<span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<span class="hljs-comment">//</span><br>&#125;<br></code></pre></td></tr></table></figure><p>前12个二维码的值</p><p><a href="https://5v60oq.58u.cn/a/RlYaaoM/">https://5v60oq.58u.cn/a/RlYaaoM/</a><br><a href="https://5v60oq.58u.cn/a/bDNqqqx/">https://5v60oq.58u.cn/a/bDNqqqx/</a><br><a href="https://5v60oq.58u.cn/a/RMkwwwj/">https://5v60oq.58u.cn/a/RMkwwwj/</a><br><a href="https://5v60oq.58u.cn/a/Ay4eeeX/">https://5v60oq.58u.cn/a/Ay4eeeX/</a><br><a href="https://5v60oq.58u.cn/a/O8eDDDV/">https://5v60oq.58u.cn/a/O8eDDDV/</a><br><a href="https://5v60oq.58u.cn/a/O9Dmmmy/">https://5v60oq.58u.cn/a/O9Dmmmy/</a><br><a href="https://5v60oq.58u.cn/a/OdB888K/">https://5v60oq.58u.cn/a/OdB888K/</a><br><a href="https://5v60oq.58u.cn/a/AGwdddv/">https://5v60oq.58u.cn/a/AGwdddv/</a><br><a href="https://5v60oq.58u.cn/a/AQp7778/">https://5v60oq.58u.cn/a/AQp7778/</a><br><a href="https://5v60oq.58u.cn/a/R4e222J/">https://5v60oq.58u.cn/a/R4e222J/</a><br><a href="https://5v60oq.58u.cn/a/AV8YYYN/">https://5v60oq.58u.cn/a/AV8YYYN/</a><br><a href="https://5v60oq.58u.cn/a/AxqWWWQ/">https://5v60oq.58u.cn/a/AxqWWWQ/</a></p><p>目前写的识别二维码的代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 二维码识别示例</span><br><span class="hljs-keyword">import</span> sensor, image, time<br><span class="hljs-keyword">from</span> machine <span class="hljs-keyword">import</span> UART <span class="hljs-comment">#引入串口模块</span><br>sensor.reset()<br>sensor.set_pixformat(sensor.GRAYSCALE)<br>sensor.set_framesize(sensor.VGA)<br>sensor.set_windowing((<span class="hljs-number">240</span>, <span class="hljs-number">240</span>)) <span class="hljs-comment"># 看VGA分辨率中间的240x240像素。</span><br>sensor.skip_frames(<span class="hljs-number">30</span>)<br>sensor.set_auto_gain(<span class="hljs-literal">False</span>)  <span class="hljs-comment"># 必须关闭此功能，以防止图像冲洗…</span><br><br>uart = UART(<span class="hljs-number">3</span>, <span class="hljs-number">115200</span>)<br>clock = time.clock()<br>last_payload = <span class="hljs-literal">None</span>  <span class="hljs-comment"># 用来保存上一次识别到的二维码内容</span><br>THRESHOLD = (<span class="hljs-number">0</span>, <span class="hljs-number">120</span>)  <span class="hljs-comment"># 可以根据具体情况调整阈值，0 是黑色，100 是白色</span><br><span class="hljs-keyword">while</span>(<span class="hljs-literal">True</span>):<br>    clock.tick()<br>    img = sensor.snapshot()<br>   <span class="hljs-comment"># for code in img.find_qrcodes():</span><br>    <span class="hljs-comment">#    print(code)</span><br>    <span class="hljs-comment">#img.binary([THRESHOLD])  # 对图像进行二值化处理</span><br>    codes = img.find_qrcodes()<br>    <span class="hljs-keyword">if</span> codes:<br>        payload = codes[<span class="hljs-number">0</span>].payload()  <span class="hljs-comment"># 假设只识别一个二维码</span><br>        <span class="hljs-keyword">if</span> payload != last_payload:<br>            last_payload = payload<br>            <span class="hljs-built_in">print</span>(payload)<br>            <span class="hljs-keyword">if</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/RlYaaoM/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;1&quot;</span>:<br>                out = <span class="hljs-string">&quot;1&quot;</span><br>                uart.write(<span class="hljs-string">&#x27;a&#x27;</span>)<br>                uart.write(<span class="hljs-string">&#x27;c&#x27;</span>)<br>                uart.write(out)<br>                uart.write(<span class="hljs-string">&#x27;e&#x27;</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/bDNqqqx/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;2&quot;</span>:<br>                out = <span class="hljs-string">&quot;2&quot;</span><br>                uart.write(<span class="hljs-string">&#x27;a&#x27;</span>)<br>                uart.write(<span class="hljs-string">&#x27;c&#x27;</span>)<br>                uart.write(out)<br>                uart.write(<span class="hljs-string">&#x27;e&#x27;</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/RMkwwwj/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;3&quot;</span>:<br>                out = <span class="hljs-string">&quot;3&quot;</span><br>                uart.write(<span class="hljs-string">&#x27;a&#x27;</span>)<br>                uart.write(<span class="hljs-string">&#x27;c&#x27;</span>)<br>                uart.write(out)<br>                uart.write(<span class="hljs-string">&#x27;e&#x27;</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/Ay4eeeX/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;4&quot;</span>:<br>                out = <span class="hljs-string">&quot;4&quot;</span><br>                uart.write(<span class="hljs-string">&#x27;a&#x27;</span>)<br>                uart.write(<span class="hljs-string">&#x27;c&#x27;</span>)<br>                uart.write(out)<br>                uart.write(<span class="hljs-string">&#x27;e&#x27;</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/O8eDDDV/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;5&quot;</span>:<br>                out = <span class="hljs-string">&quot;5&quot;</span><br>                uart.write(<span class="hljs-string">&#x27;a&#x27;</span>)<br>                uart.write(<span class="hljs-string">&#x27;c&#x27;</span>)<br>                uart.write(out)<br>                uart.write(<span class="hljs-string">&#x27;e&#x27;</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/O9Dmmmy/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;6&quot;</span>:<br>                out = <span class="hljs-string">&quot;6&quot;</span><br>                uart.write(<span class="hljs-string">&#x27;a&#x27;</span>)<br>                uart.write(<span class="hljs-string">&#x27;c&#x27;</span>)<br>                uart.write(out)<br>                uart.write(<span class="hljs-string">&#x27;e&#x27;</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/OdB888K/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;7&quot;</span>:<br>                out = <span class="hljs-string">&quot;7&quot;</span><br>                uart.write(<span class="hljs-string">&#x27;a&#x27;</span>)<br>                uart.write(<span class="hljs-string">&#x27;c&#x27;</span>)<br>                uart.write(out)<br>                uart.write(<span class="hljs-string">&#x27;e&#x27;</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AGwdddv/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;8&quot;</span>:<br>                out = <span class="hljs-string">&quot;8&quot;</span><br>                uart.write(<span class="hljs-string">&#x27;a&#x27;</span>)<br>                uart.write(<span class="hljs-string">&#x27;c&#x27;</span>)<br>                uart.write(out)<br>                uart.write(<span class="hljs-string">&#x27;e&#x27;</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AQp7778/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;9&quot;</span>:<br>                out = <span class="hljs-string">&quot;9&quot;</span><br>                uart.write(<span class="hljs-string">&#x27;a&#x27;</span>)<br>                uart.write(<span class="hljs-string">&#x27;c&#x27;</span>)<br>                uart.write(out)<br>                uart.write(<span class="hljs-string">&#x27;e&#x27;</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/R4e222J/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;10&quot;</span>:<br>                out = <span class="hljs-string">&quot;10&quot;</span><br>                uart.write(<span class="hljs-string">&#x27;a&#x27;</span>)<br>                uart.write(<span class="hljs-string">&#x27;c&#x27;</span>)<br>                uart.write(out)<br>                uart.write(<span class="hljs-string">&#x27;e&#x27;</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AV8YYYN/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;11&quot;</span>:<br>                out = <span class="hljs-string">&quot;11&quot;</span><br>                uart.write(<span class="hljs-string">&#x27;a&#x27;</span>)<br>                uart.write(<span class="hljs-string">&#x27;c&#x27;</span>)<br>                uart.write(out)<br>                uart.write(<span class="hljs-string">&#x27;e&#x27;</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AxqWWWQ/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;12&quot;</span>:<br>                out = <span class="hljs-string">&quot;12&quot;</span><br>                uart.write(<span class="hljs-string">&#x27;a&#x27;</span>)<br>                uart.write(<span class="hljs-string">&#x27;c&#x27;</span>)<br>                uart.write(out)<br>                uart.write(<span class="hljs-string">&#x27;e&#x27;</span>)<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>25-4-20</title>
    <link href="/2025/04/20/25-4-20/"/>
    <url>/2025/04/20/25-4-20/</url>
    
    <content type="html"><![CDATA[<figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">hexo clean <span class="hljs-variable">&amp;&amp;</span> hexo g <span class="hljs-variable">&amp;&amp;</span> hexo d<br></code></pre></td></tr></table></figure><h1 id="一、"><a href="#一、" class="headerlink" title="一、"></a>一、</h1><p>​c在搞通讯。</p><p>​通讯搞好了，目前在弄循迹。小车不在我这测不了距离，不用步进电机应该可以吧，想买个麦克轮but没money算了，又报销不了。</p><p>​把ppt做了，之后看下位置PID，积分限幅那些加上。</p><p>​让小车走一定距离的误差大可能是因为没弄位置环？到指定距离后有惯性停不下来。之后看下江科大讲的看能不能改下代码，加上摄像头巡线误差肯定更大。<br>​今天啥都没干光测了距离。之后向c要下摄像头和通信的代码。不对还有个问题，转弯的时候踩线了，如果摄像头能识别拐角会更好。</p><h1 id="二、一些代码"><a href="#二、一些代码" class="headerlink" title="二、一些代码"></a>二、一些代码</h1><p>这是行驶一段距离的代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">void</span> <span class="hljs-title function_">gocm</span><span class="hljs-params">(<span class="hljs-type">int</span> cm)</span><br>&#123;<br><span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>    &#123;<br>        Milleage_flag = <span class="hljs-number">1</span>;<br>        motorPidSetSpeed(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br>        <span class="hljs-keyword">if</span>((<span class="hljs-type">int</span>)Mileage &gt;= cm * <span class="hljs-number">10</span>)<br>        &#123;<br>            Load(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>            Mileage = <span class="hljs-number">0</span>;<br>            Milleage_flag = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>        HAL_Delay(<span class="hljs-number">5</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>中断里面算速度和里程</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">if</span>(htim == &amp;htim3)<span class="hljs-comment">//htim3  500HZ 2ms中断一次</span><br>&#123; <br><br>TimerCount++;<span class="hljs-comment">//每次进入中断 、中断计数变量递增</span><br><span class="hljs-keyword">if</span>(TimerCount %<span class="hljs-number">5</span> == <span class="hljs-number">0</span>)<span class="hljs-comment">//每10ms 执行一次</span><br>&#123; <br>Encode1Count = -(<span class="hljs-type">short</span>)__HAL_TIM_GET_COUNTER(&amp;htim4);<span class="hljs-comment">//获得当前编码器计数值并赋值 (short):是类型转化 -:是因为电机对侧安装</span><br>Encode2Count = (<span class="hljs-type">short</span>)__HAL_TIM_GET_COUNTER(&amp;htim2);<br>cnt2+=Encode1Count;<br>__HAL_TIM_SET_COUNTER(&amp;htim2,<span class="hljs-number">0</span>);<span class="hljs-comment">//每次获得编码器计数值后都清零，这样每次计数值就是变化量</span><br>__HAL_TIM_SET_COUNTER(&amp;htim4,<span class="hljs-number">0</span>);<br><span class="hljs-comment">/* 电机速度 = 编码器计数值`*编码器读取频率/减速比/编码器线数/4倍频 */</span><br>Motor1Speed = (<span class="hljs-type">float</span>)Encode1Count*<span class="hljs-number">100</span>/<span class="hljs-number">28</span>/<span class="hljs-number">13</span>/<span class="hljs-number">4</span>;<br>    Motor2Speed = (<span class="hljs-type">float</span>)Encode2Count*<span class="hljs-number">100</span>/<span class="hljs-number">28</span>/<span class="hljs-number">13</span>/<span class="hljs-number">4</span>;<br>go_left  += <span class="hljs-number">0.01f</span>*Motor1Speed*<span class="hljs-number">204.2f</span>;<br>go_right += <span class="hljs-number">0.01f</span>*Motor1Speed*<span class="hljs-number">204.2f</span>;<br>go += <span class="hljs-number">0.005f</span>*(Motor1Speed+Motor2Speed)*<span class="hljs-number">204.2f</span>;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f\r\n&quot;</span>,cnt2,Mileage1,Mileage,Motor1Speed,g_ftracingPidOut1,pidMotor2Speed.target_val,pidMotor2Speed.err_sum,out);<br>&#125;<br>        <span class="hljs-keyword">if</span>(Milleage_flag == <span class="hljs-number">1</span>)<br>        &#123;<br><span class="hljs-keyword">if</span>(TimerCount %<span class="hljs-number">5</span> == <span class="hljs-number">0</span>)<span class="hljs-comment">//每10ms执行一次</span><br>            &#123;<br>               <span class="hljs-comment">/*里程 += 时间*电机速度*周长*/</span><br>Mileage1 += <span class="hljs-number">0.01f</span>*Motor1Speed*<span class="hljs-number">204.2f</span>;<br>Mileage2 += <span class="hljs-number">0.01f</span>*Motor2Speed*<span class="hljs-number">204.2f</span>;<br>Mileage += <span class="hljs-number">0.005f</span>*(Motor1Speed+Motor2Speed)*<span class="hljs-number">204.2f</span>;<br>               <span class="hljs-comment">/*控制电机转速*/</span><br>                <span class="hljs-comment">//Load(PID_realize2(&amp;pidMotor1Speed,Motor1Speed),PID_realize2(&amp;pidMotor2Speed,Motor2Speed));</span><br>                TimerCount=<span class="hljs-number">0</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><p>这是11昨天发的识别最大色块中心点x坐标的代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sensor, image, time,math,machine<br><span class="hljs-keyword">from</span> pyb <span class="hljs-keyword">import</span> UART<br><span class="hljs-keyword">from</span> vl53l1x <span class="hljs-keyword">import</span> VL53L1X<br><span class="hljs-keyword">from</span> pyb <span class="hljs-keyword">import</span> LED<br><br>uart_A = UART(<span class="hljs-number">3</span>, <span class="hljs-number">115200</span>)<br>green_led = LED(<span class="hljs-number">2</span>)<br>sensor.reset()<br>sensor.set_pixformat(sensor.RGB565)<br><span class="hljs-comment"># 关闭自动白平衡</span><br>sensor.set_auto_exposure(<span class="hljs-literal">False</span>)<br>sensor.set_auto_whitebal(<span class="hljs-literal">False</span>)<br>sensor.set_auto_gain(<span class="hljs-literal">False</span>)<br>sensor.set_framesize(sensor.QQVGA)<br>sensor.skip_frames(<span class="hljs-number">10</span>)<br>clock = time.clock()<br><br>red_threshold=(<span class="hljs-number">70</span>, <span class="hljs-number">100</span>, <span class="hljs-number">5</span>, <span class="hljs-number">124</span>, -<span class="hljs-number">128</span>, <span class="hljs-number">127</span>)<br>green_threshold=(<span class="hljs-number">43</span>, <span class="hljs-number">100</span>, -<span class="hljs-number">35</span>, -<span class="hljs-number">128</span>, <span class="hljs-number">11</span>, <span class="hljs-number">127</span>)<br>lastx = <span class="hljs-number">0</span><br>lastx2 = <span class="hljs-number">0</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sending_data3</span>(<span class="hljs-params">x</span>):<br>    FH = <span class="hljs-built_in">bytearray</span>([x])<br>    uart_A.write(FH);<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">send_uart</span>(<span class="hljs-params">deflection_angle,deflection_angle2</span>):<br>    sending_data3(<span class="hljs-number">0xA5</span>)<br>    time.sleep_ms(<span class="hljs-number">5</span>)<br>    sending_data3(deflection_angle)<br>    time.sleep_ms(<span class="hljs-number">5</span>)<br>    sending_data3(deflection_angle2)<br>    time.sleep_ms(<span class="hljs-number">5</span>)<br>    sending_data3(<span class="hljs-number">0x5B</span>)<br>    time.sleep_ms(<span class="hljs-number">5</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">find_max</span>(<span class="hljs-params">blobs</span>):<br>    max_size=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> blob <span class="hljs-keyword">in</span> blobs:<br>        <span class="hljs-keyword">if</span> blob[<span class="hljs-number">2</span>]*blob[<span class="hljs-number">3</span>] &gt; max_size:<br>            max_blob=blob<br>            max_size = blob[<span class="hljs-number">2</span>]*blob[<span class="hljs-number">3</span>]<br>    <span class="hljs-keyword">return</span> max_blob<br><br><span class="hljs-keyword">while</span>(<span class="hljs-literal">True</span>):<br>    clock.tick()<br>    img = sensor.snapshot()<br>    green_led.on()<br>    blobs = img.find_blobs([red_threshold])<br>    <span class="hljs-keyword">if</span> blobs:<br>        max_blob = find_max(blobs)<br>        lastx = max_blob.cx()<br>        <span class="hljs-comment">#lasty = max_blob.cy()</span><br>        img.draw_cross(max_blob.cx(), max_blob.cy())<br>    blobs2 = img.find_blobs([green_threshold])<br>    <span class="hljs-keyword">if</span> blobs2:<br>        max_blob2 = find_max(blobs2)<br>        lastx2 = max_blob2.cx()<br>        <span class="hljs-comment">#lasty = max_blob.cy()</span><br>        img.draw_cross(max_blob2.cx(), max_blob2.cy())<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;lastx:&quot;</span>,lastx,<span class="hljs-string">&quot;lastx2:&quot;</span>,lastx2)<br>    <span class="hljs-keyword">if</span> lastx != <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> lastx2 != <span class="hljs-number">0</span>:<br>        send_uart(lastx,lastx2)<br>        <br></code></pre></td></tr></table></figure><p>11发的32联合openmv发的坐标值的调整速度的代码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c">diffx = ballx - target_x;      <span class="hljs-comment">//最大色块的中心值和目标值(80)相减</span><br>      diffx = diffx &gt; <span class="hljs-number">40</span>? <span class="hljs-number">40</span> :diffx;<br>      diffx = diffx &lt; <span class="hljs-number">-40</span>? <span class="hljs-number">-40</span> :diffx;<br>      g_ftracingPidOut = PID_realize(&amp;pidpositionx,diffx);<br>      g_ftracingPidOut1 = <span class="hljs-number">0</span> + g_ftracingPidOut;<span class="hljs-comment">//主要还是原地的移动，保持在视线的中心</span><br>      g_ftracingPidOut2 = <span class="hljs-number">0</span> - g_ftracingPidOut;<br>      <span class="hljs-keyword">if</span> (g_ftracingPidOut1 &gt; <span class="hljs-number">2.7f</span>) g_ftracingPidOut1 = <span class="hljs-number">2.7f</span>;<br>      <span class="hljs-keyword">if</span> (g_ftracingPidOut1 &lt; <span class="hljs-number">-2.7f</span>) g_ftracingPidOut1 = <span class="hljs-number">-2.7f</span>;<br>      <span class="hljs-keyword">if</span> (g_ftracingPidOut2 &gt; <span class="hljs-number">2.7f</span>) g_ftracingPidOut2 = <span class="hljs-number">2.7f</span>;<br>      <span class="hljs-keyword">if</span> (g_ftracingPidOut2 &lt; <span class="hljs-number">-2.7f</span>) g_ftracingPidOut2 = <span class="hljs-number">-2.7f</span>;<br>      motorPidSetSpeed(g_ftracingPidOut1,g_ftracingPidOut2);<br>      HAL_Delay(<span class="hljs-number">5</span>);<span class="hljs-comment">//非常的重要！！！！！！！</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>25-4-19</title>
    <link href="/2025/04/19/25-4-19/"/>
    <url>/2025/04/19/25-4-19/</url>
    
    <content type="html"><![CDATA[<h1 id="一、校赛（5-4截止）"><a href="#一、校赛（5-4截止）" class="headerlink" title="一、校赛（5.4截止）"></a>一、校赛（5.4截止）</h1><h2 id="1-第一块板子"><a href="#1-第一块板子" class="headerlink" title="1.第一块板子"></a>1.第一块板子</h2><p>​11画了板子，but 输出不了3.3V，且一个串口和要用到的TIM冲突了（他看错了吗），本来觉得没问题，但openmv需要3.3V供电，陈你怎么没发现啊。总之现在用模块输出。</p><p>​地图到了我才发现。陈在搞摄像头。串口那个代码太复杂了，我之后看下蓝桥杯的串口改一下，变量名也太长。</p><p>​昨天今天看了PID，江科大讲的还挺细。</p><p>​但是目前还不知道之后的代码怎么写，看陈那边的摄像头如何吧，能识别拐弯的话应该能轻松一点。</p><h2 id="2-第二块板子"><a href="#2-第二块板子" class="headerlink" title="2.第二块板子"></a>2.第二块板子</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/04/19/hello-world/"/>
    <url>/2025/04/19/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
