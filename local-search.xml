<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>25-4-30</title>
    <link href="/2025/04/30/25-4-30/"/>
    <url>/2025/04/30/25-4-30/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><h1 id="今日份"><a href="#今日份" class="headerlink" title="今日份"></a>今日份</h1><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>MX里面配置不好会锁芯片，导致识别不到st-link，下一次程序就会锁。</p><p>首先，和上次一样，可以用flymcu软件通过串口下载解锁，but注意boot引脚，对于stm32c8t6</p><ul><li>运行模式：BOOT 0为0，BOOT 1为0</li><li>烧写模式：BOOT 0为1，BOOT 1为0</li></ul><p>所以要改一个boot引脚。</p><p>其次，这次遇到的问题是System Core -&gt; SYS里Debug要把Serial Wire勾上。不勾就有问题，网上也有这么解释的，不过目前还不清楚外什么F407可以不勾。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>25-4-28</title>
    <link href="/2025/04/28/25-4-28/"/>
    <url>/2025/04/28/25-4-28/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><h1 id="今日份"><a href="#今日份" class="headerlink" title="今日份"></a>今日份</h1><p>主函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br>  &#123;   <br>      <span class="hljs-keyword">if</span>(x!=<span class="hljs-number">1</span>&amp;&amp;t==<span class="hljs-number">0</span>)<br>           Load(<span class="hljs-number">13</span>,<span class="hljs-number">10</span>);<br>      <span class="hljs-keyword">if</span>(x==<span class="hljs-number">1</span>)&#123;<br>          out2 = PID_realize2(&amp;pidHW_Tracking,r) ;<br>          Load(<span class="hljs-number">20</span>-out2,<span class="hljs-number">20</span>+out2);<br>      &#125;<br>      <span class="hljs-keyword">if</span>(t==<span class="hljs-number">1</span>)&#123;<br>          p_cnt++;<br>      Load(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>      HAL_Delay(<span class="hljs-number">500</span>);<br>          t=<span class="hljs-number">0</span>;<br>      &#125;<br>      <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData==<span class="hljs-number">0x00</span>&amp;&amp;x==<span class="hljs-number">1</span>)&#123;<br>         <br>          <span class="hljs-keyword">if</span>(p_cnt!=<span class="hljs-number">6</span>&amp;&amp;p_cnt!=<span class="hljs-number">12</span>)&#123;<br>              <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> q=<span class="hljs-number">450</span>;q&gt;<span class="hljs-number">0</span>;q--)&#123;<br>                  HAL_Delay(<span class="hljs-number">1</span>);<br>                  Load(<span class="hljs-number">20</span>,<span class="hljs-number">14</span>);<br>              <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>)&#123;<span class="hljs-keyword">break</span>;&#125;&#125;<br>          Load(<span class="hljs-number">15</span>,<span class="hljs-number">-15</span>);<br>           <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>          &#123;<br>              HAL_Delay(<span class="hljs-number">1</span>);<br>              <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>)&#123;<span class="hljs-keyword">break</span>;&#125;<br>          &#125;<br>          &#125;<br>          <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(p_cnt==<span class="hljs-number">6</span>)<br>          &#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> q=<span class="hljs-number">450</span>;q&gt;<span class="hljs-number">0</span>;q--)<br>              &#123;<br>                  HAL_Delay(<span class="hljs-number">1</span>);<br>                  Load(<span class="hljs-number">20</span>,<span class="hljs-number">14</span>);<br>                  <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>)&#123;b=<span class="hljs-number">1</span>;<span class="hljs-keyword">break</span>;&#125;<br>                  b=<span class="hljs-number">0</span>;<br>              &#125;<br>              <span class="hljs-keyword">if</span>(b==<span class="hljs-number">0</span>)&#123;<br>              turn(<span class="hljs-number">270</span>);<br>              Load(<span class="hljs-number">20</span>,<span class="hljs-number">20</span>);<br>               HAL_Delay(<span class="hljs-number">1000</span>);<br>              turn(<span class="hljs-number">0</span>);<br>              x=<span class="hljs-number">0</span>;&#125;<br>          &#125;<br>      &#125;<br>  <span class="hljs-keyword">if</span>(rx3 == <span class="hljs-number">0x11</span>||p_cnt == <span class="hljs-number">12</span>)&#123;<br>  Load(<span class="hljs-number">15</span>,<span class="hljs-number">15</span>);<br>  turn(<span class="hljs-number">270</span>);<br>  Load(<span class="hljs-number">15</span>,<span class="hljs-number">15</span>);<br>          HAL_Delay(<span class="hljs-number">320</span>);<br>  turn(<span class="hljs-number">0</span>);<br>  <br>  Load(<span class="hljs-number">20</span>,<span class="hljs-number">20</span>);<br>  HAL_Delay(<span class="hljs-number">4000</span>);<br>  stop = <span class="hljs-number">1</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span>(stop == <span class="hljs-number">1</span>)&#123;<br>  <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)&#123;<br>  Load(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>  &#125;<br>  &#125;<br>    <span class="hljs-comment">/* USER CODE END WHILE */</span><br><br>    <span class="hljs-comment">/* USER CODE BEGIN 3 */</span><br>  &#125;<br></code></pre></td></tr></table></figure><p>或者后面写</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">if</span>(rx3 == <span class="hljs-number">0x62</span>||p_cnt == <span class="hljs-number">12</span>)&#123;<br>  Load(<span class="hljs-number">15</span>,<span class="hljs-number">15</span>);<br>  turn(<span class="hljs-number">270</span>);<br>  Load(<span class="hljs-number">15</span>,<span class="hljs-number">15</span>);<br>          HAL_Delay(<span class="hljs-number">300</span>);<br>  turn(<span class="hljs-number">0</span>);<br>  my_uwTick = uwTick;<span class="hljs-comment">//打点在line函数里判断</span><br>  line(<span class="hljs-number">0</span>);<br>  stop = <span class="hljs-number">1</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span>(stop == <span class="hljs-number">1</span>)&#123;<br>  <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)&#123;<br>  Load(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>  &#125;<br>  &#125;<br></code></pre></td></tr></table></figure><p>走直线和转向</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">void</span> <span class="hljs-title function_">line</span><span class="hljs-params">(<span class="hljs-type">float</span> du)</span><br>&#123;<br>  pidMPU6050YawMovement.target_val=du;<br>  <span class="hljs-keyword">if</span>(pidMPU6050YawMovement.target_val&gt;<span class="hljs-number">360</span>)pidMPU6050YawMovement.target_val-=<span class="hljs-number">360</span>;<br>  <span class="hljs-keyword">if</span>(pidMPU6050YawMovement.target_val&lt;<span class="hljs-number">0</span>)pidMPU6050YawMovement.target_val+=<span class="hljs-number">360</span>;<br> <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>) <br> &#123;<br>  HAL_UART_Receive_IT(&amp;huart4,&amp;rx4,<span class="hljs-number">1</span>);<br>  <span class="hljs-keyword">if</span>(pidMPU6050YawMovement.target_val&lt;<span class="hljs-number">10</span>)<br>  &#123;<br><span class="hljs-keyword">if</span>(jiaoz&gt;<span class="hljs-number">350</span>)  jiaoz-=<span class="hljs-number">360</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span>(pidMPU6050YawMovement.target_val&gt;<span class="hljs-number">350</span>)<br>  &#123;<br><span class="hljs-keyword">if</span>(jiaoz&lt;<span class="hljs-number">10</span>)  jiaoz+=<span class="hljs-number">360</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span>(pidMPU6050YawMovement.target_val==<span class="hljs-number">0</span>&amp;&amp;jiaoz&gt;<span class="hljs-number">300</span>)jiaoz-=<span class="hljs-number">360</span>;<br>  out1 = PID_realize2(&amp;pidMPU6050YawMovement,jiaoz);<br>  Load(<span class="hljs-number">20</span>-out1,<span class="hljs-number">20</span>+out1);<br> &#125;<br>&#125;<br><span class="hljs-type">void</span> <span class="hljs-title function_">turn</span><span class="hljs-params">(<span class="hljs-type">float</span> du)</span><br>&#123;<br>  pidMPU6050YawMovement.target_val=du;<span class="hljs-comment">//jiaoz + </span><br>  <span class="hljs-keyword">if</span>(pidMPU6050YawMovement.target_val&gt;<span class="hljs-number">360</span>)pidMPU6050YawMovement.target_val-=<span class="hljs-number">360</span>;<br>  <span class="hljs-keyword">if</span>(pidMPU6050YawMovement.target_val&lt;<span class="hljs-number">0</span>)pidMPU6050YawMovement.target_val+=<span class="hljs-number">360</span>;<br> <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>) <br> &#123;<br>    <span class="hljs-keyword">if</span>(pidMPU6050YawMovement.target_val&lt;<span class="hljs-number">10</span>)<br>     &#123;<br>   <span class="hljs-keyword">if</span>(jiaoz&gt;<span class="hljs-number">350</span>)  jiaoz-=<span class="hljs-number">360</span>;<br>     &#125;<br>    <span class="hljs-keyword">if</span>(pidMPU6050YawMovement.target_val&gt;<span class="hljs-number">350</span>)<br>    &#123;<br>    <span class="hljs-keyword">if</span>(jiaoz&lt;<span class="hljs-number">10</span>)  jiaoz+=<span class="hljs-number">360</span>;<br>    &#125;<br>  HAL_UART_Receive_IT(&amp;huart4,&amp;rx4,<span class="hljs-number">1</span>);<br>  <span class="hljs-keyword">if</span>(pidMPU6050YawMovement.target_val==<span class="hljs-number">0</span>&amp;&amp;jiaoz&gt;<span class="hljs-number">300</span>)jiaoz-=<span class="hljs-number">360</span>;<br>  out1 = PID_realize2(&amp;pidMPU6050YawMovement,jiaoz);<br>  Load(-out1,out1);<br>      <span class="hljs-keyword">if</span>(jiaoz&gt;pidMPU6050YawMovement.target_val<span class="hljs-number">-5</span>&amp;&amp;jiaoz&lt;pidMPU6050YawMovement.target_val+<span class="hljs-number">5</span>)  &#123;pidMPU6050YawMovement.err_sum=<span class="hljs-number">0.0</span>;<span class="hljs-keyword">break</span>;&#125;<br> &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>25-4-27</title>
    <link href="/2025/04/27/25-4-27/"/>
    <url>/2025/04/27/25-4-27/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><h1 id="今日份"><a href="#今日份" class="headerlink" title="今日份"></a>今日份</h1><p>小车后面转弯要用到陀螺仪。<br>陀螺仪JY61P，去年电赛M0用到过的代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">void</span> <span class="hljs-title function_">UART_JY61P_INST_IRQHandler</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>    getdata[cnt]=DL_UART_Main_receiveData(UART_JY61P_INST);<br>    <span class="hljs-keyword">if</span>(getdata[<span class="hljs-number">0</span>]==<span class="hljs-number">0x53</span>)<br>    &#123;<br>        cnt++;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(cnt==<span class="hljs-number">10</span>)<br>    &#123;<br>        NVIC_DisableIRQ(UART_JY61P_INST_INT_IRQN);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">uint8_t</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">3</span>;j++)=(((<span class="hljs-type">short</span>) getdata[<span class="hljs-number">2</span>+j*<span class="hljs-number">2</span>]&lt;&lt;<span class="hljs-number">8</span>)|getdata[<span class="hljs-number">1</span>+j*<span class="hljs-number">2</span>])/<span class="hljs-number">182</span>; <br>        NVIC_ClearPendingIRQ(UART_JY61P_INST_INT_IRQN);<br>        NVIC_EnableIRQ(UART_JY61P_INST_INT_IRQN);<br>        cnt=<span class="hljs-number">0</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>网上搜的 WT61C-TTL 陀螺仪的代码，可以用。陀螺仪上电后默认一直发数据包，分别是加速度，角速度和角度，角度范围是-180–180。这个代码是解析数据包读出角度，小车要用到的是偏航角，即xyz[2]。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">uint8_t</span> rx4;<br><span class="hljs-keyword">if</span>( huart==&amp;huart4)<br>&#123;<br><span class="hljs-type">static</span> <span class="hljs-type">uint8_t</span> i = <span class="hljs-number">0</span>;<br><span class="hljs-type">static</span> <span class="hljs-type">int16_t</span> buff[<span class="hljs-number">8</span>]; <br>buff[i++] = rx4;<br><span class="hljs-keyword">if</span>((i == <span class="hljs-number">1</span>) &amp;&amp; (buff[<span class="hljs-number">0</span>] != <span class="hljs-number">0x55</span>))<br>&#123;<br>i = <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">if</span>((i == <span class="hljs-number">2</span>) &amp;&amp; (buff[<span class="hljs-number">1</span>] != <span class="hljs-number">0x53</span>))<br>&#123;<br>i = <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(i == <span class="hljs-number">8</span>)<br>&#123;<br><span class="hljs-type">int16_t</span> value_x = (buff[<span class="hljs-number">3</span>] &lt;&lt; <span class="hljs-number">8</span>) | buff[<span class="hljs-number">2</span>];<br><span class="hljs-type">int16_t</span> value_y = (buff[<span class="hljs-number">5</span>] &lt;&lt; <span class="hljs-number">8</span>) | buff[<span class="hljs-number">4</span>];<br><span class="hljs-type">int16_t</span> value_z = (buff[<span class="hljs-number">7</span>] &lt;&lt; <span class="hljs-number">8</span>) | buff[<span class="hljs-number">6</span>];<br>xyz[<span class="hljs-number">0</span>] = (<span class="hljs-type">float</span>)value_x / <span class="hljs-number">32768</span>* <span class="hljs-number">180</span> ;<br>xyz[<span class="hljs-number">1</span>] = (<span class="hljs-type">float</span>)value_y/ <span class="hljs-number">32768</span>* <span class="hljs-number">180</span>;<br>xyz[<span class="hljs-number">2</span>] = (<span class="hljs-type">float</span>)value_z / <span class="hljs-number">32768</span>* <span class="hljs-number">180</span>;<br>                <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.1f,%.1f,%.1f\r\n&quot;</span>,xyz[<span class="hljs-number">0</span>],xyz[<span class="hljs-number">1</span>],xyz[<span class="hljs-number">2</span>]);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">8</span>; j++)<br>&#123;<br>buff[j] = <span class="hljs-number">0</span>;<br>&#125;<br>i = <span class="hljs-number">0</span>;<br>&#125;<br>HAL_UART_Receive_IT(&amp;huart4,&amp;rx4,<span class="hljs-number">1</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>资料的网址</p><p><a href="https://wit-motion.yuque.com/wumwnr/ltst03/wegquy#Ge5Fv">WT61协议</a></p><p>下面插一点图片</p><img src="01.jpg" alt="小车" width="400" height="400"/>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>25-4-26</title>
    <link href="/2025/04/26/25-4-26/"/>
    <url>/2025/04/26/25-4-26/</url>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><h1 id="今日份"><a href="#今日份" class="headerlink" title="今日份"></a>今日份</h1><p>总算是有点进展了捏，把第二个摄像头安上去了,安在了第一个的上面。</p><p>也可以扫到二维码<br>c很好</p><p>不愧是能进到06的人啊</p><p>废话不多说</p><p>二维码可以扫，每扫到变化的二维码就发数字给单片机，用串口3接收，本来要用数据包，but有问题，每次只能隔一个接收。算了，后来换成只发单个数据了，单片机接收的很好。</p><p>去吃晚饭前的代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br>  &#123;<br>  <span class="hljs-keyword">if</span>(x!=<span class="hljs-number">1</span>)<br>   Load(<span class="hljs-number">10</span>,<span class="hljs-number">10</span>);<br>  <span class="hljs-keyword">if</span>(x==<span class="hljs-number">1</span>&amp;&amp;t==<span class="hljs-number">0</span>)&#123;<br>  out1 = PID_realize2(&amp;pidHW_Tracking,s) ;<br>  Load(<span class="hljs-number">20</span>-out1,<span class="hljs-number">20</span>+out1);<br>  &#125;<br>  <span class="hljs-keyword">if</span>(t==<span class="hljs-number">1</span>)&#123;<br>  Load(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>  HAL_Delay(<span class="hljs-number">500</span>);<br>  t=<span class="hljs-number">0</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData==<span class="hljs-number">0x00</span>&amp;&amp;x==<span class="hljs-number">1</span>)&#123;<br>  HAL_Delay(<span class="hljs-number">800</span>);<br>  Load(<span class="hljs-number">15</span>,<span class="hljs-number">-15</span>);<br>  <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>  &#123;<br>  HAL_Delay(<span class="hljs-number">1</span>);<br>  <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>)&#123;<span class="hljs-keyword">break</span>;&#125;<br>  &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>只要开始循迹x就会变为1，识别到新的二维码的话t变1，t每次变1就停500ms，并清零t。</p><p>摄像头循迹代码还是换了之前的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sensor, image, time,math,machine<br><span class="hljs-keyword">from</span> pyb <span class="hljs-keyword">import</span> UART<br><span class="hljs-keyword">from</span> vl53l1x <span class="hljs-keyword">import</span> VL53L1X<br><span class="hljs-keyword">from</span> pyb <span class="hljs-keyword">import</span> LED<br><br>uart = UART(<span class="hljs-number">3</span>, <span class="hljs-number">115200</span>)<br>green_led = LED(<span class="hljs-number">2</span>)<br>sensor.reset()<br>sensor.set_pixformat(sensor.RGB565)<br><span class="hljs-comment"># 关闭自动白平衡</span><br>sensor.set_auto_exposure(<span class="hljs-literal">False</span>)<br>sensor.set_auto_whitebal(<span class="hljs-literal">False</span>)<br>sensor.set_auto_gain(<span class="hljs-literal">False</span>)<br>sensor.set_framesize(sensor.QQVGA)<br>sensor.skip_frames(<span class="hljs-number">10</span>)<br>clock = time.clock()<br><br>red_threshold=(<span class="hljs-number">0</span>, <span class="hljs-number">86</span>, <span class="hljs-number">5</span>, <span class="hljs-number">49</span>, <span class="hljs-number">5</span>, <span class="hljs-number">68</span>)<br>green_threshold=(<span class="hljs-number">43</span>, <span class="hljs-number">100</span>, -<span class="hljs-number">35</span>, -<span class="hljs-number">128</span>, <span class="hljs-number">11</span>, <span class="hljs-number">127</span>)<br>lastx = <span class="hljs-number">0</span><br>lastx2 = <span class="hljs-number">0</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sending_data3</span>(<span class="hljs-params">x</span>):<br>    FH = <span class="hljs-built_in">bytearray</span>([x])<br>    uart.write(FH);<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">send_uart</span>(<span class="hljs-params">deflection_angle,deflection_angle2</span>):<br>    sending_data3(<span class="hljs-number">0xA5</span>)<br>    time.sleep_ms(<span class="hljs-number">5</span>)<br>    sending_data3(deflection_angle)<br>    time.sleep_ms(<span class="hljs-number">5</span>)<br>    sending_data3(deflection_angle2)<br>    time.sleep_ms(<span class="hljs-number">5</span>)<br>    sending_data3(<span class="hljs-number">0x5B</span>)<br>    time.sleep_ms(<span class="hljs-number">5</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">find_max</span>(<span class="hljs-params">blobs</span>):<br>    max_size=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> blob <span class="hljs-keyword">in</span> blobs:<br>        <span class="hljs-keyword">if</span> blob[<span class="hljs-number">2</span>]*blob[<span class="hljs-number">3</span>] &gt; max_size:<br>            max_blob=blob<br>            max_size = blob[<span class="hljs-number">2</span>]*blob[<span class="hljs-number">3</span>]<br>    <span class="hljs-keyword">return</span> max_blob<br><br><span class="hljs-keyword">while</span>(<span class="hljs-literal">True</span>):<br>    clock.tick()<br>    img = sensor.snapshot()<br>    green_led.on()<br>    blobs = img.find_blobs([red_threshold])<br>    <span class="hljs-keyword">if</span> blobs:<br>        max_blob = find_max(blobs)<br>        lastx = max_blob.cx()<br>        <span class="hljs-comment">#lasty = max_blob.cy()</span><br>        img.draw_cross(max_blob.cx(), max_blob.cy())<br>        lastx=lastx-<span class="hljs-number">120</span>;<br>        d = <span class="hljs-string">&quot;%d&quot;</span> %(lastx)<br>        uart.write(<span class="hljs-string">&#x27;a&#x27;</span>);<br>        uart.write(<span class="hljs-string">&#x27;b&#x27;</span>);<br>        uart.write(d);<br>        uart.write(<span class="hljs-string">&#x27;e&#x27;</span>);<br>    <span class="hljs-keyword">else</span>:<br>        sending_data3(<span class="hljs-number">0x00</span>)<br><br>    blobs2 = img.find_blobs([green_threshold])<br>    <span class="hljs-keyword">if</span> blobs2:<br>        max_blob2 = find_max(blobs2)<br>        lastx2 = max_blob2.cx()<br>        <span class="hljs-comment">#lasty = max_blob.cy()</span><br>        img.draw_cross(max_blob2.cx(), max_blob2.cy())<br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;lastx:&quot;</span>,lastx,<span class="hljs-string">&quot;lastx2:&quot;</span>,lastx2)<br><br></code></pre></td></tr></table></figure><p>发x坐标 - 120</p><p>下面是稍微改了一点点的识别二维码的代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 二维码识别示例</span><br><span class="hljs-keyword">import</span> sensor, image, time<br><span class="hljs-keyword">from</span> machine <span class="hljs-keyword">import</span> UART <span class="hljs-comment">#引入串口模块</span><br>sensor.reset()<br>sensor.set_pixformat(sensor.GRAYSCALE)<br>sensor.set_framesize(sensor.VGA)<br>sensor.set_windowing((<span class="hljs-number">480</span>, <span class="hljs-number">480</span>)) <span class="hljs-comment"># 看VGA分辨率中间的240x240像素。</span><br>sensor.skip_frames(<span class="hljs-number">30</span>)<br>sensor.set_auto_gain(<span class="hljs-literal">False</span>)  <span class="hljs-comment"># 必须关闭此功能，以防止图像冲洗…</span><br><br>uart = UART(<span class="hljs-number">3</span>, <span class="hljs-number">115200</span>)<br>clock = time.clock()<br>last_payload = <span class="hljs-literal">None</span>  <span class="hljs-comment"># 用来保存上一次识别到的二维码内容</span><br>THRESHOLD = (<span class="hljs-number">0</span>, <span class="hljs-number">120</span>)  <span class="hljs-comment"># 可以根据具体情况调整阈值，0 是黑色，100 是白色</span><br><span class="hljs-keyword">while</span>(<span class="hljs-literal">True</span>):<br>    clock.tick()<br>    img = sensor.snapshot()<br>   <span class="hljs-comment"># for code in img.find_qrcodes():</span><br>    <span class="hljs-comment">#    print(code)</span><br>    <span class="hljs-comment">#img.binary([THRESHOLD])  # 对图像进行二值化处理</span><br>    codes = img.find_qrcodes()<br>    <span class="hljs-keyword">if</span> codes:<br>        payload = codes[<span class="hljs-number">0</span>].payload()  <span class="hljs-comment"># 假设只识别一个二维码</span><br>        <span class="hljs-keyword">if</span> payload != last_payload:<br>            last_payload = payload<br>            <span class="hljs-built_in">print</span>(payload)<br>            <span class="hljs-keyword">if</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/RlYaaoM/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;1&quot;</span>:<br>                out = <span class="hljs-string">&quot;1&quot;</span><br>                uart.write(out)<br>                time.sleep_ms(<span class="hljs-number">50</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/bDNqqqx/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;2&quot;</span>:<br>                out = <span class="hljs-string">&quot;2&quot;</span><br>                uart.write(out)<br>                time.sleep_ms(<span class="hljs-number">50</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/RMkwwwj/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;3&quot;</span>:<br>                out = <span class="hljs-string">&quot;3&quot;</span><br>                uart.write(out)<br>                time.sleep_ms(<span class="hljs-number">50</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/Ay4eeeX/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;4&quot;</span>:<br>                out = <span class="hljs-string">&quot;4&quot;</span><br>                uart.write(out)<br>                time.sleep_ms(<span class="hljs-number">50</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/O8eDDDV/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;5&quot;</span>:<br>                out = <span class="hljs-string">&quot;5&quot;</span><br>                uart.write(out)<br>                time.sleep_ms(<span class="hljs-number">50</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/O9Dmmmy/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;6&quot;</span>:<br>                out = <span class="hljs-string">&quot;6&quot;</span><br>                uart.write(out)<br>                time.sleep_ms(<span class="hljs-number">50</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/OdB888K/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;7&quot;</span>:<br>                out = <span class="hljs-string">&quot;7&quot;</span><br>                uart.write(out)<br>                time.sleep_ms(<span class="hljs-number">50</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AGwdddv/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;8&quot;</span>:<br>                out = <span class="hljs-string">&quot;8&quot;</span><br>                uart.write(out)<br>                time.sleep_ms(<span class="hljs-number">50</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AQp7778/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;9&quot;</span>:<br>                out = <span class="hljs-string">&quot;9&quot;</span><br>                uart.write(out)<br>                time.sleep_ms(<span class="hljs-number">50</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/R4e222J/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;10&quot;</span>:<br>                out = <span class="hljs-string">&quot;10&quot;</span><br>                uart.write(out)<br>                time.sleep_ms(<span class="hljs-number">50</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AV8YYYN/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;11&quot;</span>:<br>                out = <span class="hljs-string">&quot;11&quot;</span><br>                uart.write(out)<br>                time.sleep_ms(<span class="hljs-number">50</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AxqWWWQ/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;12&quot;</span>:<br>                out = <span class="hljs-string">&quot;12&quot;</span><br>                uart.write(out)<br>                time.sleep_ms(<span class="hljs-number">50</span>)<br><br></code></pre></td></tr></table></figure><h1 id="其他事件"><a href="#其他事件" class="headerlink" title="其他事件"></a>其他事件</h1><p>li_wan_ling过来问我FPGA相关的，算是一无所知然后在tb里面连线？相当复杂来着，东西是集创赛里的。</p><p>我没找出问题，不过嘛,没问题才奇怪吧，她很多没改直接copy，axi_uart模块好多引脚直接接地了，总之最终输出波形为0，任重而道远啊，下面把部分代码贴出来</p><p><a href="./files/1.pdf">点击这里查看完整文档</a></p><p>tb里的</p><details> <summary><font size="4" color="orange">Show Code</font></summary> <pre><code class="language-cpp">`timescale 1ns / 1ps`include "config.h"<p><code>define UART_PSEL               u_soc_top.u_axi_uart_controller.uart0.PSEL </code>define UART_PENBLE             u_soc_top.u_axi_uart_controller.uart0.PENABLE<br><code>define UART_PWRITE             u_soc_top.u_axi_uart_controller.uart0.PWRITE </code>define UART_WADDR              u_soc_top.u_axi_uart_controller.uart0.PADDR[7:0]<br>&#96;define UART_WDATA              u_soc_top.u_axi_uart_controller.uart0.PWDATA[7:0]</p><p>module tb_top( );<br>reg reset;<br>reg clk;<br>reg   [3:0]  touch_btn;<br>reg   [31:0]  dip_sw;</p><p>wire         UART_RX;<br>wire         UART_TX;<br>wire  [2:0]  video_red;<br>wire  [2:0]  video_green;<br>wire  [1:0]  video_blue;<br>wire  video_hsync;<br>wire  video_vsync;<br>wire  video_clk;<br>wire  video_de;<br>wire  [15:0]  leds;<br>wire  [7:0]  dpy0;<br>wire  [7:0]  dpy1;<br>wire  [19:0]  base_ram_addr;<br>wire  [ 3:0]  base_ram_be_n;<br>wire  base_ram_ce_n;<br>wire  base_ram_oe_n;<br>wire  base_ram_we_n;<br>wire  [19:0]  ext_ram_addr;<br>wire  [ 3:0]  ext_ram_be_n;<br>wire  ext_ram_ce_n;<br>wire  ext_ram_oe_n;<br>wire  ext_ram_we_n;<br>wire  [31:0]  base_ram_data;<br>wire  [31:0]  ext_ram_data;</p><p>initial<br>begin<br>    clk &#x3D; 1’b0;<br>    reset &#x3D; 1’b1;<br>    dip_sw &#x3D; 32’h0;<br>    #2000;<br>    reset &#x3D; 1’b0;<br>end<br>always #10 clk&#x3D;~clk;</p><p>initial<br>begin<br>    touch_btn &#x3D; 4’h0;<br>    dip_sw    &#x3D; 32’h0000_abcd;</p><pre><code class="hljs">#3000000;#100000touch_btn = 4&#39;b0001;#50touch_btn = 4&#39;b0000;#100000touch_btn = 4&#39;b0010;#50touch_btn = 4&#39;b0000;#100000touch_btn = 4&#39;b0100;#50touch_btn = 4&#39;b0000;#100000touch_btn = 4&#39;b1000;#50touch_btn = 4&#39;b0000;</code></pre><p>end</p><p>soc_top  #(.SIMULATION(1’b1)) u_soc_top (<br>    .clk                     ( clk           ),<br>    .reset                   ( reset         ),<br>    .touch_btn               ( touch_btn     ),<br>    .dip_sw                  ( dip_sw        ),</p><pre><code class="hljs">.video_red               ( video_red     ),.video_green             ( video_green   ),.video_blue              ( video_blue    ),.video_hsync             ( video_hsync   ),.video_vsync             ( video_vsync   ),.video_clk               ( video_clk     ),.video_de                ( video_de      ),.leds                    ( leds          ),.dpy0                    ( dpy0          ),.dpy1                    ( dpy1          ),.base_ram_addr           ( base_ram_addr   ),.base_ram_be_n           ( base_ram_be_n   ),.base_ram_ce_n           ( base_ram_ce_n   ),.base_ram_oe_n           ( base_ram_oe_n   ),.base_ram_we_n           ( base_ram_we_n   ),.ext_ram_addr            ( ext_ram_addr    ),.ext_ram_be_n            ( ext_ram_be_n    ),.ext_ram_ce_n            ( ext_ram_ce_n    ),.ext_ram_oe_n            ( ext_ram_oe_n    ),.ext_ram_we_n            ( ext_ram_we_n    ),.base_ram_data           ( base_ram_data   ),.ext_ram_data            ( ext_ram_data    ),.UART_RX                 ( UART_RX       ),.UART_TX                 ( UART_TX       )</code></pre><p>);</p><p>&#x2F;&#x2F;模拟串口打印<br>wire uart_display;<br>wire [7:0] uart_data;<br>wire uart_wen;<br>assign uart_wen &#x3D; (<code>UART_PSEL == 1&#39;b1) &amp;&amp;  (</code>UART_PENBLE &#x3D;&#x3D; 1’b1) &amp;&amp; (<code>UART_PWRITE == 1&#39;b1); assign uart_display = (uart_wen == 1&#39;b1) &amp;&amp; (</code>UART_WADDR &#x3D;&#x3D; 8’h0);<br>assign uart_data    &#x3D; &#96;UART_WDATA;</p><p>always @(posedge clk)<br>begin<br>    if(uart_display)<br>    begin<br>        if(uart_data&#x3D;&#x3D;8’hff)<br>        begin<br>            ;&#x2F;&#x2F;$finish;<br>        end<br>        else<br>        begin<br>            $write(“%c”,uart_data);<br>        end<br>    end<br>end</p><p>sram_sp #(<br>    .AW        ( 18     ),<br>    .Init_File(&#96;SRAM_Init_File))<br>base_sram_sp (<br>    .ram_addr                ( base_ram_addr   ),<br>    .ram_be_n                ( base_ram_be_n   ),<br>    .ram_ce_n                ( base_ram_ce_n   ),<br>    .ram_oe_n                ( base_ram_oe_n   ),<br>    .ram_we_n                ( base_ram_we_n   ),</p><pre><code class="hljs">.ram_data                ( base_ram_data   )</code></pre><p>);</p><p>sram_sp #(<br>    .AW        ( 18     ),<br>    .Init_File(&#96;SRAM_Init_File))<br>ext_sram_sp (<br>    .ram_addr                ( ext_ram_addr   ),<br>    .ram_be_n                ( ext_ram_be_n   ),<br>    .ram_ce_n                ( ext_ram_ce_n   ),<br>    .ram_oe_n                ( ext_ram_oe_n   ),<br>    .ram_we_n                ( ext_ram_we_n   ),</p><pre><code class="hljs">.ram_data                ( ext_ram_data   )</code></pre><p>);</p><p>endmodule</code><br></pre> </details>    </p><p>soc_top的</p><details> <summary><font size="4" color="orange">Show Code</font></summary> <pre><code class="language-cpp">`include "config.h"module soc_top #(    parameter SIMULATION = 1'b0) (    input clk,  //50MHz 时钟输入    input reset,  //BTN6手动复位按钮开关，带消抖电路，按下时为1    //图像输出信号    output [2:0] video_red,  //红色像素，3位    output [2:0] video_green,  //绿色像素，3位    output [1:0] video_blue,  //蓝色像素，2位    output video_hsync,  //行同步（水平同步）信号    output video_vsync,  //场同步（垂直同步）信号    output video_clk,  //像素时钟输出    output video_de,  //行数据有效信号，用于区分消隐区    input clock_btn,  //BTN5手动时钟按钮开关，带消抖电路，按下时为1    input [3:0] touch_btn,  //BTN1~BTN4，按钮开关，按下时为1    input [31:0] dip_sw,  //32位拨码开关，拨到“ON”时为1    output [15:0] leds,  //16位LED，输出时1点亮    output [7:0] dpy0,  //数码管低位信号，包括小数点，输出1点亮    output [7:0] dpy1,  //数码管高位信号，包括小数点，输出1点亮    //BaseRAM信号    inout [31:0] base_ram_data,  //BaseRAM数据，低8位与CPLD串口控制器共享    output [19:0] base_ram_addr,  //BaseRAM地址    output [ 3:0]   base_ram_be_n,      //BaseRAM字节使能，低有效。如果不使用字节使能，请保持为0    output base_ram_ce_n,  //BaseRAM片选，低有效    output base_ram_oe_n,  //BaseRAM读使能，低有效    output base_ram_we_n,  //BaseRAM写使能，低有效    //ExtRAM信号    inout [31:0] ext_ram_data,  //ExtRAM数据    output [19:0] ext_ram_addr,  //ExtRAM地址    output [ 3:0]   ext_ram_be_n,       //ExtRAM字节使能，低有效。如果不使用字节使能，请保持为0    output ext_ram_ce_n,  //ExtRAM片选，低有效    output ext_ram_oe_n,  //ExtRAM读使能，低有效    output ext_ram_we_n,  //ExtRAM写使能，低有效    //Flash存储器信号，参考 JS28F640 芯片手册    output [22:0] flash_a,  //Flash地址，a0仅在8bit模式有效，16bit模式无意义    inout [15:0] flash_d,  //Flash数据    output flash_rp_n,  //Flash复位信号，低有效    output flash_vpen,  //Flash写保护信号，低电平时不能擦除、烧写    output flash_ce_n,  //Flash片选信号，低有效    output flash_oe_n,  //Flash读使能信号，低有效    output flash_we_n,  //Flash写使能信号，低有效    output          flash_byte_n,       //Flash 8bit模式选择，低有效。在使用flash的16位模式时请设为1    //------uart-------    inout UART_RX,  //串口RX接收    inout UART_TX  //串口TX发送);  wire cpu_clk;  wire cpu_resetn;  wire sys_clk;  wire sys_resetn;  generate    if (SIMULATION) begin : sim_clk      //simulation clk.      reg clk_sim;      initial begin        clk_sim = 1'b0;      end      always #15 clk_sim = ~clk_sim;      assign cpu_clk = clk_sim;      assign sys_clk = clk;      rst_sync u_rst_sys (          .clk(sys_clk),          .rst_n_in(~reset),          .rst_n_out(sys_resetn)      );      rst_sync u_rst_cpu (          .clk(cpu_clk),          .rst_n_in(sys_resetn),          .rst_n_out(cpu_resetn)      );    end else begin : pll_clk      clk_pll u_clk_pll (          .cpu_clk(cpu_clk),          .sys_clk(sys_clk),          .resetn (~reset),          .locked (pll_locked),          .clk_in1(clk)      );      rst_sync u_rst_sys (          .clk(sys_clk),          .rst_n_in(pll_locked),          .rst_n_out(sys_resetn)      );      rst_sync u_rst_cpu (          .clk(cpu_clk),          .rst_n_in(sys_resetn),          .rst_n_out(cpu_resetn)      );    end  endgenerate  //TODO: add your code  //例化OpenLA500处理器核  core_top u_cpu (      //外部中断信号      .intrpt(8'h0),  //high active      .aclk(cpu_clk),      .aresetn(cpu_resetn),  //low active      //读地址通道      .arid(cpu_arid),      .araddr(cpu_araddr),      .arlen(cpu_arlen),      .arsize(cpu_arsize),      .arburst(cpu_arburst),      .arlock(cpu_arlock),      .arcache(cpu_arcache),      .arprot(cpu_arprot),      .arvalid(cpu_arvalid),      .arready(cpu_arready),      //读数据通道      .rid(cpu_rid),      .rdata(cpu_rdata),      .rresp(cpu_rresp),      .rlast(cpu_rlast),      .rvalid(cpu_rvalid),      .rready(cpu_rready),      //写地址通道      .awid(cpu_awid),      .awaddr(cpu_awaddr),      .awlen(cpu_awlen),      .awsize(cpu_awsize),      .awburst(cpu_awburst),      .awlock(cpu_awlock),      .awcache(cpu_awcache),      .awprot(cpu_awprot),      .awvalid(cpu_awvalid),      .awready(cpu_awready),      //写数据通道      .wid(cpu_wid),      .wdata(cpu_wdata),      .wstrb(cpu_wstrb),      .wlast(cpu_wlast),      .wvalid(cpu_wvalid),      .wready(cpu_wready),      //写响应通道      .bid(cpu_bid),      .bresp(cpu_bresp),      .bvalid(cpu_bvalid),      .bready(cpu_bready),      //已弃用      .break_point(1'b0),      .infor_flag(1'b0),      .reg_num(5'b0),      .ws_valid(),      .rf_rdata(),      //写回阶段提供的调试信息      .debug0_wb_pc(debug_wb_pc),      .debug0_wb_inst(debug_wb_inst),      .debug0_wb_rf_wen(debug_wb_rf_wen),      .debug0_wb_rf_wnum(debug_wb_rf_wnum),      .debug0_wb_rf_wdata(debug_wb_rf_wdata)  );  //例化Axi_CDC  Axi_CDC u_Axi_CDC (      .axiInClk (cpu_clk),      .axiInRst (cpu_resetn),      .axiOutClk(sys_clk),      .axiOutRst(sys_clk),      //in      //aw      .axiIn_awvalid(cpu_awvalid),      .axiIn_awready(cpu_awready),      .axiIn_awaddr (cpu_awaddr),      .axiIn_awid   (cpu_awid),      .axiIn_awlen  (cpu_awlen),      .axiIn_awsize (cpu_awsize),      .axiIn_awburst(cpu_awburst),      .axiIn_awlock (cpu_awlock),      .axiIn_awcache(cpu_awcache),      .axiIn_awprot (cpu_awprot),      //w      .axiIn_wvalid(cpu_wvalid),      .axiIn_wready(cpu_wready),      .axiIn_wdata (cpu_wdata),      .axiIn_wstrb (cpu_wstrb),      .axiIn_wlast (cpu_wlast),      //b      .axiIn_bready(cpu_bready),      .axiIn_bvalid(cpu_bvalid),      .axiIn_bid   (cpu_bid),      .axiIn_bresp (cpu_bresp),      //ar      .axiIn_arvalid(cpu_arvalid),      .axiIn_arready(cpu_arready),      .axiIn_araddr (cpu_araddr),      .axiIn_arid   (cpu_arid),      .axiIn_arlen  (cpu_arlen),      .axiIn_arsize (cpu_arsize),      .axiIn_arburst(cpu_arburst),      .axiIn_arlock (cpu_arlock),      .axiIn_arcache(cpu_arcache),      .axiIn_arprot (cpu_arprot),      //r      .axiIn_rvalid(cpu_rvalid),      .axiIn_rready(cpu_rready),      .axiIn_rdata (cpu_rdata),      .axiIn_rid   (cpu_rid),      .axiIn_rresp (cpu_rresp),      .axiIn_rlast (cpu_rlast),      //out      //aw      .axiOut_awvalid(cpu_sync_awvalid),      .axiOut_awready(cpu_sync_awready),      .axiOut_awaddr (cpu_sync_awaddr),      .axiOut_awid   (cpu_sync_awid),      .axiOut_awlen  (cpu_sync_awlen),      .axiOut_awsize (cpu_sync_awsize),      .axiOut_awburst(cpu_sync_awburst),      .axiOut_awlock (cpu_sync_awlock),      .axiOut_awcache(cpu_sync_awcache),      .axiOut_awprot (cpu_sync_awprot),      //w      .axiOut_wvalid(cpu_sync_wvalid),      .axiOut_wready(cpu_sync_wready),      .axiOut_wdata (cpu_sync_wdata),      .axiOut_wstrb (cpu_sync_wstrb),      .axiOut_wlast (cpu_sync_wlast),      //b      .axiOut_bready(cpu_sync_bready),      .axiOut_bvalid(cpu_sync_bvalid),      .axiOut_bid   (cpu_sync_bid),      .axiOut_bresp (cpu_sync_bresp),      //ar      .axiOut_arvalid(cpu_sync_arvalid),      .axiOut_arready(cpu_sync_arready),      .axiOut_araddr (cpu_sync_araddr),      .axiOut_arid   (cpu_sync_arid),      .axiOut_arlen  (cpu_sync_arlen),      .axiOut_arsize (cpu_sync_arsize),      .axiOut_arburst(cpu_sync_arburst),      .axiOut_arlock (cpu_sync_arlock),      .axiOut_arcache(cpu_sync_arcache),      .axiOut_arprot (cpu_sync_arprot),      //r      .axiOut_rvalid(cpu_sync_rvalid),      .axiOut_rready(cpu_sync_rready),      .axiOut_rdata (cpu_sync_rdata),      .axiOut_rid   (cpu_sync_rid),      .axiOut_rresp (cpu_sync_rresp),      .axiOut_rlast (cpu_sync_rlast)  );  //例化AxiCrossbar_1x4  assign axiOut_2_arready = 1'b1;  assign axiOut_2_rid = 5'b0;  assign axiOut_2_rdata = 32'b0;  assign axiOut_2_rresp = 2'b0;  assign axiOut_2_rlast = 1'b0;  assign axiOut_2_rvalid = 1'b0;  assign axiOut_2_awready = 1'b1;  assign axiOut_2_wready = 1'b1;  assign axiOut_2_bid = 5'b0;  assign axiOut_2_bresp = 2'b0;  assign axiOut_2_bvalid = 1'b0;  AxiCrossbar_1x4 u_AxiCrossbar_1x4 (      .clk   (sys_clk),      .resetn(sys_resetn),      //master 0      //aw      .axiIn_awvalid(cpu_sync_awvalid),      .axiIn_awready(cpu_sync_awready),      .axiIn_awaddr (cpu_sync_awaddr),      .axiIn_awid   (cpu_sync_awid),      .axiIn_awlen  (cpu_sync_awlen),      .axiIn_awsize (cpu_sync_awsize),      .axiIn_awburst(cpu_sync_awburst),      .axiIn_awlock (cpu_sync_awlock),      .axiIn_awcache(cpu_sync_awcache),      .axiIn_awprot (cpu_sync_awprot),      //w      .axiIn_wvalid(cpu_sync_wvalid),      .axiIn_wready(cpu_sync_wready),      .axiIn_wdata (cpu_sync_wdata),      .axiIn_wstrb (cpu_sync_wstrb),      .axiIn_wlast (cpu_sync_wlast),      //b      .axiIn_bready(cpu_sync_bread),      .axiIn_bvalid(cpu_sync_bvalid),      .axiIn_bid   (cpu_sync_bid),      .axiIn_bresp (cpu_sync_bresp),      //ar      .axiIn_arvalid(cpu_sync_arvalid),      .axiIn_arready(cpu_sync_arready),      .axiIn_araddr (cpu_sync_araddr),      .axiIn_arid   (cpu_sync_arid),      .axiIn_arlen  (cpu_sync_arlen),      .axiIn_arsize (cpu_sync_arsize),      .axiIn_arburst(cpu_sync_arburst),      .axiIn_arlock (cpu_sync_arlock),      .axiIn_arcache(cpu_sync_arcache),      .axiIn_arprot (cpu_sync_arprot),      //r      .axiIn_rvalid(cpu_sync_rvalid),      .axiIn_rready(cpu_sync_rready),      .axiIn_rdata (cpu_sync_rdata),      .axiIn_rid   (cpu_sync_rid),      .axiIn_rresp (cpu_sync_rresp),      .axiIn_rlast (cpu_sync_rlast),      //slave 0      //aw      .axiOut_0_awvalid(ram_awvalid),      .axiOut_0_awready(ram_awready),      .axiOut_0_awaddr (ram_awaddr),      .axiOut_0_awid   (ram_awid),      .axiOut_0_awlen  (ram_awlen),      .axiOut_0_awsize (ram_awsize),      .axiOut_0_awburst(ram_awburst),      .axiOut_0_awlock (ram_awlock),      .axiOut_0_awcache(ram_awcache),      .axiOut_0_awprot (ram_awprot),      //w      .axiOut_0_wvalid(ram_wvalid),      .axiOut_0_wready(ram_wready),      .axiOut_0_wdata (ram_wdata),      .axiOut_0_wstrb (ram_wstrb),      .axiOut_0_wlast (ram_wlast),      //b      .axiOut_0_bready(ram_bready),      .axiOut_0_bvalid(ram_bvalid),      .axiOut_0_bid   (ram_bid),      .axiOut_0_bresp (ram_bresp),      //ar      .axiOut_0_arvalid(ram_arvalid),      .axiOut_0_arready(ram_arready),      .axiOut_0_araddr (ram_araddr),      .axiOut_0_arid   (ram_arid),      .axiOut_0_arlen  (ram_arlen),      .axiOut_0_arsize (ram_arsize),      .axiOut_0_arburst(ram_arburst),      .axiOut_0_arlock (ram_arlock),      .axiOut_0_arcache(ram_arcache),      .axiOut_0_arprot (ram_arprot),      //r      .axiOut_0_rvalid(ram_rvalid),      .axiOut_0_rready(ram_rready),      .axiOut_0_rdata (ram_rdata),      .axiOut_0_rid   (ram_rid),      .axiOut_0_rresp (ram_rres),      .axiOut_0_rlast (ram_rlast),      //slave1      //aw      .axiOut_1_awvalid(uart_awvalid),      .axiOut_1_awready(uart_awready),      .axiOut_1_awaddr (uart_awaddr),      .axiOut_1_awid   (uart_awid),      .axiOut_1_awlen  (uart_awlen),      .axiOut_1_awsize (uart_awsize),      .axiOut_1_awburst(uart_awburst),      .axiOut_1_awlock (uart_awlock),      .axiOut_1_awcache(uart_awcache),      .axiOut_1_awprot (uart_awprot),      //w      .axiOut_1_wvalid(uart_wvalid),      .axiOut_1_wready(uart_wready),      .axiOut_1_wdata (uart_wdata),      .axiOut_1_wstrb (uart_wstrb),      .axiOut_1_wlast (uart_wlast),      //b      .axiOut_1_bready(uart_bready),      .axiOut_1_bvalid(uart_bvalid),      .axiOut_1_bid   (uart_bid),      .axiOut_1_bresp (uart_bresp),      //ar      .axiOut_1_arvalid(uart_arvalid),      .axiOut_1_arready(uart_arready),      .axiOut_1_araddr (uart_araddr),      .axiOut_1_arid   (uart_arid),      .axiOut_1_arlen  (uart_arlen),      .axiOut_1_arsize (uart_arsize),      .axiOut_1_arburst(uart_arburst),      .axiOut_1_arlock (uart_arlock),      .axiOut_1_arcache(uart_arcache),      .axiOut_1_arprot (uart_arprot),      //r      .axiOut_1_rvalid(uart_rvalid),      .axiOut_1_rready(uart_rready),      .axiOut_1_rdata (uart_rdata),      .axiOut_1_rid   (uart_rid),      .axiOut_1_rresp (uart_rres),      .axiOut_1_rlast (uart_rlast),      //slave3      //aw      .axiOut_3_awvalid(confreg_awvalid),      .axiOut_3_awready(confreg_awready),      .axiOut_3_awaddr (confreg_awaddr),      .axiOut_3_awid   (confreg_awid),      .axiOut_3_awlen  (confreg_awlen),      .axiOut_3_awsize (confreg_awsize),      .axiOut_3_awburst(confreg_awburst),      .axiOut_3_awlock (confreg_awlock),      .axiOut_3_awcache(confreg_awcache),      .axiOut_3_awprot (confreg_awprot),      //w      .axiOut_3_wvalid(confreg_wvalid),      .axiOut_3_wready(confreg_wready),      .axiOut_3_wdata (confreg_wdata),      .axiOut_3_wstrb (confreg_wstrb),      .axiOut_3_wlast (confreg_wlast),      //b      .axiOut_3_bready(confreg_bready),      .axiOut_3_bvalid(confreg_bvalid),      .axiOut_3_bid   (confreg_bid),      .axiOut_3_bresp (confreg_bresp),      //ar      .axiOut_3_arvalid(confreg_arvalid),      .axiOut_3_arready(confreg_arready),      .axiOut_3_araddr (confreg_araddr),      .axiOut_3_arid   (confreg_arid),      .axiOut_3_arlen  (confreg_arlen),      .axiOut_3_arsize (confreg_arsize),      .axiOut_3_arburst(confreg_arburst),      .axiOut_3_arlock (confreg_arlock),      .axiOut_3_arcache(confreg_arcache),      .axiOut_3_arprot (confreg_arprot),      //r      .axiOut_3_rvalid(confreg_rvalid),      .axiOut_3_rready(confreg_rready),      .axiOut_3_rdata (confreg_rdata),      .axiOut_3_rid   (confreg_rid),      .axiOut_3_rresp (confreg_rres),      .axiOut_3_rlast (confreg_rlast)  );  //例化sram  //axi ram  axi_wrap_ram_sp_ext u_axi_ram (      .aclk(sys_clk),      .aresetn(sys_resetn),  //ar .axi_arid ( ram_arid ),      .axi_araddr (ram_araddr),      .axi_arlen  (ram_arlen),      .axi_arsize (ram_arsize),      .axi_arburst(ram_arburst),      .axi_arlock (ram_arlock),      .axi_arcache(ram_arcache),      .axi_arprot (ram_arprot),      .axi_arvalid(ram_arvalid),      .axi_arready(ram_arready),      //r      .axi_rid(ram_rid),      .axi_rdata(ram_rdata),      .axi_rresp(ram_rresp),      .axi_rlast(ram_rlast),      .axi_rvalid(ram_rvalid),      .axi_rready(ram_rready),      //aw      .axi_awid(ram_awid),      .axi_awaddr(ram_awaddr),      .axi_awlen(ram_awlen),      .axi_awsize(ram_awsize),      .axi_awburst(ram_awburst),      .axi_awlock(ram_awlock),      .axi_awcache(ram_awcache),      .axi_awprot(ram_awprot),      .axi_awvalid(ram_awvalid),      .axi_awready(ram_awready),      //w      .axi_wdata (ram_wdata),      .axi_wstrb (ram_wstrb),      .axi_wlast (ram_wlast),      .axi_wvalid(ram_wvalid),      .axi_wready(ram_wready),      //b ram      .axi_bid(ram_bid),      .axi_bresp(ram_bresp),      .axi_bvalid(ram_bvalid),      .axi_bready(ram_bready),      .base_ram_addr(base_ram_addr),      .base_ram_be_n(base_ram_be_n),      .base_ram_ce_n(base_ram_ce_n),      .base_ram_oe_n(base_ram_oe_n),      .base_ram_we_n(base_ram_we_n),      .ext_ram_addr (ext_ram_addr),      .ext_ram_be_n (ext_ram_be_n),      .ext_ram_ce_n (ext_ram_ce_n),      .ext_ram_oe_n (ext_ram_oe_n),      .ext_ram_we_n (ext_ram_we_n),      .base_ram_data(base_ram_data),      .ext_ram_data (ext_ram_data)  );  //例化uart  //uart  wire UART_CTS, UART_RTS;  wire UART_DTR, UART_DSR;  wire UART_RI, UART_DCD;  assign UART_CTS = 1'b0;  assign UART_DSR = 1'b0;  assign UART_DCD = 1'b0;  assign UART_RI  = 1'b0;  wire uart0_int;  wire uart0_txd_o;  wire uart0_txd_i;  wire uart0_txd_oe;  wire uart0_rxd_o;  wire uart0_rxd_i;  wire uart0_rxd_oe;  wire uart0_rts_o;  wire uart0_cts_i;  wire uart0_dsr_i;  wire uart0_dcd_i;  wire uart0_dtr_o;  wire uart0_ri_i;  assign UART_RX = uart0_rxd_oe ? 1'bz : uart0_rxd_o;  assign UART_TX = uart0_txd_oe ? 1'bz : uart0_txd_o;  assign UART_RTS = uart0_rts_o;  assign UART_DTR = uart0_dtr_o;  assign uart0_txd_i = UART_TX;  assign uart0_rxd_i = UART_RX;  assign uart0_cts_i = UART_CTS;  assign uart0_dcd_i = UART_DCD;  assign uart0_dsr_i = UART_DSR;  assign uart0_ri_i = UART_RI;  //UART_CONTROLLER  axi_uart_controller u_axi_uart_controller (      .clk  (sys_clk),      .rst_n(sys_resetn),      .axi_s_awid(uart_awid),      .axi_s_awaddr(uart_awaddr),      .axi_s_awlen(uart_awlen),      .axi_s_awsize(uart_awsize),      .axi_s_awburst(uart_awburst),      .axi_s_awlock(uart_awlock),      .axi_s_awcache(uart_awcache),      .axi_s_awprot(uart_awprot),      .axi_s_awvalid(uart_awvalid),      .axi_s_awready(uart_awready),      .axi_s_wid(uart_wid),      .axi_s_wdata(uart_wdata),      .axi_s_wstrb(uart_wstrb),      .axi_s_wlast(uart_wlast),      .axi_s_wvalid(uart_wvalid),      .axi_s_wready(uart_wready),      .axi_s_bid(uart_bid),      .axi_s_bresp(uart_bresp),      .axi_s_bvalid(uart_bvalid),      .axi_s_bready(uart_bready),      .axi_s_arid(uart_arid),      .axi_s_araddr(uart_araddr),      .axi_s_arlen(uart_arlen),      .axi_s_arsize(uart_arsize),      .axi_s_arburst(uart_arburst),      .axi_s_arlock(uart_arlock),      .axi_s_arcache(uart_arcache),      .axi_s_arprot(uart_arprot),      .axi_s_arvalid(uart_arvalid),      .axi_s_arready(uart_arready),      .axi_s_rid(uart_rid),      .axi_s_rdata(uart_rdata),      .axi_s_rresp(uart_rresp),      .axi_s_rlast(uart_rlast),      .axi_s_rvalid(uart_rvalid),      .axi_s_rready(uart_rready),      .apb_rw_dma(1'b0),      .apb_psel_dma(1'b0),      .apb_enab_dma(1'b0),      .apb_addr_dma(20'b0),      .apb_valid_dma(1'b0),      .apb_wdata_dma(32'b0),      .apb_rdata_dma(),      .apb_ready_dma(),      .dma_grant(),      .dma_req_o(),      .dma_ack_i(1'b0),      //UART0       .uart0_txd_i(uart0_txd_i),      .uart0_txd_o(uart0_txd_o),      .uart0_txd_oe(uart0_txd_oe),      .uart0_rxd_i(uart0_rxd_i),      .uart0_rxd_o(uart0_rxd_o),      .uart0_rxd_oe(uart0_rxd_oe),      .uart0_rts_o(uart0_rts_o),      .uart0_dtr_o(uart0_dtr_o),      .uart0_cts_i(uart0_cts_i),      .uart0_dsr_i(uart0_dsr_i),      .uart0_dcd_i(uart0_dcd_i),      .uart0_ri_i(uart0_ri_i),      .uart0_int(uart0_int)  );  //例化confreg  confreg #(      .SIMULATION(SIMULATION)  ) u_confreg (      .aclk(sys_clk),      .aresetn(sys_resetn),      .cpu_clk(cpu_clk),      .cpu_resetn(cpu_resetn),      .s_awid(confreg_awid),      .s_awaddr(confreg_awaddr),      .s_awlen(confreg_awlen),      .s_awsize(confreg_awsize),      .s_awburst(confreg_awburst),      .s_awlock(confreg_awlock),      .s_awcache(confreg_awcache),      .s_awprot(confreg_awprot),      .s_awvalid(confreg_awvalid),      .s_wid(confreg_wid),      .s_wdata(confreg_wdata),      .s_wstrb(confreg_wstrb),      .s_wlast(confreg_wlast),      .s_wvalid(confreg_wvalid),      .s_bready(confreg_bready),      .s_arid(confreg_arid),      .s_araddr(confreg_araddr),      .s_arlen(confreg_arlen),      .s_arsize(confreg_arsize),      .s_arburst(confreg_arburst),      .s_arlock(confreg_arlock),      .s_arcache(confreg_arcache),      .s_arprot(confreg_arprot),      .s_arvalid(confreg_arvalid),      .s_rready(confreg_rready),      .s_awready(confreg_awready),      .s_wready(confreg_wready),      .s_bid(confreg_bid),      .s_bresp(confreg_bresp),      .s_bvalid(confreg_bvalid),      .s_arready(confreg_arready),      .s_rid(confreg_rid),      .s_rdata(confreg_rdata),      .s_rresp(confreg_rresp),      .s_rlast(confreg_rlast),      .s_rvalid(confreg_rvalid),      .switch(dip_sw),      .touch_btn(touch_btn),      .led(leds),      .dpy0(dpy0),      .dpy1(dpy1),      .confreg_int()  );endmodule</code></pre> </details>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>25-4-25</title>
    <link href="/2025/04/25/25-4-25/"/>
    <url>/2025/04/25/25-4-25/</url>
    
    <content type="html"><![CDATA[<figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">hexo clean <span class="hljs-variable">&amp;&amp;</span> hexo g <span class="hljs-variable">&amp;&amp;</span> hexo d<br></code></pre></td></tr></table></figure><h1 id="今日份代码-——-主要是gocm"><a href="#今日份代码-——-主要是gocm" class="headerlink" title="今日份代码 —— 主要是gocm"></a>今日份代码 —— 主要是gocm</h1><p>还是那个问题，gocm最后小车突然停会抖，导致摄像头的s过大，导致速度过大</p><p>c的openmv代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs python">THRESHOLD = (<span class="hljs-number">0</span>, <span class="hljs-number">86</span>, <span class="hljs-number">5</span>, <span class="hljs-number">49</span>, <span class="hljs-number">5</span>, <span class="hljs-number">68</span>)<br><span class="hljs-keyword">import</span> sensor, image, time,math<br><span class="hljs-keyword">from</span> pyb <span class="hljs-keyword">import</span> LED<br><span class="hljs-keyword">from</span> pid <span class="hljs-keyword">import</span> PID<br><span class="hljs-keyword">from</span> machine <span class="hljs-keyword">import</span> UART<br>uart = UART(<span class="hljs-number">3</span>, <span class="hljs-number">115200</span>)<br>rho_pid = PID(p=<span class="hljs-number">0.3</span>, i=<span class="hljs-number">0</span>)<br>theta_pid = PID(p=<span class="hljs-number">0.004</span>, i=<span class="hljs-number">0</span>)<br>LED(<span class="hljs-number">1</span>).on()<br>LED(<span class="hljs-number">2</span>).on()<br>LED(<span class="hljs-number">3</span>).on()<br>sensor.reset()<br>sensor.set_vflip(<span class="hljs-literal">True</span>)<br>sensor.set_hmirror(<span class="hljs-literal">True</span>)<br>sensor.set_pixformat(sensor.RGB565)<br>sensor.set_framesize(sensor.QQQVGA)<br>sensor.skip_frames(time = <span class="hljs-number">2000</span>)<br>clock = time.clock()<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sending_data3</span>(<span class="hljs-params">x</span>):<br>FH = <span class="hljs-built_in">bytearray</span>([x])<br>uart.write(FH);<br><span class="hljs-keyword">while</span>(<span class="hljs-literal">True</span>):<br>clock.tick()<br>img = sensor.snapshot().binary([THRESHOLD])<br>line = img.get_regression([(<span class="hljs-number">100</span>,<span class="hljs-number">100</span>)], robust = <span class="hljs-literal">True</span>)<br><span class="hljs-keyword">if</span> (line):<br>rho_err = <span class="hljs-built_in">abs</span>(line.rho())-img.width()/<span class="hljs-number">2</span><br><span class="hljs-keyword">if</span> line.theta()&gt;<span class="hljs-number">90</span>:<br>theta_err = line.theta()-<span class="hljs-number">180</span><br><span class="hljs-keyword">else</span>:<br>theta_err = line.theta()<br>img.draw_line(line.line(), color = <span class="hljs-number">127</span>)<br><span class="hljs-built_in">print</span>(rho_err,line.magnitude(),rho_err)<br><span class="hljs-keyword">if</span> line.magnitude()&gt;<span class="hljs-number">8</span>:<br>rho_output = rho_pid.get_pid(rho_err,<span class="hljs-number">1</span>)<br>theta_output = theta_pid.get_pid(theta_err,<span class="hljs-number">1</span>)<br>output = rho_output+theta_output<br>e = <span class="hljs-number">123</span><br>d = <span class="hljs-string">&quot;%d&quot;</span> %(output)<br>uart.write(<span class="hljs-string">&#x27;a&#x27;</span>);<br>uart.write(<span class="hljs-string">&#x27;b&#x27;</span>);<br>uart.write(d);<br>uart.write(<span class="hljs-string">&#x27;e&#x27;</span>);<br>time.sleep_ms(<span class="hljs-number">5</span>)<br><span class="hljs-keyword">else</span>:<br>uart.write(<span class="hljs-string">&#x27;a&#x27;</span>);<br>uart.write(<span class="hljs-string">&#x27;b&#x27;</span>);<br>uart.write(<span class="hljs-string">&#x27;0&#x27;</span>);<br>uart.write(<span class="hljs-string">&#x27;e&#x27;</span>);<br>time.sleep_ms(<span class="hljs-number">5</span>)<br><span class="hljs-keyword">else</span>:<br>sending_data3(<span class="hljs-number">0x00</span>);<br>time.sleep_ms(<span class="hljs-number">5</span>)<br><span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><p>小车工程的串口和主函数的</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">if</span>(x==<span class="hljs-number">1</span>)<br>  Load(<span class="hljs-number">30</span><span class="hljs-number">-4</span>*s,<span class="hljs-number">30</span>+<span class="hljs-number">4</span>*s);<br>  <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData==<span class="hljs-number">0x00</span>&amp;&amp;x==<span class="hljs-number">1</span>&amp;&amp;m==<span class="hljs-number">0</span>&amp;&amp;k==<span class="hljs-number">0</span>)&#123;<br>  HAL_Delay(<span class="hljs-number">500</span>);<br>  Load(<span class="hljs-number">10</span>,<span class="hljs-number">-10</span>);<br>  <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)&#123;<span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>&amp;&amp;s==<span class="hljs-number">0</span>)<span class="hljs-keyword">break</span>;HAL_Delay(<span class="hljs-number">1</span>);&#125;<br>  m=<span class="hljs-number">1</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData==<span class="hljs-number">0x00</span>&amp;&amp;x==<span class="hljs-number">1</span>&amp;&amp;m==<span class="hljs-number">1</span>&amp;&amp;k==<span class="hljs-number">0</span>)&#123;<br>  HAL_Delay(<span class="hljs-number">500</span>);<br>  Load(<span class="hljs-number">10</span>,<span class="hljs-number">-10</span>);<br>  <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)&#123;<span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>&amp;&amp;s==<span class="hljs-number">0</span>)<span class="hljs-keyword">break</span>;HAL_Delay(<span class="hljs-number">1</span>);&#125;<br>  m=<span class="hljs-number">1</span>;k=<span class="hljs-number">1</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData==<span class="hljs-number">0x00</span>&amp;&amp;x==<span class="hljs-number">1</span>&amp;&amp;m==<span class="hljs-number">1</span>&amp;&amp;k==<span class="hljs-number">1</span>)&#123;<br>  HAL_Delay(<span class="hljs-number">500</span>);<br>  Load(<span class="hljs-number">-20</span>,<span class="hljs-number">20</span>);<br>  HAL_Delay(<span class="hljs-number">550</span>);<br>  Load(<span class="hljs-number">20</span>,<span class="hljs-number">20</span>);<br>   HAL_Delay(<span class="hljs-number">950</span>);<br>   Load(<span class="hljs-number">-10</span>,<span class="hljs-number">10</span>);<br><br> HAL_Delay(<span class="hljs-number">700</span>);<br> <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)&#123;<span class="hljs-keyword">if</span>(g_ucUsart2ReceiveData!=<span class="hljs-number">0x00</span>&amp;&amp;s==<span class="hljs-number">0</span>)<span class="hljs-keyword">break</span>;HAL_Delay(<span class="hljs-number">1</span>);&#125;<br> Load(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>  HAL_Delay(<span class="hljs-number">20</span>);<br>  m=<span class="hljs-number">0</span>;k=<span class="hljs-number">0</span>;<br>  &#125;<br></code></pre></td></tr></table></figure><p>串口</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">void</span> <span class="hljs-title function_">HAL_UART_RxCpltCallback</span><span class="hljs-params">(UART_HandleTypeDef *huart)</span><br>&#123;<br><span class="hljs-keyword">if</span>( huart==&amp;huart6)<br>&#123;<br><span class="hljs-comment">//HAL_UART_Transmit(&amp;huart1,&amp;rx1,1,50);</span><br>usartCamera_Receive_Data(g_ucUsart2ReceiveData);<br>HAL_UART_Receive_IT(&amp;huart6,&amp;g_ucUsart2ReceiveData,<span class="hljs-number">1</span>);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>处理数据的函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> <span class="hljs-title function_">usartCamera_Receive_Data</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> data)</span><br>&#123;<br><span class="hljs-type">static</span> <span class="hljs-type">uint8_t</span> state = <span class="hljs-number">0</span>;<span class="hljs-comment">//定义静态static 变量</span><br><br><span class="hljs-keyword">if</span>(state==<span class="hljs-number">0</span>&amp;&amp;data==<span class="hljs-number">0x61</span>) <span class="hljs-comment">//判断第一个是不是帧头0xA5</span><br>&#123;<br>state=<span class="hljs-number">1</span>;<span class="hljs-comment">//是帧头0xA5 赋值state=1 表示接收下一个数据</span><br><span class="hljs-comment">//数据存储在数组中 &quot;g_ucUsart2ReceivCounter++&quot;,这里是先用后加，比如g_ucUsart2ReceivCounter 初值为0，执行这个是先g_ucaUsart3ReceiveBuffer[0]=data，然后g_ucUsart3ReceivCounter++，即后g_ucUsart3ReceivCounter = 1的</span><br>g_ucaUsart2ReceiveBuffer[g_ucUsart2ReceivCounter++] = data;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(state==<span class="hljs-number">1</span>&amp;&amp;data==<span class="hljs-number">0x62</span>) <span class="hljs-comment">//第二个是不是帧头0xA6</span><br>&#123;<br>state=<span class="hljs-number">2</span>;<span class="hljs-comment">//如果第二个是帧头0xA6 赋值state=2 表示接收下一个数据</span><br>g_ucaUsart2ReceiveBuffer[g_ucUsart2ReceivCounter++] = data;<span class="hljs-comment">//保存数据</span><br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(state==<span class="hljs-number">2</span>)<span class="hljs-comment">//然后确定开头是0XA5 0XA6 就开始接收</span><br>&#123;<br>g_ucaUsart2ReceiveBuffer[g_ucUsart2ReceivCounter++]=data;<br><span class="hljs-keyword">if</span>(g_ucUsart2ReceivCounter&gt;<span class="hljs-number">9</span>||data==<span class="hljs-number">0x65</span>) state=<span class="hljs-number">3</span>;  <span class="hljs-comment">//接收大于9个或者接收到帧尾0X5B 就置位状态三</span><br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(state==<span class="hljs-number">3</span>) <span class="hljs-comment">//状态三</span><br>&#123;<br>x=<span class="hljs-number">1</span>;<br>s=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">if</span>(g_ucaUsart2ReceiveBuffer[g_ucUsart2ReceivCounter<span class="hljs-number">-1</span>] == <span class="hljs-number">0x65</span>)  <span class="hljs-comment">//确定 最后一个是不是0x5B帧尾 是帧尾0x5B 就认为通信正确 处理数据</span><br>&#123;<br>state = <span class="hljs-number">0</span>;<span class="hljs-comment">//这里就可以处理数据了、处理完记得清空数组和重置标志位与计数值</span><br><br><span class="hljs-keyword">if</span>(g_ucaUsart2ReceiveBuffer[<span class="hljs-number">2</span>]!=<span class="hljs-number">0x2d</span>)<br>            &#123;<br><span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(i=<span class="hljs-number">2</span>;i&lt;g_ucUsart2ReceivCounter<span class="hljs-number">-1</span>;i++)<br>&#123;<br>s*=<span class="hljs-number">10</span>;<br><span class="hljs-keyword">if</span>(g_ucaUsart2ReceiveBuffer[i]<span class="hljs-number">-48</span>&lt;<span class="hljs-number">10</span>)<br>s+=(g_ucaUsart2ReceiveBuffer[i]<span class="hljs-number">-48</span>);<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-type">int</span> q=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(q=<span class="hljs-number">3</span>;q&lt;g_ucUsart2ReceivCounter<span class="hljs-number">-1</span>;q++)<br>&#123;<br>s*=<span class="hljs-number">10</span>;<br><span class="hljs-keyword">if</span>(g_ucaUsart2ReceiveBuffer[q]<span class="hljs-number">-48</span>&lt;<span class="hljs-number">10</span>)<br>s+=(g_ucaUsart2ReceiveBuffer[q]<span class="hljs-number">-48</span>);<br>&#125;<br>s=-s;<br>&#125;<br>g_ucUsart2ReceivCounter = <span class="hljs-number">0</span>;<span class="hljs-comment">//清零计数值</span><br><span class="hljs-comment">//2.然后清空数组</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">10</span>;i++)&#123; g_ucaUsart2ReceiveBuffer[i]=<span class="hljs-number">0x00</span>;&#125;<span class="hljs-comment">//清空数组</span><br><br><span class="hljs-keyword">return</span> s;<br>&#125;<br><span class="hljs-keyword">else</span><span class="hljs-comment">//不是帧尾说明通信错误重新开始接收</span><br>&#123;<br>state=<span class="hljs-number">0</span>;<br>g_ucUsart2ReceivCounter =<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">10</span>;i++) &#123; g_ucaUsart2ReceiveBuffer[i]=<span class="hljs-number">0x00</span>;&#125;<span class="hljs-comment">//清空数组</span><br>s=<span class="hljs-number">0</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<span class="hljs-comment">//其他异常清空</span><br>state=<span class="hljs-number">0</span>;<br>g_ucUsart2ReceivCounter =<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">10</span>;i++) g_ucaUsart2ReceiveBuffer[i]=<span class="hljs-number">0x00</span>;<span class="hljs-comment">//清空数组</span><br>s=<span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<span class="hljs-comment">//</span><br>&#125;<br></code></pre></td></tr></table></figure><p>前12个二维码的值</p><p><a href="https://5v60oq.58u.cn/a/RlYaaoM/">https://5v60oq.58u.cn/a/RlYaaoM/</a><br><a href="https://5v60oq.58u.cn/a/bDNqqqx/">https://5v60oq.58u.cn/a/bDNqqqx/</a><br><a href="https://5v60oq.58u.cn/a/RMkwwwj/">https://5v60oq.58u.cn/a/RMkwwwj/</a><br><a href="https://5v60oq.58u.cn/a/Ay4eeeX/">https://5v60oq.58u.cn/a/Ay4eeeX/</a><br><a href="https://5v60oq.58u.cn/a/O8eDDDV/">https://5v60oq.58u.cn/a/O8eDDDV/</a><br><a href="https://5v60oq.58u.cn/a/O9Dmmmy/">https://5v60oq.58u.cn/a/O9Dmmmy/</a><br><a href="https://5v60oq.58u.cn/a/OdB888K/">https://5v60oq.58u.cn/a/OdB888K/</a><br><a href="https://5v60oq.58u.cn/a/AGwdddv/">https://5v60oq.58u.cn/a/AGwdddv/</a><br><a href="https://5v60oq.58u.cn/a/AQp7778/">https://5v60oq.58u.cn/a/AQp7778/</a><br><a href="https://5v60oq.58u.cn/a/R4e222J/">https://5v60oq.58u.cn/a/R4e222J/</a><br><a href="https://5v60oq.58u.cn/a/AV8YYYN/">https://5v60oq.58u.cn/a/AV8YYYN/</a><br><a href="https://5v60oq.58u.cn/a/AxqWWWQ/">https://5v60oq.58u.cn/a/AxqWWWQ/</a></p><p>目前写的识别二维码的代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 二维码识别示例</span><br><span class="hljs-keyword">import</span> sensor, image, time<br><span class="hljs-keyword">from</span> machine <span class="hljs-keyword">import</span> UART <span class="hljs-comment">#引入串口模块</span><br>sensor.reset()<br>sensor.set_pixformat(sensor.GRAYSCALE)<br>sensor.set_framesize(sensor.VGA)<br>sensor.set_windowing((<span class="hljs-number">240</span>, <span class="hljs-number">240</span>)) <span class="hljs-comment"># 看VGA分辨率中间的240x240像素。</span><br>sensor.skip_frames(<span class="hljs-number">30</span>)<br>sensor.set_auto_gain(<span class="hljs-literal">False</span>)  <span class="hljs-comment"># 必须关闭此功能，以防止图像冲洗…</span><br><br>uart = UART(<span class="hljs-number">3</span>, <span class="hljs-number">115200</span>)<br>clock = time.clock()<br>last_payload = <span class="hljs-literal">None</span>  <span class="hljs-comment"># 用来保存上一次识别到的二维码内容</span><br>THRESHOLD = (<span class="hljs-number">0</span>, <span class="hljs-number">120</span>)  <span class="hljs-comment"># 可以根据具体情况调整阈值，0 是黑色，100 是白色</span><br><span class="hljs-keyword">while</span>(<span class="hljs-literal">True</span>):<br>    clock.tick()<br>    img = sensor.snapshot()<br>   <span class="hljs-comment"># for code in img.find_qrcodes():</span><br>    <span class="hljs-comment">#    print(code)</span><br>    <span class="hljs-comment">#img.binary([THRESHOLD])  # 对图像进行二值化处理</span><br>    codes = img.find_qrcodes()<br>    <span class="hljs-keyword">if</span> codes:<br>        payload = codes[<span class="hljs-number">0</span>].payload()  <span class="hljs-comment"># 假设只识别一个二维码</span><br>        <span class="hljs-keyword">if</span> payload != last_payload:<br>            last_payload = payload<br>            <span class="hljs-built_in">print</span>(payload)<br>            <span class="hljs-keyword">if</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/RlYaaoM/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;1&quot;</span>:<br>                out = <span class="hljs-string">&quot;1&quot;</span><br>                uart.write(<span class="hljs-string">&#x27;a&#x27;</span>)<br>                uart.write(<span class="hljs-string">&#x27;c&#x27;</span>)<br>                uart.write(out)<br>                uart.write(<span class="hljs-string">&#x27;e&#x27;</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/bDNqqqx/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;2&quot;</span>:<br>                out = <span class="hljs-string">&quot;2&quot;</span><br>                uart.write(<span class="hljs-string">&#x27;a&#x27;</span>)<br>                uart.write(<span class="hljs-string">&#x27;c&#x27;</span>)<br>                uart.write(out)<br>                uart.write(<span class="hljs-string">&#x27;e&#x27;</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/RMkwwwj/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;3&quot;</span>:<br>                out = <span class="hljs-string">&quot;3&quot;</span><br>                uart.write(<span class="hljs-string">&#x27;a&#x27;</span>)<br>                uart.write(<span class="hljs-string">&#x27;c&#x27;</span>)<br>                uart.write(out)<br>                uart.write(<span class="hljs-string">&#x27;e&#x27;</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/Ay4eeeX/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;4&quot;</span>:<br>                out = <span class="hljs-string">&quot;4&quot;</span><br>                uart.write(<span class="hljs-string">&#x27;a&#x27;</span>)<br>                uart.write(<span class="hljs-string">&#x27;c&#x27;</span>)<br>                uart.write(out)<br>                uart.write(<span class="hljs-string">&#x27;e&#x27;</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/O8eDDDV/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;5&quot;</span>:<br>                out = <span class="hljs-string">&quot;5&quot;</span><br>                uart.write(<span class="hljs-string">&#x27;a&#x27;</span>)<br>                uart.write(<span class="hljs-string">&#x27;c&#x27;</span>)<br>                uart.write(out)<br>                uart.write(<span class="hljs-string">&#x27;e&#x27;</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/O9Dmmmy/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;6&quot;</span>:<br>                out = <span class="hljs-string">&quot;6&quot;</span><br>                uart.write(<span class="hljs-string">&#x27;a&#x27;</span>)<br>                uart.write(<span class="hljs-string">&#x27;c&#x27;</span>)<br>                uart.write(out)<br>                uart.write(<span class="hljs-string">&#x27;e&#x27;</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/OdB888K/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;7&quot;</span>:<br>                out = <span class="hljs-string">&quot;7&quot;</span><br>                uart.write(<span class="hljs-string">&#x27;a&#x27;</span>)<br>                uart.write(<span class="hljs-string">&#x27;c&#x27;</span>)<br>                uart.write(out)<br>                uart.write(<span class="hljs-string">&#x27;e&#x27;</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AGwdddv/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;8&quot;</span>:<br>                out = <span class="hljs-string">&quot;8&quot;</span><br>                uart.write(<span class="hljs-string">&#x27;a&#x27;</span>)<br>                uart.write(<span class="hljs-string">&#x27;c&#x27;</span>)<br>                uart.write(out)<br>                uart.write(<span class="hljs-string">&#x27;e&#x27;</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AQp7778/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;9&quot;</span>:<br>                out = <span class="hljs-string">&quot;9&quot;</span><br>                uart.write(<span class="hljs-string">&#x27;a&#x27;</span>)<br>                uart.write(<span class="hljs-string">&#x27;c&#x27;</span>)<br>                uart.write(out)<br>                uart.write(<span class="hljs-string">&#x27;e&#x27;</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/R4e222J/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;10&quot;</span>:<br>                out = <span class="hljs-string">&quot;10&quot;</span><br>                uart.write(<span class="hljs-string">&#x27;a&#x27;</span>)<br>                uart.write(<span class="hljs-string">&#x27;c&#x27;</span>)<br>                uart.write(out)<br>                uart.write(<span class="hljs-string">&#x27;e&#x27;</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AV8YYYN/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;11&quot;</span>:<br>                out = <span class="hljs-string">&quot;11&quot;</span><br>                uart.write(<span class="hljs-string">&#x27;a&#x27;</span>)<br>                uart.write(<span class="hljs-string">&#x27;c&#x27;</span>)<br>                uart.write(out)<br>                uart.write(<span class="hljs-string">&#x27;e&#x27;</span>)<br>            <span class="hljs-keyword">elif</span> payload == <span class="hljs-string">&quot;https://5v60oq.58u.cn/a/AxqWWWQ/&quot;</span> <span class="hljs-keyword">or</span> payload ==<span class="hljs-string">&quot;12&quot;</span>:<br>                out = <span class="hljs-string">&quot;12&quot;</span><br>                uart.write(<span class="hljs-string">&#x27;a&#x27;</span>)<br>                uart.write(<span class="hljs-string">&#x27;c&#x27;</span>)<br>                uart.write(out)<br>                uart.write(<span class="hljs-string">&#x27;e&#x27;</span>)<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>25-4-20</title>
    <link href="/2025/04/20/25-4-20/"/>
    <url>/2025/04/20/25-4-20/</url>
    
    <content type="html"><![CDATA[<figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">hexo clean <span class="hljs-variable">&amp;&amp;</span> hexo g <span class="hljs-variable">&amp;&amp;</span> hexo d<br></code></pre></td></tr></table></figure><h1 id="一、"><a href="#一、" class="headerlink" title="一、"></a>一、</h1><p>​c在搞通讯。</p><p>​通讯搞好了，目前在弄循迹。小车不在我这测不了距离，不用步进电机应该可以吧，想买个麦克轮but没money算了，又报销不了。</p><p>​把ppt做了，之后看下位置PID，积分限幅那些加上。</p><p>​让小车走一定距离的误差大可能是因为没弄位置环？到指定距离后有惯性停不下来。之后看下江科大讲的看能不能改下代码，加上摄像头巡线误差肯定更大。<br>​今天啥都没干光测了距离。之后向c要下摄像头和通信的代码。不对还有个问题，转弯的时候踩线了，如果摄像头能识别拐角会更好。</p><h1 id="二、一些代码"><a href="#二、一些代码" class="headerlink" title="二、一些代码"></a>二、一些代码</h1><p>这是行驶一段距离的代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">void</span> <span class="hljs-title function_">gocm</span><span class="hljs-params">(<span class="hljs-type">int</span> cm)</span><br>&#123;<br><span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>    &#123;<br>        Milleage_flag = <span class="hljs-number">1</span>;<br>        motorPidSetSpeed(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br>        <span class="hljs-keyword">if</span>((<span class="hljs-type">int</span>)Mileage &gt;= cm * <span class="hljs-number">10</span>)<br>        &#123;<br>            Load(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>            Mileage = <span class="hljs-number">0</span>;<br>            Milleage_flag = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>        HAL_Delay(<span class="hljs-number">5</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>中断里面算速度和里程</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">if</span>(htim == &amp;htim3)<span class="hljs-comment">//htim3  500HZ 2ms中断一次</span><br>&#123; <br><br>TimerCount++;<span class="hljs-comment">//每次进入中断 、中断计数变量递增</span><br><span class="hljs-keyword">if</span>(TimerCount %<span class="hljs-number">5</span> == <span class="hljs-number">0</span>)<span class="hljs-comment">//每10ms 执行一次</span><br>&#123; <br>Encode1Count = -(<span class="hljs-type">short</span>)__HAL_TIM_GET_COUNTER(&amp;htim4);<span class="hljs-comment">//获得当前编码器计数值并赋值 (short):是类型转化 -:是因为电机对侧安装</span><br>Encode2Count = (<span class="hljs-type">short</span>)__HAL_TIM_GET_COUNTER(&amp;htim2);<br>cnt2+=Encode1Count;<br>__HAL_TIM_SET_COUNTER(&amp;htim2,<span class="hljs-number">0</span>);<span class="hljs-comment">//每次获得编码器计数值后都清零，这样每次计数值就是变化量</span><br>__HAL_TIM_SET_COUNTER(&amp;htim4,<span class="hljs-number">0</span>);<br><span class="hljs-comment">/* 电机速度 = 编码器计数值`*编码器读取频率/减速比/编码器线数/4倍频 */</span><br>Motor1Speed = (<span class="hljs-type">float</span>)Encode1Count*<span class="hljs-number">100</span>/<span class="hljs-number">28</span>/<span class="hljs-number">13</span>/<span class="hljs-number">4</span>;<br>    Motor2Speed = (<span class="hljs-type">float</span>)Encode2Count*<span class="hljs-number">100</span>/<span class="hljs-number">28</span>/<span class="hljs-number">13</span>/<span class="hljs-number">4</span>;<br>go_left  += <span class="hljs-number">0.01f</span>*Motor1Speed*<span class="hljs-number">204.2f</span>;<br>go_right += <span class="hljs-number">0.01f</span>*Motor1Speed*<span class="hljs-number">204.2f</span>;<br>go += <span class="hljs-number">0.005f</span>*(Motor1Speed+Motor2Speed)*<span class="hljs-number">204.2f</span>;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f\r\n&quot;</span>,cnt2,Mileage1,Mileage,Motor1Speed,g_ftracingPidOut1,pidMotor2Speed.target_val,pidMotor2Speed.err_sum,out);<br>&#125;<br>        <span class="hljs-keyword">if</span>(Milleage_flag == <span class="hljs-number">1</span>)<br>        &#123;<br><span class="hljs-keyword">if</span>(TimerCount %<span class="hljs-number">5</span> == <span class="hljs-number">0</span>)<span class="hljs-comment">//每10ms执行一次</span><br>            &#123;<br>               <span class="hljs-comment">/*里程 += 时间*电机速度*周长*/</span><br>Mileage1 += <span class="hljs-number">0.01f</span>*Motor1Speed*<span class="hljs-number">204.2f</span>;<br>Mileage2 += <span class="hljs-number">0.01f</span>*Motor2Speed*<span class="hljs-number">204.2f</span>;<br>Mileage += <span class="hljs-number">0.005f</span>*(Motor1Speed+Motor2Speed)*<span class="hljs-number">204.2f</span>;<br>               <span class="hljs-comment">/*控制电机转速*/</span><br>                <span class="hljs-comment">//Load(PID_realize2(&amp;pidMotor1Speed,Motor1Speed),PID_realize2(&amp;pidMotor2Speed,Motor2Speed));</span><br>                TimerCount=<span class="hljs-number">0</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><p>这是11昨天发的识别最大色块中心点x坐标的代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sensor, image, time,math,machine<br><span class="hljs-keyword">from</span> pyb <span class="hljs-keyword">import</span> UART<br><span class="hljs-keyword">from</span> vl53l1x <span class="hljs-keyword">import</span> VL53L1X<br><span class="hljs-keyword">from</span> pyb <span class="hljs-keyword">import</span> LED<br><br>uart_A = UART(<span class="hljs-number">3</span>, <span class="hljs-number">115200</span>)<br>green_led = LED(<span class="hljs-number">2</span>)<br>sensor.reset()<br>sensor.set_pixformat(sensor.RGB565)<br><span class="hljs-comment"># 关闭自动白平衡</span><br>sensor.set_auto_exposure(<span class="hljs-literal">False</span>)<br>sensor.set_auto_whitebal(<span class="hljs-literal">False</span>)<br>sensor.set_auto_gain(<span class="hljs-literal">False</span>)<br>sensor.set_framesize(sensor.QQVGA)<br>sensor.skip_frames(<span class="hljs-number">10</span>)<br>clock = time.clock()<br><br>red_threshold=(<span class="hljs-number">70</span>, <span class="hljs-number">100</span>, <span class="hljs-number">5</span>, <span class="hljs-number">124</span>, -<span class="hljs-number">128</span>, <span class="hljs-number">127</span>)<br>green_threshold=(<span class="hljs-number">43</span>, <span class="hljs-number">100</span>, -<span class="hljs-number">35</span>, -<span class="hljs-number">128</span>, <span class="hljs-number">11</span>, <span class="hljs-number">127</span>)<br>lastx = <span class="hljs-number">0</span><br>lastx2 = <span class="hljs-number">0</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sending_data3</span>(<span class="hljs-params">x</span>):<br>    FH = <span class="hljs-built_in">bytearray</span>([x])<br>    uart_A.write(FH);<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">send_uart</span>(<span class="hljs-params">deflection_angle,deflection_angle2</span>):<br>    sending_data3(<span class="hljs-number">0xA5</span>)<br>    time.sleep_ms(<span class="hljs-number">5</span>)<br>    sending_data3(deflection_angle)<br>    time.sleep_ms(<span class="hljs-number">5</span>)<br>    sending_data3(deflection_angle2)<br>    time.sleep_ms(<span class="hljs-number">5</span>)<br>    sending_data3(<span class="hljs-number">0x5B</span>)<br>    time.sleep_ms(<span class="hljs-number">5</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">find_max</span>(<span class="hljs-params">blobs</span>):<br>    max_size=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> blob <span class="hljs-keyword">in</span> blobs:<br>        <span class="hljs-keyword">if</span> blob[<span class="hljs-number">2</span>]*blob[<span class="hljs-number">3</span>] &gt; max_size:<br>            max_blob=blob<br>            max_size = blob[<span class="hljs-number">2</span>]*blob[<span class="hljs-number">3</span>]<br>    <span class="hljs-keyword">return</span> max_blob<br><br><span class="hljs-keyword">while</span>(<span class="hljs-literal">True</span>):<br>    clock.tick()<br>    img = sensor.snapshot()<br>    green_led.on()<br>    blobs = img.find_blobs([red_threshold])<br>    <span class="hljs-keyword">if</span> blobs:<br>        max_blob = find_max(blobs)<br>        lastx = max_blob.cx()<br>        <span class="hljs-comment">#lasty = max_blob.cy()</span><br>        img.draw_cross(max_blob.cx(), max_blob.cy())<br>    blobs2 = img.find_blobs([green_threshold])<br>    <span class="hljs-keyword">if</span> blobs2:<br>        max_blob2 = find_max(blobs2)<br>        lastx2 = max_blob2.cx()<br>        <span class="hljs-comment">#lasty = max_blob.cy()</span><br>        img.draw_cross(max_blob2.cx(), max_blob2.cy())<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;lastx:&quot;</span>,lastx,<span class="hljs-string">&quot;lastx2:&quot;</span>,lastx2)<br>    <span class="hljs-keyword">if</span> lastx != <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> lastx2 != <span class="hljs-number">0</span>:<br>        send_uart(lastx,lastx2)<br>        <br></code></pre></td></tr></table></figure><p>11发的32联合openmv发的坐标值的调整速度的代码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c">diffx = ballx - target_x;      <span class="hljs-comment">//最大色块的中心值和目标值(80)相减</span><br>      diffx = diffx &gt; <span class="hljs-number">40</span>? <span class="hljs-number">40</span> :diffx;<br>      diffx = diffx &lt; <span class="hljs-number">-40</span>? <span class="hljs-number">-40</span> :diffx;<br>      g_ftracingPidOut = PID_realize(&amp;pidpositionx,diffx);<br>      g_ftracingPidOut1 = <span class="hljs-number">0</span> + g_ftracingPidOut;<span class="hljs-comment">//主要还是原地的移动，保持在视线的中心</span><br>      g_ftracingPidOut2 = <span class="hljs-number">0</span> - g_ftracingPidOut;<br>      <span class="hljs-keyword">if</span> (g_ftracingPidOut1 &gt; <span class="hljs-number">2.7f</span>) g_ftracingPidOut1 = <span class="hljs-number">2.7f</span>;<br>      <span class="hljs-keyword">if</span> (g_ftracingPidOut1 &lt; <span class="hljs-number">-2.7f</span>) g_ftracingPidOut1 = <span class="hljs-number">-2.7f</span>;<br>      <span class="hljs-keyword">if</span> (g_ftracingPidOut2 &gt; <span class="hljs-number">2.7f</span>) g_ftracingPidOut2 = <span class="hljs-number">2.7f</span>;<br>      <span class="hljs-keyword">if</span> (g_ftracingPidOut2 &lt; <span class="hljs-number">-2.7f</span>) g_ftracingPidOut2 = <span class="hljs-number">-2.7f</span>;<br>      motorPidSetSpeed(g_ftracingPidOut1,g_ftracingPidOut2);<br>      HAL_Delay(<span class="hljs-number">5</span>);<span class="hljs-comment">//非常的重要！！！！！！！</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>25-4-19</title>
    <link href="/2025/04/19/25-4-19/"/>
    <url>/2025/04/19/25-4-19/</url>
    
    <content type="html"><![CDATA[<h1 id="一、校赛（5-4截止）"><a href="#一、校赛（5-4截止）" class="headerlink" title="一、校赛（5.4截止）"></a>一、校赛（5.4截止）</h1><h2 id="1-第一块板子"><a href="#1-第一块板子" class="headerlink" title="1.第一块板子"></a>1.第一块板子</h2><p>​11画了板子，but 输出不了3.3V，且一个串口和要用到的TIM冲突了（他看错了吗），本来觉得没问题，但openmv需要3.3V供电，陈你怎么没发现啊。总之现在用模块输出。</p><p>​地图到了我才发现。陈在搞摄像头。串口那个代码太复杂了，我之后看下蓝桥杯的串口改一下，变量名也太长。</p><p>​昨天今天看了PID，江科大讲的还挺细。</p><p>​但是目前还不知道之后的代码怎么写，看陈那边的摄像头如何吧，能识别拐弯的话应该能轻松一点。</p><h2 id="2-第二块板子"><a href="#2-第二块板子" class="headerlink" title="2.第二块板子"></a>2.第二块板子</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/04/19/hello-world/"/>
    <url>/2025/04/19/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
